openapi: 3.0.0
servers:
  - url: https://api.reworkly.com
    description: Production
  - url: http://localhost:8080
    description: Local Development
info:
  title: Reworkly APIs
  version: v1
  termsOfService: "https://developer.reworkly.com/legal/"
  contact:
    name: Support
    email: team@reworkly.com
    url: https://github.com/reworkly
  x-logo:
    url: "https://github.com/reworkly.png"
    altText: Reworkly logo
  description: |
    # Introduction
    Use Reworkly APIs to make calls and get the data you need to integrate your application with our platform.

    **Endpoints:**

    - [Account](#tag/account-overview)
    - [Recruiting](#tag/recruiting-overview)
    - [Onboarding](#tag/onboarding-overview)
    - [Employees](#tag/employees-overview)
    - [Time and Scheduling](#tag/time-overview)
    - [Payroll](#tag/payroll-overview)

    haha:
      
    - [Server](#tag/server-overview)
    - [List of Values (LOV)](#tag/lov-overview)
    - [Profile](#tag/profile-overview)

    # Getting Started
    The Reworkly APIs are organized around REST. Our API has predictable resource-oriented URLs, 
    accepts form-encoded or JSON-encoded request bodies, returns JSON-encoded responses, 
    and uses standard HTTP response codes, authentication, and verbs.

    [See more](/docs/getting-started/)

x-tagGroups:
  - name: account
    x-displayName: Account
    tags:
      - account-overview
      # - account-datamodel
      - account-endpoints
  - name: recruiting
    x-displayName: Recruiting
    tags:
      - recruiting-overview
      - recruiting-datamodel
      - recruiting-endpoints
      - Jobs
      - Job Members
      - Job Stages
      - Job Sources
      - Job Candidates
      - Job Offers
      - Job Offer Variables
      - Job Offer Documents
      - Job Events
      - Job Event Organizers
      - Job Event Candidates
      - Pools
      - Pool Members
      - Pool Candidates
      - Sortings
      - Sorting Conditions
      - Sorting Associations
      - Sorting Association Candidates
  - name: onboarding
    x-displayName: Onboarding
    tags:
      - onboarding-overview
      - onboarding-datamodel
      - onboarding-endpoints
  - name: employees
    x-displayName: Employees
    tags:
      - employees-overview
      - employees-datamodel
      - employees-endpoints
  - name: time
    x-displayName: Time and Scheduling
    tags:
      - time-overview
      - time-datamodel
      - time-endpoints
  - name: payroll
    x-displayName: Payroll
    tags:
      - payroll-overview
      - payroll-datamodel
      - payroll-endpoints
  - name: server
    x-displayName: Server
    tags:
      - server-health
      - server-settings
  - name: lov
    x-displayName: List of Values (LOV)
    tags:
      - lov-overview
      - lov-datamodel
      - lov-endpoints
      - lov-lookups
      - lov-lookup-values
      - lov-translations
  - name: profile
    x-displayName: Profile Management
    tags:
      - profile-overview
      - profile-datamodel
      - profile-endpoints
      - profile-profiles
      - profile-profile-names
      - profile-profile-images
      - profile-profile-emails
      - profile-profile-phones
      - profile-profile-webs
      - profile-profile-socials
      - profile-profile-addresses
      - profile-profile-educations
      - profile-profile-languages
      - profile-profile-skills
      - profile-profile-experiences
      - profile-profile-attachments
      - profile-profile-citizenships
      - profile-profile-tests
      - profile-profile-test-components
      - profile-profile-awards
      - profile-profile-contents
      - profile-profile-types
      - profile-profile-type-attributes
      - profile-content-types
      - profile-content-type-attributes
      - profile-rating-scales
      - profile-rating-scale-levels
  - name: integration
    x-displayName: Integration
    tags:
      - Integration Overview
      - Assessment
      - Background Check
      - Evaluation/Rating
tags:
  # General Tags
  - name: server-health
    x-displayName: Server Health
    description: Server Health for Reworkly APIs
  - name: server-settings
    x-displayName: Server Settings
    description: Server Settings for Reworkly APIs
  # Account
  - name: account-overview
    x-displayName: Account Overview
    description: |
      Reworkly Account
  - name: account-datamodel
    x-displayName: Account Data Model
    description: |
      The data model of the Account is represented by the following conceptual model. 
      This will make it easier for you to understand the Account Endpoints.

      <a href="/img/datamodel/reworkly_account.png" target="_blank">
        <img src="/img/datamodel/reworkly_account.png" alt="Account Data Model" />
      </a>

      _Click to enlarge the image._
  - name: account-endpoints
    x-displayName: Account Endpoints
    description: |
      ### Accounts:
      - [Accounts](#tag/Accounts)

      ### Account Settings:
  # Recruiting
  - name: recruiting-overview
    x-displayName: Recruiting Overview
    description: |
      Reworkly Recruiting optimizes enrollment and improve recruiter productivity by identifying and targeting high-value candidates.
  - name: recruiting-datamodel
    x-displayName: Recruiting Data Model
    description: |
      The data model of the Recruiting is represented by the following conceptual model. 
      This will make it easier for you to understand the Recruiting Endpoints.

      <a href="/img/datamodel/reworkly_recruit.png" target="_blank">
        <img src="/img/datamodel/reworkly_recruit.png" alt="Recruiting Data Model" />
      </a>

      _Click to enlarge the image._
  - name: recruiting-endpoints
    x-displayName: Recruiting Endpoints
    description: |
      ### Job:
      - [Jobs](#tag/Jobs)
      - [Job Members](#tag/Job-Members)
      - [Job Stages](#tag/Job-Stages)
      - [Job Sources](#tag/Job-Sources)
      - [Job Candidates](#tag/Job-Candidates)
      - [Job Offers](#tag/Job-Offers)
      - [Job Offer Variables](#tag/Job-Offer-Variables)
      - [Job Offer Documents](#tag/Job-Offer-Documents)
      - [Job Events](#tag/Job-Events)
      - [Job Event Organizers](#tag/Job-Event-Organizers)
      - [Job Event Candidates](#tag/Job-Event-Candidates)

      ### Talent Pool:
      - [Pools](#tag/Pools)
      - [Pool Members](#tag/Pool-Members)
      - [Pool Candidates](#tag/Pool-Candidates)

      ### Candidate Sorting:
      - [Sortings](#tag/Sortings)
      - [Sorting Conditions](#tag/Sorting-Conditions)
      - [Sorting Associations](#tag/Sorting-Associations)
      - [Sorting Association Candidates](#tag/Sorting-Association-Candidates)
  - name: Jobs
    x-displayName: Jobs
    description: |
      You create jobs that contain the specific requirements for a job for which candidates are hired. 
      A job can contain prescreening questionnaires and screening services such as background checks. 
      You post jobs on the career site that candidates visit as they search for jobs to apply for or refer people for the job.
  - name: Job Members
    x-displayName: Job Members
    description: |
      Admins on your account have access to every job and candidate, 
      but do not need to be included in the team member if the job is not relevant to them. 

      They can add or remove themselves from the team member of the job at any time.

      Other members must be added to the job's member to have access to candidates and assist with the recruiting process. 
      If they are not on the job members they will not be able to see or interact with candidates for that job.
  - name: Job Stages
    description: |
      Job Stage is a recruiting pipeline that can be used to create different recruiting processes for different types of jobs.

      Available Types:
        - Sourced
        - Applied
        - Shortlisted
        - Assessment
        - Interview
        - Offer
        - Hired
  - name: Job Sources
    description: |
      Job Source identifies the source from which the applicant is registered.

      Source Types:
        - **Manual** - Used only if a recruiter add a candidate manually.
        - **Career Page** - Used only if a candidate apply from the Career Page.
  - name: Job Candidates
    description: |
      Candidates.
  - name: Job Offers
    description: |
      Job Offers.
  - name: Job Events
    description: |
      Job Event is a calendar event such as a call, an interview, and a meeting. 

      Event Types:
        - Call
        - Interview
        - Meeting
  - name: Job Event Organizers
    description: |
      An Event Organizer is the member participating in the event. Each organizer object contains the id, the member id, the data of the member and the status.
  - name: Job Event Candidates
    description: |
      An Event Candidate is the candidate participating in the event. Each candidate object contains the id, the candidate id, and the data of the candidate.
  - name: Job Offers
    description: |
      You create job offers by providing details such as proposed start date, job assignment, salary, or other compensation. 
      You extend job offers to candidates. Candidates receive the offers, consider the content, and respond to the offers by either accepting or declining them.
      When the candidate accepts the job offer, the candidate is handed over to the HR specialist who finalizes the HR records for this worker.
  - name: Job Offer Variables
    description: |
      The variables related to the offer.

      **Built-in Variables:**

      Weâ€™ve created a list of common variables that you can use.
      When writing your offer title and body in a word processor, include variables you wish to utilize in square brackets, e.g.: [candidate_name].

        General variables:
        - Today's Date - `[date_today]` e.g.: 2023-08-01

        Candidate related variables:
        - Candidate ID - `[candidate_id]` e.g.: d5a7a5b7-a4a3-49e7-9c69-b44d2cbe15cf
        - Candidate Name - `[candidate_name]` e.g.: John Doe
        - Candidate Number - `[candidate_number]` e.g.: CAND1001
        - Candidate Signature - `[candidate_signature]`

        Job related variables:
        - Job ID - `[job_id]` e.g.: d5a7a5b7-a4a3-49e7-9c69-b44d2cbe15cf
        - Job Name - `[job_name]` e.g.: Senior Backend Developer
        - Job Responsibility - `[job_responsibility]`

        Salary related variables:
        - Salary Amount - `[salary_amount]` e.g.: 25
        - Salary Frequency - `[salary_frequency]` e.g.: Hourly
        - Salary Currency - `[salary_currency]` e.g.: USD
        - Salary - `[salary]` e.g.: 25 USD per Hourly
        - Bonus - `[bonus]`

        Offer related variables:
        - Offer Expiration Date - `[offer_expiration_date]` e.g.: 2023-08-09

        Sender related variables:
        - Sender Name - `[sender_name]` e.g.: John Appleseed
        - Sender Title - `[sender_title]` e.g.: Hiring Manager
        - Sender Signature - `[sender_signature]`
  - name: Job Offer Documents
    description: |
      The documents related to the offer (Offer letter & other documents)
  # Candidate Sorting
  - name: Sortings
    description: |
      You can sort candidates with conditional sorting for each stage in your pipeline.
      The sorting will help recuiters move qualified top candidates to the next stage easily.
  - name: Sorting Conditions
    description: |
      Sorting Conditions.
  - name: Sorting Associations
    description: |
      Sorting Associations.
  - name: Sorting Association Candidates
    description: |
      Association Candidates.
  # Talent Pool
  - name: Pools
    description: |
      The Talent Pool is a place to upload and store candidates who do not fit in an active job, but who you'd like to consider for future roles.
  - name: Pool Members
    description: |
      Admins on your account have access to every talent pool and its candidate, but do not need to be included in the team member if the talent pool is not relevant to them.

      They can add or remove themselves from the team member of the talent pool at any time.

      Other members must be added to the talent pool's member to have access to candidates. 

      If they are not on the talent pool members they will not be able to see or interact with candidates for that talent pool.
  - name: Pool Candidates
  # Onboarding
  - name: onboarding-overview
    x-displayName: Onboarding Overview
    description: |
      The Reworkly Onboarding can be used to assign and track the progress of basic onboarding activities after a candidate has been hired. This can apply to basic company-wide onboarding or role-specific onboarding activities. Specific tasks and deadlines can be tracked within the Reworkly Onboarding to ensure the new hire is on track.
  - name: onboarding-datamodel
    x-displayName: Onboarding Data Model
    description: |
      The data model of the Onboarding is represented by the following conceptual model. 
      This will make it easier for you to understand the Onboarding Endpoints.

      <a href="/img/datamodel/reworkly_onboarding.png" target="_blank">
        <img src="/img/datamodel/reworkly_onboarding.png" alt="Onboarding Data Model" />
      </a>

      _Click to enlarge the image._
  - name: onboarding-endpoints
    x-displayName: Onboarding Endpoints
    description: |
      **Endpoints:**
  # Employees
  - name: employees-overview
    x-displayName: Employees Overview
    description: |
      Manage your Employees' data, and make informed decisions.
  - name: employees-datamodel
    x-displayName: Employee Data Model
    description: |
      The data model of the Employees is represented by the following conceptual model. 
      This will make it easier for you to understand the Employees Endpoints.

      <a href="/img/datamodel/reworkly_employees.png" target="_blank">
        <img src="/img/datamodel/reworkly_employees.png" alt="Employee Data Model" />
      </a>

      _Click to enlarge the image._
  - name: employees-endpoints
    x-displayName: Employees Endpoints
    description: |
      **Endpoints:**
  # Time & Scheduling
  - name: time-overview
    x-displayName: Time & Scheduling Overview
    description: |
      Time and Scheduling helps you track your team's attendance, configure schedule, manage time logs.
  - name: time-datamodel
    x-displayName: Time & Scheduling Data Model
    description: |
      The data model of the Time & Scheduling is represented by the following conceptual model. 
      This will make it easier for you to understand the Time & Scheduling Endpoints.

      <a href="/img/datamodel/reworkly_time.png" target="_blank">
        <img src="/img/datamodel/reworkly_time.png" alt="Time & Scheduling Data Model" />
      </a>

      _Click to enlarge the image._
  - name: time-endpoints
    x-displayName: Time & Scheduling Endpoints
    description: |
      **Endpoints:**
  # Payroll
  - name: payroll-overview
    x-displayName: Payroll Overview
    description: |
      Payroll is a rules-based product. All payroll processes, calculations, and results are determined by a set of rules that you can easily build.
  - name: payroll-datamodel
    x-displayName: Payroll Data Model
    description: |
      The data model of the Payroll is represented by the following conceptual model. 
      This will make it easier for you to understand the Payroll Endpoints.

      <a href="/img/datamodel/reworkly_payroll.png" target="_blank">
        <img src="/img/datamodel/reworkly_payroll.png" alt="Payroll Data Model" />
      </a>

      _Click to enlarge the image._
  - name: payroll-endpoints
    x-displayName: Payroll Endpoints
    description: |
      **Endpoints:**
  # List of Values
  - name: lov-overview
    x-displayName: LOV Overview
    description: |
      LOV is a static or dynamic set of values used to display a specific type of page item, such as popup lists of values, a select list, a check box, a radio group, or multiple select lists.
  - name: lov-datamodel
    x-displayName: LOV Data Model
    description: |
      The data model of the LOV is represented by the following conceptual model. 
      This will make it easier for you to understand the LOV Endpoints.

      <a href="/img/datamodel/reworkly_lov.png" target="_blank">
        <img src="/img/datamodel/reworkly_lov.png" alt="LOV Data Model" />
      </a>

      _Click to enlarge the image._
  - name: lov-endpoints
    x-displayName: LOV Endpoints
    description: |
      ### Endpoints:
      - [Lookups](#tag/lov-ookups)
      - [Lookup Values](#tag/lov-lookup-values)
      - [Translations](#tag/lov-translations)
  - name: lov-lookups
    x-displayName: Lookups
    description: |
      Lookups are lists of values in applications. You define a list of values as a lookup consisting of a set of lookup values.
      Lookup and Lookup values are translated name and description. End users see the list of translated names and descriptions as the available values for an object.
  - name: lov-lookup-values
    x-displayName: Lookup Values
    description: |
      Lookups provide lists of values where valid values appear on a list with no duplicate values. 
      For example, an application might store the values Male and Female in a Gender in a table, 
      but when displaying those values in the user interface, Male or Female (or their translated equivalents) should be available for end users to select.
  - name: lov-translations
    x-displayName: Translations
    description: |
      You can translate the lookups and values that you defined to the preferred language(s) without changing the language session of the application. 
      When you edit a particular language entry, you can modify the translated name and description to the language in which you want the lookup to appear.
      Once the updates are made, the end-users can view the lookup in the translated text.
  # Profile
  - name: profile-overview
    x-displayName: Profile Overview
    description: |
      Profiles are widely used by organizations to describe the attributes of jobs or individuals. 
      Typically, profiles summarize the competencies, qualifications, and skills of any type of objects. 
      Profiles are valuable for tracking persons' skills, competencies, and accomplishments, in career planning, 
      for identifying training needs, for performance management, and in the recruitment process for identifying job requirements and suitable applicants.
  - name: profile-datamodel
    x-displayName: Profile Data Model
    description: |
      The data model of the Profile is represented by the following conceptual model. 
      This will make it easier for you to understand the Profile Endpoints.

      <a href="/img/datamodel/reworkly_profile.png" target="_blank">
        <img src="/img/datamodel/reworkly_profile.png" alt="LOV Data Model" />
      </a>

      _Click to enlarge the image._
  - name: profile-endpoints
    x-displayName: Profile Endpoints
    description: |
      ### Profile Management:
      - [Profiles](#tag/profile-profiles)
      - [Profile Names](#tag/profile-profile-names)
      - [Profile Images](#tag/profile-profile-images)
      - [Profile Emails](#tag/profile-profile-emails)
      - [Profile Phones](#tag/profile-profile-phones)
      - [Profile Webs](#tag/profile-profile-webs)
      - [Profile Socials](#tag/profile-profile-socials)
      - [Profile Addresses](#tag/profile-profile-addresses)
      - [Profile Educations](#tag/profile-profile-educations)
      - [Profile Languages](#tag/profile-profile-languages)
      - [Profile Skills](#tag/profile-profile-skills)
      - [Profile Experiences](#tag/profile-profile-experiences)
      - [Profile Citizenships](#tag/profile-profile-citizenships)
      - [Profile Tests](#tag/profile-profile-tests)
      - [Profile Test Components](#tag/profile-profile-test-components)
      - [Profile Awards](#tag/profile-profile-awards)
      - [Profile Attachments](#tag/profile-profile-attachments)
      - [Profile Contents](#tag/profile-profile-contents)

      ### Profile Types:
      - [Profile Types](#tag/profile-profile-types)
      - [Profile Type Attributes](#tag/profile-profile-type-attributes)
      - [Content Types](#tag/profile-content-types)
      - [Content Type Attributes](#tag/profile-content-type-attributes)

      ### Rating Scales:
      - [Rating Scales](#tag/profile-rating-scales)
      - [Rating Scale Levels](#tag/profile-rating-scale-levels)
  - name: profile-profile-types
    x-displayName: Profile Types
    description: |
      The profile type defines the content types and attributes that define the structure of your profiles.
  - name: profile-profile-type-attributes
    x-displayName: Profile Type Attributes
    description: |
      When you define a profile type, you specify attributes of the profile type that the user can select when creating a profile. 

      For example, suppose that you create a profile type and specify that it can be linked to candidate id and address. 
      When users create a profile based on that profile type, they can only select candidate id and address for the new profile. 

      Every profile type consists of a required attribute at least for identifying a profile.
  - name: profile-content-types
    x-displayName: Content Types
    description: |
      A content type is a broad definition of a group of items that can be added to the profile type. 
      Within a content type, specify attributes for all items of this type can or must have.
  - name: profile-content-type-attributes
    x-displayName: Content Type Attributes
    description: |
      When you add a content type to a profile type, you add the attributes that define the information entered for that specific profile type.
  - name: profile-profiles
    x-displayName: Profiles
    description: |
      Every user and candidate has a profile. It includes personal information like firstname, lastname, image, and social accounts, educations, experiences, skills and attachments.

      **Built-in Content Types** - Names, Images, Emails, Phones, Webs, Socials, Addresses, Educations, Languages, Skills, Experiences, and Attachments.

      **Custom Content Type:**
        - [Profile Contents](#tag/profile-profile-contents)
  - name: profile-profile-names
    x-displayName: Profile Names
    description: |
      Profile Names is a list of names for the profile. 

      Each entry contains the following fields:
        - Type - e.g: Full Name
        - Text - e.g: John Doe
  - name: profile-profile-images
    x-displayName: Profile Images
    description: |
      Profile Images is a list of images for the profile. 

      Each entry contains the following fields:
        - Type - e.g: Profile
        - URL - e.g: htts://github.com/aircampi.png
        - description - e.g: GitHub Profile
  - name: profile-profile-emails
    x-displayName: Profile Emails
    description: |
      Profile Emails is a list of emails for the profile. 

      Each entry contains the following fields:
        - Type - e.g: Work
        - address - e.g: hello@aircampi.com
        - description - e.g: Hello Mail
  - name: profile-profile-phones
    x-displayName: Profile Phones
    description: |
      Profile Phones is a list of phones for the profile. 

      Each entry contains the following fields:
        - Type - e.g: Work
        - Country - e.g: +976
        - number - e.g: 99112233
        - extension - e.g: 1
        - description - e.g: Work Phone
  - name: profile-profile-webs
    x-displayName: Profile Webs
    description: |
      Profile Webs is a list of webs for the profile. 

      Each entry contains the following fields:
        - Type - e.g: Personal
        - address - e.g: htts://github.com/aircampi
        - description - e.g: GitHub Profile
  - name: profile-profile-socials
    x-displayName: Profile Socials
    description: |
      Profile Socials is a list of social accounts, and you can provide one social account url for each social network type. 

      Each entry contains the following fields:
        - Type - e.g: Facebook
        - Username - e.g: aircampi.com
        - URL - e.g: https://www.facebook.com/aircampi
  - name: profile-profile-addresses
    x-displayName: Profile Addresses
    description: |
      Profile Addresses is a list of addresses for the profile. 

      Each entry contains the following fields:
        - Type - e.g: Home Address
        - Country - e.g: United States
        - state - e.g: 
        - zipcode - e.g: 
        - City - e.g: Washington D.C
        - line_1 - e.g: bayanzurkh district
        - line_2 - e.g: Peace avenue
        - line_3 - e.g: Building III
  - name: profile-profile-educations
    x-displayName: Profile Educations
    description: |
      Profile Educations is a list of education entries. 

      Each entry may contain the following fields:
        - School
        - Level
        - Degree
        - Field of Study
        - Start at
        - End at
        - Completed - True if still study there
        - Description
  - name: profile-profile-languages
    x-displayName: Profile Languages
    description: |
      Profile Languages is a list of language skills for the profile. 

      Each entry contains the following fields:
        - Language
        - Native
        - profile-rating-scales
        - Writing Level
        - Reading Level
        - Listening Level
        - Speaking Level
        - Overall Level
        - Overall Score
        - Assessment At
        - Description
  - name: profile-profile-skills
    x-displayName: Profile Skills
    description: |
      Profile Skill is a list of skills.
  - name: profile-profile-experiences
    x-displayName: Profile Experiences
    description: |
      Profile Experiences is a list of employments. 

      Each entry may contain the following fields:
        - Title
        - Company
        - Industry
        - Start at
        - End at
        - Current - True if still works there
        - Description
  - name: profile-profile-attachments
    x-displayName: Profile Attachments
    description: |
      Profile Attachments is a list of attachments.
  - name: profile-profile-citizenships
    x-displayName: Profile Citizenships
    description: |
      Profile Citizenship is a list of citizenship data.

      Each entry may contain the following fields:
      - Country
      - Nation ID
      - Issued at
      - Expiry at
      - Description
  - name: profile-profile-tests
    x-displayName: Profile Tests
    description: |
      Profile Test is a list of test or exam data.

      Each entry may contain the following fields:
      - Type
      - Score
      - Test at
      - Description
  - name: profile-profile-test-components
    x-displayName: Profile Test Components
    description: |
      Profile Test Component is a list of test components such as speaking, listening for the IELTS.

      Each entry may contain the following fields:
      - Type
      - Score
      - Test at
      - Description
  - name: profile-profile-awards
    x-displayName: Profile Awards
    description: |
      Profile Award is a list of award or honor data.

      Each entry may contain the following fields:
      - Type
      - Name
      - Number
      - Description
      - Issued at
      - Expiry at
  - name: profile-profile-contents
    x-displayName: Profile Contents
    description: |
      Profile Content is a list of contents defined in the content type of the profile type.
  - name: profile-rating-scales
    x-displayName: Rating Scales
    description: |
      Rating scales define the values that can be used to rate an profile's performance or level of proficiency.
  - name: profile-rating-scale-levels
    x-displayName: Rating Scale Levels
    description: |
      The rating scale defines the qualitative values, such as A, B, C, or D, that the system uses to rate or score an profile's performance. 
      Each qualitative value can have a rating level, and numeric points in levels of the rating scale.
    # Integration
  - name: Integration Overview
    description: |
      Register your assessments, background checks, or reference checks service as integration in Reworkly Recruiting.
  - name: Assessment
    description: |
      You use assessments to assess and measure the knowledge, skills, abilities, and attributes of candidates for a job.

      When you create a job, you add assessments in the Screening Services section. You can add one or more assessment screening packages. 
      After you select the assessment partner and user account, you need to decide if candidates take the assessment when applying for a job, 
      or during the candidate selection process, or both.
  - name: Background Check
    description: |
      You can use a background check during the candidate selection process to investigate a candidate's background before hiring them.

      A check on a candidate's background may include verifications such as employment history, education, criminal records. 
      After the background check is complete, candidates are ready to be moved to the next step in the recruiting process.

      Your administrator configures when the background check is automatically triggered during the candidate selection process. 
      The background check partner obtains the candidate's info and completes the background check. You then receive a notification.

      If you create a job based on a template which contains background checks, the background checks are added to the job. 
      You can edit the selected background check packages. If you create a requisition using a blank form, you can add background checks in the Screening Services section. 
      You can add one or more background check packages, usually multiple packages with a single screening.
  - name: Evaluation/Rating
    description: |
      Candidate ratings/evaluations are a critical aspect of the hiring process. 
      They help recruiters and hiring managers collect feedback from interviewers and make data-driven decisions.

      **Simple Rating** <br/>
      Rate the candidate with a star, thumbs up, or thumbs down rating, depending on how interested you are in moving the candidate to the next stage in the pipeline.

      **Scorecard Evaluation** <br/>

      **Rubric** <br/>
      Rubric is a scoring tool you can use to evaluate candidate.
paths:
  # Server Health
  /health:
    get:
      tags:
        - server-health
      summary: Check Health
      description: Check Health
      operationId: checkServerHealth
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/server_health"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  # Server Settings
  /settings:
    get:
      tags:
        - server-settings
      summary: Get Server Settings
      description: Get a server settings.
      operationId: getServerSettings
      security:
        - Scopes:
            - "read:server_settings"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/server_settings"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - server-settings
      summary: Update Server Settings
      description: Update a server settings. Updates all fields in a settings.
      operationId: updateServerSettings
      security:
        - Scopes:
            - "update:server_settings"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/server_settings_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/server_settings"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - server-settings
      summary: Patch Server Settings
      description: Patch a server settings. Updates one or more fields in a settings. The operation updates passed fields only.
      operationId: patchServerSettings
      security:
        - Scopes:
            - "update:server_settings"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/server_settings_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/server_settings"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  # Job Management
  /jobs:
    get:
      tags:
        - Jobs
      summary: Get Jobs
      description: |
        Returns a list of jobs that the requesting user is permitted to view.
      operationId: getJobs
      security:
        - Scopes:
            - "read:jobs"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/header_account_id"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobs"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Jobs
      summary: Create Job
      description: |
        Create an Job.
      operationId: createJob
      security:
        - Scopes:
            - "create:jobs"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}:
    get:
      tags:
        - Jobs
      summary: Get Job
      description: |
        Retrieve a single job details.
      operationId: getJob
      security:
        - Scopes:
            - "read:jobs"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Jobs
      summary: Update Job
      description: |
        You can update fields of an job after the job is created. The following fields can be updated any time after the job is created.

        **Available fields to update:**
          - name
          - description
          - workload
          - temporary
          - function
          - department
          - location
          - industry
          - benefits
          - salary_min
          - salary_max
          - salary_currency
          - metadata
          - app_metadata
      operationId: updateJob
      security:
        - Scopes:
            - "update:jobs"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Jobs
      summary: Patch Job
      description: |
        Updates one or more fields in an job. The operation updates passed fields only.

        **Available fields to update:**
          - name
          - description
          - workload
          - temporary
          - function
          - department
          - location
          - industry
          - benefits
          - salary_min
          - salary_max
          - salary_currency
          - metadata
          - app_metadata
      operationId: patchJob
      security:
        - Scopes:
            - "update:jobs"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Jobs
      summary: Delete Job
      description: |
        Deleting a job will completely remove the job and all candidates as well as any data associated with it.
      operationId: deleteJob
      security:
        - Scopes:
            - "delete:jobs"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/status:
    post:
      tags:
        - Jobs
      summary: Change Job Status
      description: |
        Changes status of an job to the status specified in the request body.

        Statuses:
          - Draft <br/>
            _A Draft job is a job that is saved but not yet published._
          - Published <br/>
            _A Published job can be visible for candidates on any available sources such as career page. Candidates will be able to find your published job and submit applications._ 
          - Published for Internal <br/> 
            _A Published interal job is not visible on your career page. Only people with the job's direct link can see it. Candidates can apply. You can access the job's pipeline._
          - Closed <br/>
            _Closed jobs are only visible to members of the recruiting team for the job. All Super Admins can see closed jobs._
          - Archived <br/>
            _Archived jobs enter a 'read-only' mode. Candidates remain in your account and can be copied or moved to other jobs, but you are not able to interact with their profiles._

      operationId: changeJobStatus
      security:
        - Scopes:
            - "update:jobs"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/job_status_change"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/duplicate:
    post:
      tags:
        - Jobs
      summary: Duplicate Job
      description: |
        Duplicate an Job.
      operationId: duplicateJob
      security:
        - Scopes:
            - "read:jobs"
            - "create:jobs"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_duplicate"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/stages:
    get:
      tags:
        - Job Stages
      summary: Get Stages
      description: |
        Returns a list of stages of the job.
      operationId: getJobStages
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_stages"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_stages"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Stages
      summary: Add Stage
      description: |
        Add a stage to the job.
      operationId: createJobStage
      security:
        - Scopes:
            - "update:jobs"
            - "create:job_stages"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_stage_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_stage_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/stages/{stage_id}:
    get:
      tags:
        - Job Stages
      summary: Get Stage
      description: |
        Retrieve a single stage details.
      operationId: getJobStage
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_stages"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_stage_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_stage_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Stages
      summary: Update Stage
      description: |
        You can update fields of a stage after the stage is added.
      operationId: updateJobStage
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_stages"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_stage_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_stage_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_stage_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Stages
      summary: Patch Stage
      description: |
        Updates one or more fields in a stage. The operation updates passed fields only.
      operationId: patchJobStage
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_stages"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_stage_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_stage_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_stage_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job_stages
      summary: Remove Stage
      description: |
        You can remove a single stage from the job with this operation.
      operationId: deleteJobStage
      security:
        - Scopes:
            - "update:jobs"
            - "delete:job_stages"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_stage_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/sources:
    get:
      tags:
        - Job Sources
      summary: Get Sources
      description: |
        Returns a list of sources of the job.
      operationId: getJobSources
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_sources"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_sources"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Sources
      summary: Add Source
      description: |
        Add a source to the job.
      operationId: createJobSource
      security:
        - Scopes:
            - "update:jobs"
            - "create:job_sources"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_source_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_source_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/sources/{source_id}:
    get:
      tags:
        - Job Sources
      summary: Get Source
      description: |
        Retrieve a single source details.
      operationId: getJobSource
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_sources"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_source_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_source_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Sources
      summary: Update Source
      description: |
        You can update fields of a source after the source is added.
      operationId: updateJobSource
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_sources"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_source_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_source_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_source_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Sources
      summary: Patch Source
      description: |
        Updates one or more fields in a source. The operation updates passed fields only.
      operationId: patchJobSource
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_sources"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_source_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_source_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_source_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Sources
      summary: Remove Source
      description: |
        You can remove a single source from the job with this operation.
      operationId: deleteJobSource
      security:
        - Scopes:
            - "update:jobs"
            - "delete:job_sources"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_source_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/members:
    get:
      tags:
        - Job Members
      summary: Get Members
      description: |
        Returns a list of members of the job that the requester is permitted to view.
      operationId: getJobMembers
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_members"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_members"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Members
      summary: Add Members
      description: |
        Add Members to the job.
      operationId: createJobMembers
      security:
        - Scopes:
            - "update:jobs"
            - "create:job_members"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/job_member_create"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Members
      summary: Remove Members
      description: |
        You can remove one and more members from an job with this operation.
      operationId: deleteJobMembers
      security:
        - Scopes:
            - "update:jobs"
            - "delete:job_members"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/user_id_list"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/members/{user_id}:
    get:
      tags:
        - Job Members
      summary: Get Member
      description: |
        Retrieve single member details from the job.
      operationId: getJobMember
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_members"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_user_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_member_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Members
      summary: Remove Member
      description: |
        You can remove a single member from an job with this operation. 

        This only removes the specified member from the job and does not affect their user profile.
      operationId: deleteJobMember
      security:
        - Scopes:
            - "update:jobs"
            - "delete:job_members"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_user_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates:
    get:
      tags:
        - Job Candidates
      summary: Get Candidates
      description: |
        Returns a list of candidates of the job.
      operationId: getCandidates
      security:
        - Scopes:
            - "read:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/candidates"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Candidates
      summary: Add Candidate
      description: |
        Add a candidate.
      operationId: createCandidate
      security:
        - Scopes:
            - "create:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/candidate_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}:
    get:
      tags:
        - Job Candidates
      summary: Get Candidate
      description: |
        Retrieve a single candidate details.
      operationId: getCandidate
      security:
        - Scopes:
            - "read:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Candidates
      summary: Update Candidate
      description: |
        You can update fields of a candidate after the candidate is created.
      operationId: updateCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/candidate_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Candidates
      summary: Patch Candidate
      description: |
        Updates one or more fields in a candidate. The operation updates passed fields only.
      operationId: patchCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/candidate_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Candidates
      summary: Delete Candidate
      description: |
        Delete a candidate.
      operationId: deleteCandidate
      security:
        - Scopes:
            - "delete:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}/status:
    post:
      tags:
        - Job Candidates
      summary: Change Candidate Status
      description: |
        Changes status of a candidate to the status specified in the request body.
      operationId: changeCandidateStatus
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_status_change"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}/move:
    post:
      tags:
        - Job Candidates
      summary: Move Candidate
      description: |
        Moves the candidate to another stage.
      operationId: moveCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_move"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}/disqualify:
    post:
      tags:
        - Job Candidates
      summary: Disqualify Candidate
      description: |
        Disqualifies a candidate.
      operationId: disqualifyCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_disqualify"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}/revert:
    post:
      tags:
        - Job Candidates
      summary: Revert Candidate
      description: |
        Reverts a candidate's disqualification.
      operationId: revertCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}/duplicate:
    post:
      tags:
        - Job Candidates
      summary: Duplicate Candidate
      description: |
        Copy the candidate to another job.
      operationId: duplicateCandidate
      security:
        - Scopes:
            - "update:candidates"
            - "create:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_duplicate"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/{candidate_id}/transfer:
    post:
      tags:
        - Job Candidates
      summary: Transfer Candidate
      description: |
        Moves a candidate to another job.
      operationId: transferCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_transfer"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/move:
    post:
      tags:
        - Job Candidates
      summary: Move Candidates (Bulk Action)
      description: |
        Moves candidates to another stage. (Bulk Action)
      operationId: moveCandidates
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_move_bulk"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/disqualify:
    post:
      tags:
        - Job Candidates
      summary: Disqualify Candidates (Bulk Action)
      description: |
        Disqualifies candidates (Bulk Action).
      operationId: disqualifyCandidates
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_disqualify_bulk"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/revert:
    post:
      tags:
        - Job Candidates
      summary: Revert Candidates (Bulk Action)
      description: |
        Reverts candidates' disqualification (Bulk Action).
      operationId: revertCandidates
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_id_list"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/duplicate:
    post:
      tags:
        - Job Candidates
      summary: Duplicate Candidates (Bulk Action)
      description: |
        Copy candidates to another job (Bulk Action).
      operationId: duplicateCandidates
      security:
        - Scopes:
            - "update:candidates"
            - "create:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_duplicate_bulk"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/candidates/transfer:
    post:
      tags:
        - Job Candidates
      summary: Transfer Candidates (Bulk Action)
      description: |
        Moves candidates to another job (Bulk Action).
      operationId: transferCandidates
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_transfer_bulk"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers:
    get:
      tags:
        - Job Offers
      summary: Get Offers
      description: |
        Returns a list of offers of the candidate.
      operationId: getJobOffers
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offers"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Offers
      summary: Add Offer
      description: |
        Add a offer to the candidate.
      operationId: createJobOffer
      security:
        - Scopes:
            - "update:jobs"
            - "create:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers/{offer_id}:
    get:
      tags:
        - Job Offers
      summary: Get Offer
      description: |
        Retrieve a single offer details.
      operationId: getJobOffer
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Offers
      summary: Update Offer
      description: |
        You can update fields of a offer after the offer is added.
      operationId: updateJobOffer
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Offers
      summary: Patch Offer
      description: |
        Updates one or more fields in a offer. The operation updates passed fields only.
      operationId: patchJobOffer
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Offers
      summary: Remove Offer
      description: |
        You can remove a single offer from the candidate and the job.
      operationId: deleteJobOffer
      security:
        - Scopes:
            - "update:jobs"
            - "delete:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers/{offer_id}/status:
    post:
      tags:
        - Job Offers
      summary: Change Offer Status
      description: |
        Changes status of a offer to the status specified in the request body.
      operationId: changeJobOfferStatus
      security:
        - Scopes:
            - "update:candidates"
            - "update:job_offers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_status_change"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers/{offer_id}/variables:
    get:
      tags:
        - Job Offer Variables
      summary: Get Variables
      description: |
        Returns a list of variables of the offer.
      operationId: getJobOfferVariables
      security:
        - Scopes:
            - "read:job_offer"
            - "read:job_offer_variables"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_variables"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Offer Variables
      summary: Add Variable
      description: |
        Add a variable to the offer.
      operationId: createJobOfferVariable
      security:
        - Scopes:
            - "update:job_offers"
            - "create:job_offer_variables"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_variable_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_variable_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers/{offer_id}/variables/{variable}:
    get:
      tags:
        - Job Offer Variables
      summary: Get Variable
      description: |
        Retrieve a single variable.
      operationId: getJobOfferVariable
      security:
        - Scopes:
            - "read:job_offers"
            - "read:job_offer_variables"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_variable"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_variable_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Offer Variables
      summary: Update Variable
      description: |
        You can update fields of a variable after the variable is added.
      operationId: updateJobOfferVariable
      security:
        - Scopes:
            - "update:job_offers"
            - "update:job_offer_variables"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_variable"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_variable_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_variable_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Offer Variables
      summary: Patch Variable
      description: |
        Updates one or more fields in a variable. The operation updates passed fields only.
      operationId: patchJobOfferVariable
      security:
        - Scopes:
            - "update:job_offers"
            - "update:job_offer_variables"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_variable"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_variable_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_variable_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Offer Variables
      summary: Remove Variable
      description: |
        You can remove a single variable from the offer with this operation.
      operationId: deleteJobOfferVariable
      security:
        - Scopes:
            - "update:job_offers"
            - "delete:job_offer_variables"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_variable"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers/{offer_id}/documents:
    get:
      tags:
        - Job Offer Documents
      summary: Get Documents
      description: |
        Returns a list of documents of the offer.
      operationId: getJobOfferDocuments
      security:
        - Scopes:
            - "read:job_offer"
            - "read:job_offer_documents"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_documents"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Offer Documents
      summary: Add Document
      description: |
        Add a document to the offer.
      operationId: createJobOfferDocument
      security:
        - Scopes:
            - "update:job_offers"
            - "create:job_offer_documents"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_document_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_document_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/offers/{offer_id}/documents/{document_id}:
    get:
      tags:
        - Job Offer Documents
      summary: Get Document
      description: |
        Retrieve a single document.
      operationId: getJobOfferDocument
      security:
        - Scopes:
            - "read:job_offers"
            - "read:job_offer_documents"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_document_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_document_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Offer Documents
      summary: Update Document
      description: |
        You can update fields of a document after the document is added.
      operationId: updateJobOfferDocument
      security:
        - Scopes:
            - "update:job_offers"
            - "update:job_offer_documents"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_document_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_document_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_document_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Offer Documents
      summary: Patch Document
      description: |
        Updates one or more fields in a document. The operation updates passed fields only.
      operationId: patchJobOfferDocument
      security:
        - Scopes:
            - "update:job_offers"
            - "update:job_offer_documents"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_document_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_offer_document_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_offer_document_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Offer Documents
      summary: Remove Document
      description: |
        You can remove a single document from the offer with this operation.
      operationId: deleteJobOfferDocument
      security:
        - Scopes:
            - "update:job_offers"
            - "delete:job_offer_documents"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_offer_id"
        - $ref: "#/components/parameters/path_job_offer_document_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events:
    get:
      tags:
        - Job Events
      summary: Get Events
      description: |
        Returns a list of events of the job.
      operationId: getJobEvents
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_events"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_events"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Events
      summary: Add Event
      description: |
        Add an event to the job.
      operationId: createJobEvent
      security:
        - Scopes:
            - "update:jobs"
            - "create:job_events"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_event_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events/{event_id}:
    get:
      tags:
        - Job Events
      summary: Get Event
      description: |
        Retrieve a single event details.
      operationId: getJobEvent
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_events"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Job Events
      summary: Update Event
      description: |
        You can update fields of an event after the event is added.
      operationId: updateJobEvent
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_event_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Job Events
      summary: Patch Event
      description: |
        Updates one or more fields in an event. The operation updates passed fields only.
      operationId: patchJobEvent
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/job_event_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Events
      summary: Remove Event
      description: |
        You can remove a single event from the job with this operation.
      operationId: deleteJobEvent
      security:
        - Scopes:
            - "update:jobs"
            - "delete:job_events"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events/{event_id}/organizers:
    get:
      tags:
        - Job Event Organizers
      summary: Get Organizers
      description: |
        Returns a list of organizers of the event that the requester is permitted to view.
      operationId: getJobEventOrganizers
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_events"
            - "read:job_event_organizers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_organizers"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Event Organizers
      summary: Add Organizers
      description: |
        Add Organizers to the event of the job.
      operationId: createJobEventOrganizers
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
            - "create:job_event_organizers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/member_id_list"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Event Organizers
      summary: Remove Organizers
      description: |
        You can remove one and more organizers from an event with this operation.
      operationId: deleteJobEventOrganizers
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
            - "delete:job_event_organizers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/member_id_list"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events/{event_id}/organizers/{organizer_id}:
    get:
      tags:
        - Job Event Organizers
      summary: Get Organizer
      description: |
        Retrieve single organizer details from the event of the job.
      operationId: getJobEventOrganizer
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_events"
            - "read:job_event_organizers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/path_job_event_organizer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_organizer_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Event Organizers
      summary: Remove Organizer
      description: |
        You can remove a single organizer from an event with this operation.
      operationId: deleteJobEventOrganizer
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
            - "delete:job_event_organizers"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/path_job_event_organizer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events/{event_id}/organizers/{organizer_id}/status:
    post:
      tags:
        - Job Event Organizers
      summary: Change Organizer Status
      description: |
        Changes status of an organizer to the status specified in the request body.
      operationId: changeJobEventOrganizerStatus
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/path_job_event_organizer_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/job_event_organizer_status_change"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events/{event_id}/candidates:
    get:
      tags:
        - Job Event Candidates
      summary: Get Candidates
      description: |
        Returns a assigned list of candidates of the event that the requester is permitted to view.
      operationId: getJobEventCandidates
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_events"
            - "read:job_event_candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_candidates"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Job Event Candidates
      summary: Add Candidates
      description: |
        Add Candidates to the event of the job.
      operationId: createJobEventCandidates
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
            - "create:job_event_candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_id_list"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Event Candidates
      summary: Remove Candidates
      description: |
        You can remove one and more candidates from an event with this operation.
      operationId: deleteJobEventCandidates
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
            - "delete:job_event_candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/candidate_id_list"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /jobs/{job_id}/events/{event_id}/candidates/{candidate_id}:
    get:
      tags:
        - Job Event Candidates
      summary: Get Candidate
      description: |
        Retrieve single candidate details from the event of the job.
      operationId: getJobEventCandidate
      security:
        - Scopes:
            - "read:jobs"
            - "read:job_events"
            - "read:job_event_candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_event_candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Job Event Candidates
      summary: Remove Candidate
      description: |
        You can remove a single candidate from an event with this operation.
      operationId: deleteJobEventCandidate
      security:
        - Scopes:
            - "update:jobs"
            - "update:job_events"
            - "delete:job_event_candidates"
      parameters:
        - $ref: "#/components/parameters/path_job_id"
        - $ref: "#/components/parameters/path_job_event_id"
        - $ref: "#/components/parameters/path_job_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  # Candidate Sorting
  /sortings:
    get:
      tags:
        - Sortings
      summary: Get Sortings
      description: |
        Returns a list of sortings that the requesting user is permitted to view.
      operationId: getSortings
      security:
        - Scopes:
            - "read:sortings"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sortings"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Sortings
      summary: Create Sorting
      description: |
        Create a sorting.
      operationId: createSorting
      security:
        - Scopes:
            - "create:sortings"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}:
    get:
      tags:
        - Sortings
      summary: Get Sorting
      description: |
        Returns a single sorting details.
      operationId: getSorting
      security:
        - Scopes:
            - "read:sortings"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Sortings
      summary: Update Sorting
      description: |
        You can update fields of a sorting after the sorting is created. The following fields can be updated any time after the sorting is created.

        **Available fields to update:**
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateSorting
      security:
        - Scopes:
            - "update:sortings"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Sortings
      summary: Patch Sorting
      description: |
        Updates one or more fields in a sorting. The operation updates passed fields only.

        **Available fields to update:**
        - name
        - description
        - metadata
        - app_metadata
      operationId: patchSorting
      security:
        - Scopes:
            - "update:sortings"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Sortings
      summary: Delete Sorting
      description: |
        Delete a sorting.
      operationId: deleteSorting
      security:
        - Scopes:
            - "delete:sortings"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/conditions:
    get:
      tags:
        - Sorting Conditions
      summary: Get Conditions
      description: |
        Returns a list of conditions of the sorting.
      operationId: getSortingConditions
      security:
        - Scopes:
            - "read:sortings"
            - "read:sorting_conditions"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_conditions"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Sorting Conditions
      summary: Add Condition
      description: |
        Add a condition to the sorting.
      operationId: createSortingCondition
      security:
        - Scopes:
            - "update:sortings"
            - "create:sorting_conditions"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_condition_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_condition_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/conditions/{condition_id}:
    get:
      tags:
        - Sorting Conditions
      summary: Get Condition
      description: |
        Returns a single condition details of the sorting.
      operationId: getSortingCondition
      security:
        - Scopes:
            - "read:sortings"
            - "read:sorting_conditions"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_condition_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_condition_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Sorting Conditions
      summary: Update Condition
      description: |
        You can update fields of a condition after the condition is added.
      operationId: updateSortingCondition
      security:
        - Scopes:
            - "update:sortings"
            - "update:sorting_conditions"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_condition_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_condition_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_condition_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Sorting Conditions
      summary: Patch Condition
      description: |
        Updates one or more fields in a condition. The operation updates passed fields only.
      operationId: patchSortingCondition
      security:
        - Scopes:
            - "update:sortings"
            - "update:sorting_conditions"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_condition_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_condition_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_condition_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Sorting Conditions
      summary: Remove Condition
      description: |
        You can remove a single condition from the sorting.
      operationId: deleteSortingCondition
      security:
        - Scopes:
            - "update:sortings"
            - "delete:sorting_conditions"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_condition_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/associations:
    get:
      tags:
        - Sorting Associations
      summary: Get Associations
      description: |
        Returns a list of associations of the sorting.
      operationId: getSortingAssociations
      security:
        - Scopes:
            - "read:sorting"
            - "read:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_associations"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Sorting Associations
      summary: Add Association
      description: |
        Add an association to the sorting.
      operationId: createSortingAssociation
      security:
        - Scopes:
            - "update:sortings"
            - "create:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_association_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_association_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/associations/{association_id}:
    get:
      tags:
        - Sorting Associations
      summary: Get Association
      description: |
        Returns a single association details of the sorting.
      operationId: getSortingAssociation
      security:
        - Scopes:
            - "read:sortings"
            - "read:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_association_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Sorting Associations
      summary: Update Association
      description: |
        You can update fields of an association after the association is added.
      operationId: updateSortingAssociation
      security:
        - Scopes:
            - "update:sortings"
            - "update:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_association_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_association_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Sorting Associations
      summary: Patch Association
      description: |
        Updates one or more fields in an association. The operation updates passed fields only.
      operationId: patchSortingAssociation
      security:
        - Scopes:
            - "update:sortings"
            - "update:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_association_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_association_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Sorting Associations
      summary: Remove Association
      description: |
        You can remove a single association from the sorting.
      operationId: deleteSortingAssociation
      security:
        - Scopes:
            - "update:sortings"
            - "delete:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/associations/{association_id}/terminate:
    post:
      tags:
        - Sorting Associations
      summary: Terminate Association
      description: |
        Terminate association sorting process.
      operationId: terminateSortingAssociation
      security:
        - Scopes:
            - "read:sortings"
            - "update:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/associations/{association_id}/restart:
    post:
      tags:
        - Sorting Associations
      summary: Restart Association
      description: |
        Restart association sorting process.
      operationId: restartSortingAssociation
      security:
        - Scopes:
            - "read:sortings"
            - "update:sorting_associations"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/associations/{association_id}/candidates:
    get:
      tags:
        - Sorting Association Candidates
      summary: Get Candidates
      description: |
        Returns a list of candidates of the sorting.
      operationId: getSortingCandidates
      security:
        - Scopes:
            - "read:sorting_associations"
            - "read:sorting_association_candidates"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_association_candidates"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Sorting Association Candidates
      summary: Add Candidates
      description: |
        Add candidates to the sorting.
      operationId: createSortingCandidates
      security:
        - Scopes:
            - "update:sortings"
            - "create:sorting_association_candidates"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/sorting_association_candidate_create"
      responses:
        "200":
          description: OK.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Sorting Association Candidates
      summary: Remove Candidates
      description: |
        You can remove one and more candidates from an association with this operation.
      operationId: deleteSortingAssociationCandidates
      security:
        - Scopes:
            - "update:sorting_associations"
            - "delete:sorting_association_candidates"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/sorting_association_candidate_delete"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /sortings/{sorting_id}/associations/{association_id}/candidates/{candidate_id}:
    get:
      tags:
        - Sorting Association Candidates
      summary: Get Candidate
      description: |
        Returns a single candidate details of the sorting.
      operationId: getSortingCandidate
      security:
        - Scopes:
            - "read:sortings"
            - "read:sorting_association_candidates"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/path_sorting_association_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sorting_association_candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Sorting Association Candidates
      summary: Remove Candidate
      description: |
        You can remove a single candidate from the sorting.
      operationId: deleteSortingCandidate
      security:
        - Scopes:
            - "update:sortings"
            - "delete:sorting_association_candidates"
      parameters:
        - $ref: "#/components/parameters/path_sorting_id"
        - $ref: "#/components/parameters/path_sorting_association_id"
        - $ref: "#/components/parameters/path_sorting_association_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  # Talent Pool
  /pools:
    get:
      tags:
        - Pools
      summary: Get Pools
      description: |
        Returns a list of pools that the requesting user is permitted to view.
      operationId: getPools
      security:
        - Scopes:
            - "read:pools"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pools"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Pools
      summary: Create Pool
      description: |
        Create a pool.
      operationId: createPool
      security:
        - Scopes:
            - "create:pools"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}:
    get:
      tags:
        - Pools
      summary: Get Pool
      description: |
        Retrieve a single pool details.
      operationId: getPool
      security:
        - Scopes:
            - "read:pools"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Pools
      summary: Update Pool
      description: |
        You can update fields of a pool after the pool is created. The following fields can be updated any time after the pool is created.

        **Available fields to update:**
          - name
          - description
          - metadata
          - app_metadata
      operationId: updatePool
      security:
        - Scopes:
            - "update:pools"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Pools
      summary: Patch Pool
      description: |
        Updates one or more fields in a pool. The operation updates passed fields only.

        **Available fields to update:**
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchPool
      security:
        - Scopes:
            - "update:pools"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Pools
      summary: Delete Pool
      description: |
        Deleting a pool.
      operationId: deletePool
      security:
        - Scopes:
            - "delete:pools"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/duplicate:
    post:
      tags:
        - Pools
      summary: Duplicate Pool
      description: |
        Duplicate a pool.
      operationId: duplicatePool
      security:
        - Scopes:
            - "read:pools"
            - "create:pools"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_duplicate"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/members:
    get:
      tags:
        - Pool Members
      summary: Get Members
      description: |
        Returns a list of members of the pool that the requester is permitted to view.
      operationId: getPoolMembers
      security:
        - Scopes:
            - "read:pools"
            - "read:pool_members"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_members"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Pool Members
      summary: Add Members
      description: |
        Add Members to the pool.
      operationId: createPoolMembers
      security:
        - Scopes:
            - "update:pools"
            - "create:pool_members"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/pool_member_create"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Pool Members
      summary: Remove Members
      description: |
        You can remove one and more members from a pool with this operation.
      operationId: deletePoolMembers
      security:
        - Scopes:
            - "update:pools"
            - "delete:pool_members"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/user_id_list"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/members/{user_id}:
    get:
      tags:
        - Pool Members
      summary: Get Member
      description: |
        Retrieve single member details from the pool.
      operationId: getPoolMember
      security:
        - Scopes:
            - "read:pools"
            - "read:pool_members"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_user_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_member_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Pool Members
      summary: Remove Member
      description: |
        You can remove a single member from a pool with this operation. 

        This only removes the specified member from the pool and does not affect their user profile.
      operationId: deletePoolMember
      security:
        - Scopes:
            - "update:pools"
            - "delete:pool_members"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_user_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/candidates:
    get:
      tags:
        - Pool Candidates
      summary: Get Candidates
      description: |
        Returns a list of candidates of the pool.
      operationId: getPoolCandidates
      security:
        - Scopes:
            - "read:pools"
            - "read:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_candidates"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - Pool Candidates
      summary: Add Candidate
      description: |
        Add a candidate.
      operationId: createPoolCandidate
      security:
        - Scopes:
            - "update:pools"
            - "create:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/candidates/{candidate_id}:
    get:
      tags:
        - Pool Candidates
      summary: Get Candidate
      description: |
        Retrieve a single candidate details.
      operationId: getPoolCandidate
      security:
        - Scopes:
            - "read:pools"
            - "read:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_pool_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Pool Candidates
      summary: Update Candidate
      description: |
        You can update fields of a candidate after the candidate is created.
      operationId: updatePoolCandidate
      security:
        - Scopes:
            - "update:pools"
            - "update:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_pool_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - Pool Candidates
      summary: Patch Candidate
      description: |
        Updates one or more fields in a candidate. The operation updates passed fields only.
      operationId: patchPoolCandidate
      security:
        - Scopes:
            - "update:pools"
            - "update:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_pool_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_candidate_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Pool Candidates
      summary: Delete Candidate
      description: |
        Delete a candidate.
      operationId: deletePoolCandidate
      security:
        - Scopes:
            - "update:pools"
            - "delete:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_pool_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/candidates/{candidate_id}/move:
    post:
      tags:
        - Pool Candidates
      summary: Move Candidate
      description: |
        Moves the candidate to another pool.
      operationId: movePoolCandidate
      security:
        - Scopes:
            - "update:candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_pool_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_move"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/candidates/{candidate_id}/duplicate:
    post:
      tags:
        - Pool Candidates
      summary: Duplicate Candidate
      description: |
        Copy the candidate to another pool.
      operationId: duplicatePoolCandidate
      security:
        - Scopes:
            - "update:pools"
            - "update:pool_candidates"
            - "create:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/path_pool_candidate_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_duplicate"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/candidates/move:
    post:
      tags:
        - Pool Candidates
      summary: Move Candidates (Bulk Action)
      description: |
        Moves candidates to another pool (Bulk Action).
      operationId: movePoolCandidates
      security:
        - Scopes:
            - "update:pools"
            - "update:pool_candidates"
            - "create:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_move_bulk"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /pools/{pool_id}/candidates/duplicate:
    post:
      tags:
        - Pool Candidates
      summary: Duplicate Candidates (Bulk Action)
      description: |
        Copy candidates to another pool.
      operationId: duplicatePoolCandidates
      security:
        - Scopes:
            - "update:pools"
            - "update:pool_candidates"
            - "create:pool_candidates"
      parameters:
        - $ref: "#/components/parameters/path_pool_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/pool_candidate_duplicate_bulk"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  #
  # LOV APIs
  #
  /lookups:
    get:
      tags:
        - lov-lookups
      summary: Get lookups
      description: "Retrieve filtered list of lookups. "
      operationId: get_lookups
      security:
        - Scopes:
            - "read:lookups"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookups"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - lov-lookups
      summary: Create Lookup
      description: "Create Lookup"
      operationId: create_lookup
      security:
        - Scopes:
            - "create:lookups"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}:
    get:
      tags:
        - lov-lookups
      summary: Get Lookup
      description: "Retrieve lookup details."
      operationId: get_lookup
      security:
        - Scopes:
            - "read:lookups"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - lov-lookups
      summary: Update Lookup
      description: Update Lookup
      operationId: update_lookup
      security:
        - Scopes:
            - "update:lookups"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - lov-lookups
      summary: Delete Lookup
      description: Delete Lookup
      operationId: delete_lookup
      security:
        - Scopes:
            - "delete:lookups"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/change:
    post:
      tags:
        - lov-lookups
      summary: Change Lookup Code
      description: "Change Lookup Code"
      operationId: change_lookup_code
      security:
        - Scopes:
            - "update:lookups"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_change"
      responses:
        "200":
          description: OK.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/translations:
    get:
      tags:
        - lov-translations
      summary: Get Lookup Translations
      description: "Retrieve filtered list of lookup translations. "
      operationId: get_lookup_translations
      security:
        - Scopes:
            - "read:lookup_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/label_translations"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - lov-translations
      summary: Create Lookup Translation
      description: "Create Lookup Translation"
      operationId: create_lookup_translation
      security:
        - Scopes:
            - "create:lookup_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_translation_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/label_translation"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/translations/{language}:
    get:
      tags:
        - lov-translations
      summary: Get Lookup Translation
      description: "Retrieve lookup translation details."
      operationId: get_lookup_translation
      security:
        - Scopes:
            - "read:lookup_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_language"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/label_translation"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - lov-translations
      summary: Update Lookup Translation
      description: Update Lookup Translation
      operationId: update_lookup_translation
      security:
        - Scopes:
            - "update:lookup_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_language"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_translation_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/label_translation"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - lov-translations
      summary: Delete Lookup Translation
      description: Delete Lookup Translation
      operationId: delete_lookup_translation
      security:
        - Scopes:
            - "delete:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_language"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/values:
    get:
      tags:
        - lov-lookup-values
      summary: Get Lookup Values
      description: "Retrieve filtered list of lookup values. "
      operationId: get_lookup_values
      security:
        - Scopes:
            - "read:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_values"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - lov-lookup-values
      summary: Create Lookup Value
      description: "Create Lookup Value"
      operationId: create_lookup_value
      security:
        - Scopes:
            - "create:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_value_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/values/{value}:
    get:
      tags:
        - lov-lookup-values
      summary: Get Lookup Value
      description: "Retrieve lookup value details."
      operationId: get_lookup_value
      security:
        - Scopes:
            - "read:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - lov-lookup-values
      summary: Update Lookup Value
      description: Update Lookup Value
      operationId: update_lookup_value
      security:
        - Scopes:
            - "update:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_value_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - lov-lookup-values
      summary: Delete Lookup Value
      description: Delete Lookup Value
      operationId: delete_lookup_value
      security:
        - Scopes:
            - "delete:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/values/{value}/change:
    post:
      tags:
        - lov-lookup-values
      summary: Change Lookup Value
      description: "Change Lookup Value"
      operationId: change_lookup_value
      security:
        - Scopes:
            - "update:lookup_values"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_value_change"
      responses:
        "200":
          description: OK.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/values/{value}/translations:
    get:
      tags:
        - lov-translations
      summary: Get Lookup Value Translations
      description: "Retrieve filtered list of lookup value translations. "
      operationId: get_lookup_value_translations
      security:
        - Scopes:
            - "read:lookup_value_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value_translations"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - lov-translations
      summary: Create Lookup Value Translation
      description: "Create Lookup Value Translation"
      operationId: create_lookup_value_translation
      security:
        - Scopes:
            - "create:lookup_value_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_value_translation_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value_translation"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /lookups/{lookup}/values/{value}/translations/{language}:
    get:
      tags:
        - lov-translations
      summary: Get Lookup Value Translation
      description: "Retrieve lookup value translation details."
      operationId: get_lookup_value_translation
      security:
        - Scopes:
            - "read:lookup_value_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/path_language"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value_translation"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - Translations
      summary: Update Lookup Value Translation
      description: Update Lookup Value Translation
      operationId: update_lookup_value_translation
      security:
        - Scopes:
            - "update:lookup_value_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/path_language"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/lookup_value_translation_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookup_value_translation"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - Translations
      summary: Delete Lookup Value Translation
      description: Delete Lookup Value Translation
      operationId: delete_lookup_value_translation
      security:
        - Scopes:
            - "delete:lookup_value_translations"
      parameters:
        - $ref: "#/components/parameters/path_lookup"
        - $ref: "#/components/parameters/path_lookup_value"
        - $ref: "#/components/parameters/path_language"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  # Profile APIs
  /rating_scales:
    get:
      tags:
        - profile-rating-scales
      summary: Get Scales
      description: |
        Returns a list of scales that the requesting user is permitted to view.
      operationId: getRatingScales
      security:
        - Scopes:
            - "read:scales"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scales"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-rating-scales
      summary: Create Scale
      description: |
        Create a rating scale.
      operationId: createRatingScale
      security:
        - Scopes:
            - "create:scales"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/rating_scale_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /rating_scales/{rating_scale_id}:
    get:
      tags:
        - profile-rating-scales
      summary: Get Scale
      description: |
        Retrieve a single rating scale details.
      operationId: getRatingScale
      security:
        - Scopes:
            - "read:scales"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-rating-scales
      summary: Update Scale
      description: |
        You can update fields of a rating scale after the rating scale is created. The following fields can be updated any time after the rating scale is created.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateRatingScale
      security:
        - Scopes:
            - "update:scales"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/rating_scale_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-rating-scales
      summary: Patch Scale
      description: |
        Updates one or more fields in a rating scale. The operation updates passed fields only.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchRatingScale
      security:
        - Scopes:
            - "update:scales"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/rating_scale_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-rating-scales
      summary: Delete Scale
      description: |
        Delete a Rating Scale.
      operationId: deleteRatingScale
      security:
        - Scopes:
            - "delete:scales"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /rating_scales/{rating_scale_id}/levels:
    get:
      tags:
        - profile-rating-scale-levels
      summary: Get Levels
      description: |
        Returns a list of levels of the rating scale that the requesting user is permitted to view.
      operationId: getRatingScaleLevels
      security:
        - Scopes:
            - "read:scales"
            - "read:scale_levels"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_levels"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-rating-scale-levels
      summary: Create Level
      description: |
        Create a level to the rating scale.
      operationId: createRatingScaleLevel
      security:
        - Scopes:
            - "update:scales"
            - "create:scale_levels"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/rating_scale_level_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_level_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /rating_scales/{rating_scale_id}/levels/{level_id}:
    get:
      tags:
        - profile-rating-scale-levels
      summary: Get Level
      description: |
        Retrieve a single level of the rating scale.
      operationId: getRatingScaleLevel
      security:
        - Scopes:
            - "read:scales"
            - "read:scale_levels"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/path_rating_scale_level_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_level_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-rating-scale-levels
      summary: Update Level
      description: |
        You can update fields of a level of the rating scale after the level is created. The following fields can be updated any time after the level is created.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateRatingScaleLevel
      security:
        - Scopes:
            - "update:scales"
            - "update:scale_levels"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/path_rating_scale_level_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/rating_scale_level_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_level_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-rating-scale-levels
      summary: Patch Level
      description: |
        Updates one or more fields in a level of the rating scale. The operation updates passed fields only.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchRatingScaleLevel
      security:
        - Scopes:
            - "update:scales"
            - "update:scale_leves"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/path_rating_scale_level_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/rating_scale_level_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rating_scale_level_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-rating-scale-levels
      summary: Delete Level
      description: |
        Delete a level from the rating scale.
      operationId: deleteRatingScaleLevel
      security:
        - Scopes:
            - "update:scales"
            - "delete:scale_levels"
      parameters:
        - $ref: "#/components/parameters/path_rating_scale_id"
        - $ref: "#/components/parameters/path_rating_scale_level_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types:
    get:
      tags:
        - profile-profile-types
      summary: Get Types
      description: |
        Returns a list of types that the requesting user is permitted to view.
      operationId: getProfileTypes
      security:
        - Scopes:
            - "read:profile_types"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_types"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-types
      summary: Create Type
      description: |
        Create a profile type.
      operationId: createProfileType
      security:
        - Scopes:
            - "create:profile_types"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_type_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}:
    get:
      tags:
        - profile-profile-types
      summary: Get Type
      description: |
        Retrieve a single profile type details.
      operationId: getProfileType
      security:
        - Scopes:
            - "read:profile_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-types
      summary: Update Type
      description: |
        You can update fields of a profile type after the profile type is created. The following fields can be updated any time after the profile type is created.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateProfileType
      security:
        - Scopes:
            - "update:profile_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_type_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-types
      summary: Patch Type
      description: |
        Updates one or more fields in a profile type. The operation updates passed fields only.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchType
      security:
        - Scopes:
            - "update:profile_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_type_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-types
      summary: Delete Type
      description: |
        Delete a profile type.
      operationId: deleteProfileType
      security:
        - Scopes:
            - "delete:profile_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}/attributes:
    get:
      tags:
        - profile-profile-type-attributes
      summary: Get Attributes
      description: |
        Returns a list of attributes of the profile type that the requesting user is permitted to view.
      operationId: getProfileTypeAttributes
      security:
        - Scopes:
            - "read:profile_types"
            - "read:profile_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_attributes"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-type-attributes
      summary: Create Attribute
      description: |
        Create an attribute to the profile type.
      operationId: createProfileTypeAttribute
      security:
        - Scopes:
            - "update:profile_types"
            - "create:profile_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_type_attribute_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}/attributes/{attribute_id}:
    get:
      tags:
        - profile-profile-type-attributes
      summary: Get Attribute
      description: |
        Retrieve a single attribute of profile type.
      operationId: getProfileTypeAttribute
      security:
        - Scopes:
            - "read:profile_types"
            - "read:profile_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_profile_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-type-attributes
      summary: Update Attribute
      description: |
        You can update fields of an attribute of profile type after the attribute is created. The following fields can be updated any time after the attribute is created.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateProfileTypeAttribute
      security:
        - Scopes:
            - "update:profile_types"
            - "update:profile_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_profile_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_type_attribute_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-type-attributes
      summary: Patch Attribute
      description: |
        Updates one or more fields in an attribute of profile type. The operation updates passed fields only.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchProfileTypeAttribute
      security:
        - Scopes:
            - "update:profile_types"
            - "update:profile_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_profile_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_type_attribute_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-type-attributes
      summary: Delete Attribute
      description: |
        Delete an attribute from the profile type.
      operationId: deleteProfileTypeAttribute
      security:
        - Scopes:
            - "update:profile_types"
            - "delete:profile_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_profile_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}/content_types:
    get:
      tags:
        - profile-content-types
      summary: Get Content Types
      description: |
        Returns a list of content types of the profile type that the requesting user is permitted to view.
      operationId: getContentTypes
      security:
        - Scopes:
            - "read:content_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_types"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-content-types
      summary: Create Content Type
      description: |
        Create a content type to the profile type.
      operationId: createContentType
      security:
        - Scopes:
            - "create:content_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/content_type_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}/content_types/{content_type_id}:
    get:
      tags:
        - profile-content-types
      summary: Get Content Type
      description: |
        Retrieve a single content type of the profile type.
      operationId: getContentType
      security:
        - Scopes:
            - "read:content_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-content-types
      summary: Update Content Type
      description: |
        You can update fields of a content type of profile type after the content type is created. The following fields can be updated any time after the content type is created.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateContentType
      security:
        - Scopes:
            - "update:profile_types"
            - "update:content_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/content_type_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-content-types
      summary: Patch Content Type
      description: |
        Updates one or more fields in a content type of profile type. The operation updates passed fields only.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchContentType
      security:
        - Scopes:
            - "update:content_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/content_type_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-content-types
      summary: Delete Content Type
      description: |
        Delete a content type from the profile type.
      operationId: deleteContentType
      security:
        - Scopes:
            - "update:profile_types"
            - "delete:content_types"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}/content_types/{content_type_id}/attributes:
    get:
      tags:
        - profile-content-type-attributes
      summary: Get Attributes
      description: |
        Returns a list of attributes of the content type that the requesting user is permitted to view.
      operationId: getContentTypeAttributes
      security:
        - Scopes:
            - "read:content_types"
            - "read:content_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_attributes"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-content-type-attributes
      summary: Create Attribute
      description: |
        Create an attribute to the content type.
      operationId: createContentTypeAttribute
      security:
        - Scopes:
            - "update:content_types"
            - "create:content_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/content_type_attribute_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profile_types/{profile_type_id}/content_types/{content_type_id}/attributes/{attribute_id}:
    get:
      tags:
        - profile-content-type-attributes
      summary: Get Attribute
      description: |
        Retrieve a single attribute of content type.
      operationId: getContentTypeAttribute
      security:
        - Scopes:
            - "read:content_types"
            - "read:content_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/path_content_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-content-type-attributes
      summary: Update Attribute
      description: |
        You can update fields of an attribute of content type after the attribute is created. The following fields can be updated any time after the attribute is created.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: updateContentTypeAttribute
      security:
        - Scopes:
            - "update:content_types"
            - "update:content_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/path_content_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/content_type_attribute_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-content-type-attributes
      summary: Patch Attribute
      description: |
        Updates one or more fields in an attribute of content type. The operation updates passed fields only.

        **Available fields to update:**
          - id
          - name
          - description
          - metadata
          - app_metadata
      operationId: patchContentTypeAttribute
      security:
        - Scopes:
            - "update:content_types"
            - "update:content_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/path_content_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/content_type_attribute_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/content_type_attribute_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-content-type-attributes
      summary: Delete Attribute
      description: |
        Delete an attribute from the content type.
      operationId: deleteContentTypeAttribute
      security:
        - Scopes:
            - "update:content_types"
            - "delete:content_type_attributes"
      parameters:
        - $ref: "#/components/parameters/path_profile_type_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/path_content_type_attribute_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles:
    get:
      tags:
        - profile-profiles
      summary: Get Profiles
      description: |
        Returns a list of profiles that the requesting user is permitted to view.
      operationId: getProfiles
      security:
        - Scopes:
            - "read:profiles"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profiles"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profiles
      summary: Create Profile
      description: |
        Create a profile.
      operationId: createProfile
      security:
        - Scopes:
            - "create:profiles"
      parameters:
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}:
    get:
      tags:
        - profile-profiles
      summary: Get Profile
      description: |
        Retrieve a single profile details.
      operationId: getProfile
      security:
        - Scopes:
            - "read:profiles"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profiles
      summary: Update Profile
      description: |
        You can update fields of a profile after the profile is created. The following fields can be updated any time after the profile is created.

        **Available fields to update:**
          - name
          - description
          - profile_metadata
          - app_metadata
      operationId: updateProfile
      security:
        - Scopes:
            - "update:profiles"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profiles
      summary: Patch Profile
      description: |
        Updates one or more fields in a profile. The operation updates passed fields only.

        **Available fields to update:**
          - name
          - description
          - profile_metadata
          - app_metadata
      operationId: patchProfile
      security:
        - Scopes:
            - "update:profiles"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profiles
      summary: Delete Profile
      description: |
        Delete a profile.
      operationId: deleteProfile
      security:
        - Scopes:
            - "delete:profiles"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/override:
    post:
      tags:
        - profile-profiles
      summary: Override Profile
      description: |
        Merges a profile's profile. Copies data of the profile specified in the request body and overrides to the profile specified in the resource URL. 

        You must passed following data in the request body:
          - **Profile Id** - Required, The profile to be copied.
          - **Allow Null Values** - Default is `false`. If true, system override the profile specified in the resource URL with the profile specified in the request body without checking NULL value. Otherwise, system override the profile specified in the resource URL with the data is not empty only.
          - **Options** - Optional, System will override only passed data of the profile when options have provided. Otherwise, system will override all data of the profile to the candidata profile specified in the resource URL.
            
            **Available options:**
            - **Profile** - Only profile main data like name, description, ...etc.
            - **Names** - Only names of the profile specified in the request body.
            - **Images** - Only images of the profile specified in the request body.
            - **Emails** - Only emails of the profile specified in the request body.
            - **Phones** - Only phones of the profile specified in the request body.
            - **Webs** - Only webs of the profile specified in the request body.
            - **Socials** - Only social accounts of the profile specified in the request body.
            - **Addresses** - Only addresses of the profile specified in the request body.
            - **Educations** - Only education entries of the profile specified in the request body.
            - **Languages** - Only languages of the profile specified in the request body.
            - **Skills** - Only skills of the profile specified in the request body.
            - **Experiences** - Only expriences of the profile specified in the request body.
            - **Attachments** - Only attachments of the profile specified in the request body.
      operationId: overrideProfile
      security:
        - Scopes:
            - "update:profiles"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      requestBody:
        $ref: "#/components/requestBodies/profile_override"
      responses:
        "200":
          description: OK.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/names:
    get:
      tags:
        - profile-profile-names
      summary: Get Names
      description: |
        Returns a list of names of the profile.
      operationId: getProfileNames
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_names"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_names"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-names
      summary: Add Name
      description: |
        Create a name to the profile.
      operationId: createProfileName
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_names"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_name_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_name_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/names/{name_id}:
    get:
      tags:
        - profile-profile-names
      summary: Get Name
      description: |
        Retrieve a single name details.
      operationId: getProfileName
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_names"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_name_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_name_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-names
      summary: Update Name
      description: |
        You can update fields of a name after the name is created.
      operationId: updateProfileName
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_names"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_name_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_name_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_name_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-names
      summary: Patch Name
      description: |
        Updates one or more fields in a name. The operation updates passed fields only.
      operationId: patchProfileName
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_names"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_name_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_name_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_name_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-names
      summary: Delete Name
      description: |
        Delete a name from the profile.
      operationId: deleteProfileName
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_names"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_name_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/images:
    get:
      tags:
        - profile-profile-images
      summary: Get Images
      description: |
        Returns a list of images of the profile.
      operationId: getProfileImages
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_images"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_images"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-images
      summary: Add Image
      description: |
        Create an image to the profile.
      operationId: createProfileImage
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_images"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_image_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_image_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/images/{image_id}:
    get:
      tags:
        - profile-profile-images
      summary: Get Image
      description: |
        Retrieve a single image details.
      operationId: getProfileImage
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_images"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_image_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_image_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-images
      summary: Update Image
      description: |
        You can update fields of an image after the image is created.
      operationId: updateProfileImage
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_images"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_image_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_image_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_image_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-images
      summary: Patch Image
      description: |
        Updates one or more fields in an image. The operation updates passed fields only.
      operationId: patchProfileImage
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_images"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_image_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_image_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_image_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-images
      summary: Delete Image
      description: |
        Delete an image from the profile.
      operationId: deleteProfileImage
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_images"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_image_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/emails:
    get:
      tags:
        - profile-profile-emails
      summary: Get Emails
      description: |
        Returns a list of emails of the profile.
      operationId: getProfileEmails
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_emails"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_emails"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-emails
      summary: Add Email
      description: |
        Create an email to the profile.
      operationId: createProfileEmail
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_emails"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_email_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_email_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/emails/{email_id}:
    get:
      tags:
        - profile-profile-emails
      summary: Get Email
      description: |
        Retrieve a single email details.
      operationId: getProfileEmail
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_emails"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_email_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_email_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-emails
      summary: Update Email
      description: |
        You can update fields of an email after the email is created.
      operationId: updateProfileEmail
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_emails"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_email_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_email_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_email_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-emails
      summary: Patch Email
      description: |
        Updates one or more fields in an email. The operation updates passed fields only.
      operationId: patchProfileEmail
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_emails"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_email_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_email_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_email_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-emails
      summary: Delete Email
      description: |
        Delete an email from the profile.
      operationId: deleteProfileEmail
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_emails"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_email_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/phones:
    get:
      tags:
        - profile-profile-phones
      summary: Get Phones
      description: |
        Returns a list of phones of the profile.
      operationId: getProfilePhones
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_phones"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_phones"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-phones
      summary: Add Phone
      description: |
        Create a phone to the profile.
      operationId: createProfilePhone
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_phones"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_phone_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_phone_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/phones/{phone_id}:
    get:
      tags:
        - profile-profile-phones
      summary: Get Phone
      description: |
        Retrieve a single phone details.
      operationId: getProfilePhone
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_phones"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_phone_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_phone_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-phones
      summary: Update Phone
      description: |
        You can update fields of a phone after the phone is created.
      operationId: updateProfilePhone
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_phones"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_phone_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_phone_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_phone_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-phones
      summary: Patch Phone
      description: |
        Updates one or more fields in a phone. The operation updates passed fields only.
      operationId: patchProfilePhone
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_phones"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_phone_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_phone_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_phone_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-phones
      summary: Delete Phone
      description: |
        Delete a phone from the profile.
      operationId: deleteProfilePhone
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_phones"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_phone_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/webs:
    get:
      tags:
        - profile-profile-webs
      summary: Get Webs
      description: |
        Returns a list of webs of the profile.
      operationId: getProfileWebs
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_webs"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_webs"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-webs
      summary: Add Web
      description: |
        Create a web to the profile.
      operationId: createProfileWeb
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_webs"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_web_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_web_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/webs/{web_id}:
    get:
      tags:
        - profile-profile-webs
      summary: Get Web
      description: |
        Retrieve a single web details.
      operationId: getProfileWeb
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_webs"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_web_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_web_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-webs
      summary: Update Web
      description: |
        You can update fields of a web after the web is created.
      operationId: updateProfileWeb
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_webs"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_web_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_web_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_web_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-webs
      summary: Patch Web
      description: |
        Updates one or more fields in a web. The operation updates passed fields only.
      operationId: patchProfileWeb
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_webs"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_web_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_web_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_web_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-webs
      summary: Delete Web
      description: |
        Delete a web from the profile.
      operationId: deleteProfileWeb
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_webs"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_web_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/socials:
    get:
      tags:
        - profile-profile-socials
      summary: Get Socials
      description: |
        Returns a list of socials of the profile.
      operationId: getProfileSocials
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_socials"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_socials"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-socials
      summary: Add Social
      description: |
        Create a social to the profile.
      operationId: createProfileSocial
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_socials"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_social_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_social_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/socials/{social_id}:
    get:
      tags:
        - profile-profile-socials
      summary: Get Social
      description: |
        Retrieve a single social details.
      operationId: getProfileSocial
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_socials"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_social_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_social_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-socials
      summary: Update Social
      description: |
        You can update fields of a social after the social is created.
      operationId: updateProfileSocial
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_socials"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_social_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_social_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_social_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-socials
      summary: Patch Social
      description: |
        Updates one or more fields in a social. The operation updates passed fields only.
      operationId: patchProfileSocial
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_socials"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_social_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_social_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_social_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-socials
      summary: Delete Social
      description: |
        Delete a social from the profile.
      operationId: deleteProfileSocial
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_socials"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_social_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/addresses:
    get:
      tags:
        - profile-profile-addresses
      summary: Get Addresses
      description: |
        Returns a list of addresses of the profile.
      operationId: getProfileAddresses
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_addresses"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_addresses"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-addresses
      summary: Add Address
      description: |
        Create an address to the profile.
      operationId: createProfileAddress
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_addresses"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_address_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_address_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/addresses/{address_id}:
    get:
      tags:
        - profile-profile-addresses
      summary: Get Address
      description: |
        Retrieve a single address details.
      operationId: getProfileAddress
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_addresses"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_address_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_address_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-addresses
      summary: Update Address
      description: |
        You can update fields of an address after the address is created.
      operationId: updateProfileAddress
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_addresses"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_address_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_address_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_address_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-addresses
      summary: Patch Address
      description: |
        Updates one or more fields in an address. The operation updates passed fields only.
      operationId: patchProfileAddress
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_addresses"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_address_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_address_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_address_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-addresses
      summary: Delete Address
      description: |
        Delete an address from the profile.
      operationId: deleteProfileAddress
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_addresses"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_address_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/educations:
    get:
      tags:
        - profile-profile-educations
      summary: Get Educations
      description: |
        Returns a list of educations of the profile.
      operationId: getProfileEducations
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_educations"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_educations"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-educations
      summary: Add Education
      description: |
        Create an education to the profile.
      operationId: createProfileEducation
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_educations"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_education_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_education_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/educations/{education_id}:
    get:
      tags:
        - profile-profile-educations
      summary: Get Education
      description: |
        Retrieve a single education details.
      operationId: getProfileEducation
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_educations"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_education_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_education_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-educations
      summary: Update Education
      description: |
        You can update fields of an education after the education is created.
      operationId: updateProfileEducation
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_educations"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_education_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_education_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_education_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-educations
      summary: Patch Education
      description: |
        Updates one or more fields in an education. The operation updates passed fields only.
      operationId: patchProfileEducation
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_educations"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_education_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_education_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_education_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-educations
      summary: Delete Education
      description: |
        Delete an education from the profile.
      operationId: deleteProfileEducation
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_educations"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_education_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/languages:
    get:
      tags:
        - profile-profile-languages
      summary: Get Languages
      description: |
        Returns a list of languages of the profile.
      operationId: getProfileLanguages
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_languages"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_languages"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-languages
      summary: Add Language
      description: |
        Create a language to the profile.
      operationId: createProfileLanguage
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_languages"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_language_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_language_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/languages/{language_id}:
    get:
      tags:
        - profile-profile-languages
      summary: Get Language
      description: |
        Retrieve a single language details.
      operationId: getProfileLanguage
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_languages"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_language_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_language_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-languages
      summary: Update Language
      description: |
        You can update fields of a language after the language is created.
      operationId: updateProfileLanguage
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_languages"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_language_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_language_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_language_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-languages
      summary: Patch Language
      description: |
        Updates one or more fields in a language. The operation updates passed fields only.
      operationId: patchProfileLanguage
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_languages"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_language_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_language_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_language_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-languages
      summary: Delete Language
      description: |
        Delete a language from the profile.
      operationId: deleteProfileLanguage
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_languages"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_language_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/experiences:
    get:
      tags:
        - profile-profile-experiences
      summary: Get Experiences
      description: |
        Returns a list of experiences of the profile.
      operationId: getProfileExperiences
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_experiences"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_experiences"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-experiences
      summary: Add Experience
      description: |
        Create an experience to the profile.
      operationId: createProfileExperience
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_experiences"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_experience_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_experience_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/experiences/{experience_id}:
    get:
      tags:
        - profile-profile-experiences
      summary: Get Experience
      description: |
        Retrieve a single experience details.
      operationId: getProfileExperience
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_experiences"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_experience_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_experience_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-experiences
      summary: Update Experience
      description: |
        You can update fields of an experience after the experience is created.
      operationId: updateProfileExperience
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_experiences"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_experience_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_experience_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_experience_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-experiences
      summary: Patch Experience
      description: |
        Updates one or more fields in an experience. The operation updates passed fields only.
      operationId: patchProfileExperience
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_experiences"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_experience_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_experience_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_experience_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-experiences
      summary: Delete Experience
      description: |
        Delete an experience from the profile.
      operationId: deleteProfileExperience
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_experiences"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_experience_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/skills:
    get:
      tags:
        - profile-profile-skills
      summary: Get Skills
      description: |
        Returns a list of skills of the profile.
      operationId: getProfileSkills
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_skills"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_skills"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-skills
      summary: Add Skill
      description: |
        Create a skill to the profile.
      operationId: createProfileSkill
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_skills"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_skill_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_skill_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/skills/{skill_id}:
    get:
      tags:
        - profile-profile-skills
      summary: Get Skill
      description: |
        Retrieve a single skill details.
      operationId: getProfileSkill
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_skills"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_skill_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_skill_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-skills
      summary: Update Skill
      description: |
        You can update fields of a skill after the skill is created.
      operationId: updateProfileSkill
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_skills"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_skill_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_skill_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_skill_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-skills
      summary: Patch Skill
      description: |
        Updates one or more fields in a skill. The operation updates passed fields only.
      operationId: patchProfileSkill
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_skills"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_skill_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_skill_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_skill_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-skills
      summary: Delete Skill
      description: |
        Delete a skill from the profile.
      operationId: deleteProfileSkill
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_skills"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_skill_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/attachments:
    get:
      tags:
        - profile-profile-attachments
      summary: Get Attachments
      description: |
        Returns a list of attachments of the profile.
      operationId: getProfileAttachments
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_attachments"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-attachments
      summary: Add Attachment
      description: |
        Create an attachment to the profile.
      operationId: createProfileAttachment
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_attachment_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_attachment_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/attachments/{attachment_id}:
    get:
      tags:
        - profile-profile-attachments
      summary: Get Attachment
      description: |
        Retrieve a single attachment details.
      operationId: getProfileAttachment
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_attachment_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_attachment_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-attachments
      summary: Update Attachment
      description: |
        You can update fields of an attachment after the attachment is created.
      operationId: updateProfileAttachment
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_attachment_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_attachment_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_attachment_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-attachments
      summary: Patch Attachment
      description: |
        Updates one or more fields in an attachment. The operation updates passed fields only.
      operationId: patchProfileAttachment
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_attachment_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_attachment_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_attachment_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-attachments
      summary: Delete Attachment
      description: |
        Delete an attachment from the profile.
      operationId: deleteProfileAttachment
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_attachment_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/{content_type_id}:
    get:
      tags:
        - profile-profile-contents
      summary: Get Contents
      description: |
        Returns a list of contents of the profile.
      operationId: getProfileContents
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_contents"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_contents"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-contents
      summary: Add Contents
      description: |
        Create contents to the profile.
      operationId: createProfileContents
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_contents"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_content_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_content_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/{content_type_id}/{content_id}:
    get:
      tags:
        - profile-profile-contents
      summary: Get Content
      description: |
        Retrieve a single content details.
      operationId: getProfileContent
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_contents"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/path_profile_content_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_content_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-contents
      summary: Update Content
      description: |
        You can update fields of a content after the content is created.
      operationId: updateProfileContent
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_attachments"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_content_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_content_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_content_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-contents
      summary: Patch Contents
      description: |
        Updates one or more fields in a content. The operation updates passed fields only.
      operationId: patchProfileContent
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_contents"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_content_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_content_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_content_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-contents
      summary: Delete Content
      description: |
        Delete a content from the profile.
      operationId: deleteProfileContent
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_contents"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_content_id"
        - $ref: "#/components/parameters/path_content_type_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/citizenships:
    get:
      tags:
        - profile-profile-citizenships
      summary: Get Citizenships
      description: |
        Returns a list of citizenships of the profile.
      operationId: getProfileCitizenships
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_citizenships"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_citizenships"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-citizenships
      summary: Add Citizenship
      description: |
        Create a citizenship to the profile.
      operationId: createProfileCitizenship
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_citizenships"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_citizenship_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_citizenship_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/citizenships/{citizenship_id}:
    get:
      tags:
        - profile-profile-citizenships
      summary: Get Citizenship
      description: |
        Retrieve a single citizenship details.
      operationId: getProfileCitizenship
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_citizenships"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_citizenship_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_citizenship_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-citizenships
      summary: Update Citizenship
      description: |
        You can update fields of a citizenship after the test is created.
      operationId: updateProfileCitizenship
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_citizenships"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_citizenship_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_citizenship_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_citizenship_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-citizenships
      summary: Patch Citizenship
      description: |
        Updates one or more fields in a citizenship. The operation updates passed fields only.
      operationId: patchProfileCitizenship
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_citizenships"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_citizenship_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_citizenship_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_citizenship_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-citizenships
      summary: Delete Citizenship
      description: |
        Delete a citizenship from the profile.
      operationId: deleteProfileCitizenship
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_citizenships"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_citizenship_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/tests:
    get:
      tags:
        - profile-profile-tests
      summary: Get Tests
      description: |
        Returns a list of tests of the profile.
      operationId: getProfileTests
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_tests"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-tests
      summary: Add Test
      description: |
        Create a test to the profile.
      operationId: createProfileTest
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_test_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/tests/{test_id}:
    get:
      tags:
        - profile-profile-tests
      summary: Get Test
      description: |
        Retrieve a single test details.
      operationId: getProfileTest
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-tests
      summary: Update Test
      description: |
        You can update fields of a test after the test is created.
      operationId: updateProfileTest
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_test_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-tests
      summary: Patch Test
      description: |
        Updates one or more fields in a test. The operation updates passed fields only.
      operationId: patchProfileTest
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_test_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-tests
      summary: Delete Test
      description: |
        Delete a test from the profile.
      operationId: deleteProfileTest
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/tests/{test_id}/components:
    get:
      tags:
        - profile-profile-test-components
      summary: Get Test Components
      description: |
        Returns a list of components of the test.
      operationId: getProfileTestComponents
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_components"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-test-components
      summary: Add Test Component
      description: |
        Create a component to the test.
      operationId: createProfileTestComponent
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_test_component_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_component_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/tests/{test_id}/components/{component_id}:
    get:
      tags:
        - profile-profile-test-components
      summary: Get Test Component
      description: |
        Retrieve a single test component details.
      operationId: getProfileTestComponent
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/path_profile_test_component_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_component_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-test-components
      summary: Update Test Component
      description: |
        You can update fields of a component after the component is created.
      operationId: updateProfileTestComponent
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/path_profile_test_component_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_test_component_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_component_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-test-components
      summary: Patch Test Component
      description: |
        Updates one or more fields in a component. The operation updates passed fields only.
      operationId: patchProfileTestComponent
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/path_profile_test_component_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_test_component_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_test_component_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-test-components
      summary: Delete Test Component
      description: |
        Delete a component from the test.
      operationId: deleteProfileTestComponent
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_tests"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_test_id"
        - $ref: "#/components/parameters/path_profile_test_component_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/awards:
    get:
      tags:
        - profile-profile-awards
      summary: Get Awards
      description: |
        Returns a list of awards of the profile.
      operationId: getProfileAwards
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_awards"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
        - $ref: "#/components/parameters/query_q"
        - $ref: "#/components/parameters/query_sort"
        - $ref: "#/components/parameters/query_offset"
        - $ref: "#/components/parameters/query_limit"
        - $ref: "#/components/parameters/query_total_count"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_awards"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    post:
      tags:
        - profile-profile-awards
      summary: Add Award
      description: |
        Create an award to the profile.
      operationId: createProfileAward
      security:
        - Scopes:
            - "update:profiles"
            - "create:profile_awards"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_award_create"
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_award_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
  /profiles/{profile_id}/awards/{award_id}:
    get:
      tags:
        - profile-profile-awards
      summary: Get Award
      description: |
        Retrieve a single award details.
      operationId: getProfileAward
      security:
        - Scopes:
            - "read:profiles"
            - "read:profile_awards"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_award_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_award_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    put:
      tags:
        - profile-profile-awards
      summary: Update Award
      description: |
        You can update fields of an award after the award is created.
      operationId: updateProfileAward
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_awards"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_award_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_award_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_award_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    patch:
      tags:
        - profile-profile-awards
      summary: Patch Award
      description: |
        Updates one or more fields in an award. The operation updates passed fields only.
      operationId: patchProfileAward
      security:
        - Scopes:
            - "update:profiles"
            - "update:profile_awards"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_award_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
        - $ref: "#/components/parameters/query_fields"
        - $ref: "#/components/parameters/query_expand"
      requestBody:
        $ref: "#/components/requestBodies/profile_award_update"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profile_award_expanded"
          headers:
            X-RateLimit-Limit:
              description: Request limit.
              schema:
                type: integer
              example: 100
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
              example: 99
            X-RateLimit-Reset:
              description: The UTC date/time at which the current rate limit window resets.
              schema:
                type: string
                format: date-time
              example: "2022-10-12T11:00:00Z"
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "409":
          $ref: "#/components/responses/409_conflict"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
    delete:
      tags:
        - profile-profile-awards
      summary: Delete Award
      description: |
        Delete an award from the profile.
      operationId: deleteProfileAward
      security:
        - Scopes:
            - "update:profiles"
            - "delete:profile_awards"
      parameters:
        - $ref: "#/components/parameters/path_profile_id"
        - $ref: "#/components/parameters/path_profile_award_id"
        - $ref: "#/components/parameters/header_authorization_bearer"
      responses:
        "204":
          description: No Content.
        "400":
          $ref: "#/components/responses/400_bad_request"
        "401":
          $ref: "#/components/responses/401_unauthorized"
        "403":
          $ref: "#/components/responses/403_forbidden"
        "404":
          $ref: "#/components/responses/404_not_found"
        "405":
          $ref: "#/components/responses/405_method_not_allowed"
        "429":
          $ref: "#/components/responses/429_too_many_requests"
        "500":
          $ref: "#/components/responses/500_internal_server_error"
        "501":
          $ref: "#/components/responses/501_not_implemented"
        "503":
          $ref: "#/components/responses/503_service_unavailable"
components:
  responses:
    # General Responses
    #
    # Bad Request:
    # The server cannot or will not process the request due
    # to an apparent client error.
    400_bad_request:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_bad_request"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Unauthorized:
    # Similar to 403 Forbidden, but specifically for use
    # when authentication is required and has failed or has not yet been provided.
    401_unauthorized:
      description: Unauthorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_unauthorized"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Forbidden:
    # The request contained valid data and was understood by the server, but the server is refusing action.
    # This may be due to the user not having the necessary permissions for a resource.
    403_forbidden:
      description: Forbidden.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_forbidden"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Not Found:
    # The requested resource could not be found but may be available in the future.
    # Subsequent requests by the client are permissible.
    404_not_found:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_not_found"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Method not allowed:
    # A request method is not supported for the requested resource;
    # for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.
    405_method_not_allowed:
      description: Method not allowed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_method_not_allowed"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Conflict:
    # Indicates that the request could not be processed because of conflict in the current state of the resource,
    # such as an edit conflict between multiple simultaneous updates.
    409_conflict:
      description: Conflict.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_conflict"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Too Many Requests:
    # The user has sent too many requests in a given amount of time.
    # Intended for use with rate-limiting schemes.
    429_too_many_requests:
      description: Too many requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_too_many_request"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Internal Server Error:
    # A generic error message, given when an unexpected condition was encountered
    # and no more specific message is suitable.
    500_internal_server_error:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_internal_server_error"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Not Implemented:
    # The server either does not recognize the request method, or it lacks the ability to fulfil the request.
    # Usually this implies future availability (e.g., a new feature of a web-service API).
    501_not_implemented:
      description: Not implemented.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_not_implemented"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
    # Service Unavailable:
    # The server cannot handle the request (because it is overloaded or down for maintenance).
    # Generally, this is a temporary state.
    503_service_unavailable:
      description: Service unavailable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_service_unavailable"
      headers:
        X-RateLimit-Limit:
          description: Request limit.
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests left for the time window.
          schema:
            type: integer
          example: 99
        X-RateLimit-Reset:
          description: The UTC date/time at which the current rate limit window resets.
          schema:
            type: string
            format: date-time
          example: "2022-10-12T11:00:00Z"
  parameters:
    # header parameters
    header_authorization_bearer:
      name: Authorization
      in: header
      description: "`Bearer {{access_token}}`"
      required: true
      schema:
        $ref: "#/components/schemas/bearer_authorization"
    header_account_id:
      name: Account Id
      in: header
      description: "ID of the account. It works when multi-account mode is enabled. Otherwise, may not provided"
      required: false
      schema:
        $ref: "#/components/schemas/account_id"
    # query parameters
    query_fields:
      name: fields
      in: query
      description: "This parameter filters the resource attributes. Only the specified attributes are returned. Format: ?fields=id,name"
      required: false
      schema:
        type: string
    query_expand:
      name: expand
      in: query
      description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". Example: ?expand=all'
      required: false
      schema:
        type: string
        default: ""
    query_q:
      name: q
      in: query
      description: "This query parameter defines the where clause. Example: ?q=(id=497f6eca-6276-4993-bfeb-53cbbbba6f08)"
      required: false
      schema:
        type: string
    query_sort:
      name: sort
      in: query
      description: 'This parameter sort a resource collection based on the specified attributes. The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc". Specify "asc" for ascending and "desc" for descending. For example, ?sort=created_at asc,updated_at desc'
      required: false
      schema:
        type: string
    query_offset:
      name: offset
      in: query
      description: "Used to define the starting position of the item collection. If offset exceeds the item count then no items are returned."
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    query_limit:
      name: limit
      in: query
      description: "This parameter restricts the number of items returned inside the collection. If the limit exceeds the item count then the server will only return the available items."
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10
    query_total_count:
      name: total_count
      in: query
      description: 'The item collection representation will include the "estimated row count" when "?total_count=true", otherwise the total_count is not included.'
      required: false
      schema:
        type: boolean
        default: false
    # path parameters
    path_user_id:
      name: user_id
      in: path
      description: "User Id"
      required: true
      schema:
        $ref: "#/components/schemas/user_id"
    path_job_id:
      name: job_id
      in: path
      description: "Job Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_id"
    path_job_stage_id:
      name: stage_id
      in: path
      description: "Stage Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_stage_id"
    path_job_source_id:
      name: source_id
      in: path
      description: "Source Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_source_id"
    path_job_candidate_id:
      name: candidate_id
      in: path
      description: "Candidate Id"
      required: true
      schema:
        $ref: "#/components/schemas/candidate_id"
    path_job_offer_id:
      name: offer_id
      in: path
      description: "Offer Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_offer_id"
    path_job_offer_document_id:
      name: document_id
      in: path
      description: "Document Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_offer_document_id"
    path_job_offer_variable:
      name: variable
      in: path
      description: "Offer Variable"
      required: true
      schema:
        $ref: "#/components/schemas/job_offer_variable_type"
    path_job_event_id:
      name: event_id
      in: path
      description: "Event Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_event_id"
    path_job_event_organizer_id:
      name: organizer_id
      in: path
      description: "Organizer Id"
      required: true
      schema:
        $ref: "#/components/schemas/job_event_organizer_id"
    path_sorting_id:
      name: sorting_id
      in: path
      description: "Sorting Id"
      required: true
      schema:
        $ref: "#/components/schemas/sorting_id"
    path_sorting_condition_id:
      name: condition_id
      in: path
      description: "Condition Id"
      required: true
      schema:
        $ref: "#/components/schemas/sorting_condition_id"
    path_sorting_association_id:
      name: association_id
      in: path
      description: "Association Id"
      required: true
      schema:
        $ref: "#/components/schemas/sorting_association_id"
    path_sorting_association_candidate_id:
      name: candidate_id
      in: path
      description: "Candidate Id"
      required: true
      schema:
        $ref: "#/components/schemas/sorting_association_candidate_id"
    path_pool_id:
      name: pool_id
      in: path
      description: "Pool Id"
      required: true
      schema:
        $ref: "#/components/schemas/pool_id"
    path_pool_candidate_id:
      name: candidate_id
      in: path
      description: "Candidate Id"
      required: true
      schema:
        $ref: "#/components/schemas/pool_candidate_id"
    # LOV path parameters
    path_lookup:
      name: lookup
      in: path
      description: "Lookup Code"
      required: true
      schema:
        $ref: "#/components/schemas/lookup_code"
    path_lookup_value:
      name: value
      in: path
      description: Lookup Value
      required: true
      schema:
        $ref: "#/components/schemas/lookup_value_code"
    path_language:
      name: language
      in: path
      description: Language
      required: true
      schema:
        $ref: "#/components/schemas/language"
    # Profile path parameters
    path_rating_scale_id:
      name: rating_scale_id
      in: path
      description: "Rating Scale Id"
      required: true
      schema:
        $ref: "#/components/schemas/rating_scale_id"
    path_rating_scale_level_id:
      name: level_id
      in: path
      description: "Rating Scale Level Id"
      required: true
      schema:
        $ref: "#/components/schemas/rating_scale_level_id"
    path_profile_type_id:
      name: profile_type_id
      in: path
      description: "Profile Type Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_type_id"
    path_profile_type_attribute_id:
      name: attribute_id
      in: path
      description: "Attribute Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_type_attribute_id"
    path_content_type_id:
      name: content_type_id
      in: path
      description: "Content Type Id"
      required: true
      schema:
        $ref: "#/components/schemas/content_type_id"
    path_content_type_attribute_id:
      name: attribute_id
      in: path
      description: "Attribute Id"
      required: true
      schema:
        $ref: "#/components/schemas/content_type_attribute_id"
    path_profile_id:
      name: profile_id
      in: path
      description: "Profile Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_id"
    path_profile_name_id:
      name: name_id
      in: path
      description: "Name Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_name_id"
    path_profile_image_id:
      name: image_id
      in: path
      description: "Image Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_image_id"
    path_profile_email_id:
      name: email_id
      in: path
      description: "Email Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_email_id"
    path_profile_phone_id:
      name: phone_id
      in: path
      description: "Phone Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_phone_id"
    path_profile_web_id:
      name: web_id
      in: path
      description: "Web Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_web_id"
    path_profile_social_id:
      name: social_id
      in: path
      description: "Social Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_social_id"
    path_profile_address_id:
      name: address_id
      in: path
      description: "Address Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_address_id"
    path_profile_education_id:
      name: education_id
      in: path
      description: "Education Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_education_id"
    path_profile_language_id:
      name: language_id
      in: path
      description: "Language Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_language_id"
    path_profile_experience_id:
      name: experience_id
      in: path
      description: "Experience Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_experience_id"
    path_profile_skill_id:
      name: skill_id
      in: path
      description: "Skill Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_skill_id"
    path_profile_attachment_id:
      name: attachment_id
      in: path
      description: "Attachment Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_attachment_id"
    path_profile_content_id:
      name: content_id
      in: path
      description: "Content Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_content_id"
    path_profile_citizenship_id:
      name: citizenship_id
      in: path
      description: "Citizenship Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_citizenship_id"
    path_profile_test_id:
      name: test_id
      in: path
      description: "Test Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_test_id"
    path_profile_test_component_id:
      name: component_id
      in: path
      description: "Test Component Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_test_component_id"
    path_profile_award_id:
      name: award_id
      in: path
      description: "Award Id"
      required: true
      schema:
        $ref: "#/components/schemas/profile_award_id"
  schemas:
    # General Responses
    response_bad_request:
      type: object
      description: Bad request. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: invalid_request
        message:
          type: string
          description: Invalid request. The message will vary depending on the cause.
      example:
        code: invalid_request
        message: Invalid `fields` parameter.
    response_unauthorized:
      type: object
      description: Unauthorized. The message will vary depending on the cause.
      discriminator:
        propertyName: code
        mapping:
          invalid_token: "#/components/schemas/response_invalid_token"
          invalid_client: "#/components/schemas/response_invalid_client"
      properties:
        code:
          type: string
          description: Unauthorized. The code will vary depending on the cause.
        message:
          type: string
          description: Unauthorized. The message will vary depending on the cause.
    response_invalid_token:
      type: object
      description: Invalid token. The message will vary depending on the cause.
      properties:
        code:
          type: string
        message:
          type: string
          description: Invalid token. The message will vary depending on the cause.
      example:
        code: invalid_token
        message: Invalid token.
    response_invalid_client:
      type: object
      description: Invalid client. The message will vary depending on the cause.
      properties:
        code:
          type: string
        message:
          type: string
          description: Invalid client. The message will vary depending on the cause.
      example:
        - code: invalid_client
          message: Client not global.
        - code: invalid_client
          message: Client cannot perform the requested operation.
    response_forbidden:
      type: object
      description: Forbidden. The code and message will vary depending on the cause.
      discriminator:
        propertyName: code
        mapping:
          unsufficient_scope: "#/components/schemas/response_unsufficient_scope"
          account_not_allowed: "#/components/schemas/response_account_not_allowed"
          object_limit_reached: "#/components/schemas/response_object_limit_reached"
      properties:
        code:
          type: string
          description: forbidden. The code will vary depending on the cause.
        message:
          type: string
          description: Forbidden. The message will vary depending on the cause.
      example:
        - code: forbidden
          message: You reached the limit of entities of this type for this branch.
    response_unsufficient_scope:
      type: object
      description: Insufficient scope.
      properties:
        code:
          type: string
        message:
          type: string
          description: Insufficient scope.
      example:
        code: unsufficient_scope
        message: Insufficient scope.
    response_account_not_allowed:
      type: object
      description: Account not allowed.
      properties:
        code:
          type: string
        message:
          type: string
          description: The account is not allowed to perform this operation.
      example:
        code: account_not_allowed
        message: The account is not allowed to perform this operation.
    response_object_limit_reached:
      type: object
      description: Object limit reached.
      properties:
        code:
          type: string
        message:
          type: string
          description: You reached the limit of entities of this type for this branch.
      example:
        code: object_limit_reached
        message: You reached the limit of entities of this type for this branch.
    response_not_found:
      type: object
      description: Not found. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: not_found
        message:
          type: string
          description: Not found. The message will vary depending on the cause.
      example:
        code: not_found
        message: Resource not found.
    response_method_not_allowed:
      type: object
      description: Method not allowed. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: method_not_allowed
        message:
          type: string
          description: Method not allowed. The message will vary depending on the cause.
      example:
        code: method_not_allowed
        message: Method not allowed.
    response_conflict:
      type: object
      description: Conflict. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: conflict
        message:
          type: string
          description: Conflict. The message will vary depending on the cause.
      example:
        code: conflict
        message: User already exists.
    response_too_many_request:
      type: object
      description: Too many requests. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: too_many_requests
        message:
          type: string
          description: Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
      example:
        code: too_many_requests
        message: Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
    response_internal_server_error:
      type: object
      description: Internal server error. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: internal_server_error
        message:
          type: string
          description: Internal server error. The message will vary depending on the cause.
      example:
        code: internal_server_error
        message: Server cannot be connected to identity provider facebook.
    response_not_implemented:
      type: object
      description: Not implemented. The code and message will vary depending on the cause.
      properties:
        code:
          type: string
          description: not_implemented
        message:
          type: string
          description: Not implemented. The message will vary depending on the cause.
      example:
        code: not_implemented
        message: Unsupported response type.
    response_service_unavailable:
      type: object
      description: Service unavailable. The code and message will vary depending on the cause.
      properties:
        code:
          type: string
          description: service_unavailable
        message:
          type: string
          description: Service unavailable. The message will vary depending on the cause.
      example:
        code: service_unavailable
        message: Service temporarily unavailable.
    response_unexpected_error:
      type: object
      description: Unexpected Error. The message will vary depending on the cause.
      properties:
        code:
          type: string
          description: unexpected_error
        message:
          type: string
          description: Unexpected Error. The message will vary depending on the cause.
      example:
        code: unexpected_error
        message: Unexpected Error.
    # General Schemas
    id:
      type: string
      description: System generated uuid
      format: uuid
    created_at:
      type: string
      description: Create at date and time
      format: date-time
    updated_at:
      type: string
      description: Updated at date and time
      format: date-time
    key_value_pair:
      type: object
      description: key value pair structure
      properties:
        key:
          description: Key
          type: string
          minLength: 1
        value:
          type: object
          description: Value
    app_metadata:
      type: array
      description: application metadata structure for customize your needs.
      items:
        $ref: "#/components/schemas/key_value_pair"
    locale:
      type: string
      description: Supported Locales
      default: en_US
      enum:
        - en_US
        - en_UK
        - mn_MN
    timezone:
      type: string
      description: Time zone. For example, Europe/Paris or America/Los_Angeles.
      enum:
        - America/Los_Angeles
        - Europe/Paris
    bearer_authorization:
      type: string
      description: Access Token
      default: "Bearer {{access_token}}"
    language:
      type: string
      description: Languages
      default: en_US
      enum:
        - en_US
        - en_UK
        - mn_MN
    # Server
    server_health:
      type: object
      description: Server Status
      properties:
        server_name:
          type: string
          description: Server Name
          example: Reworkly APIs
        server_version:
          type: string
          description: The version is configured in your company instance. You can use **latest** keyword for latest version.
          example: v1
        server_status:
          type: string
          description: Server Status
          enum:
            - Active
            - Warning
            - Error
          default: Active
        server_description:
          type: string
          description: Server Description
          example: API Server for Reworkly Recruiting
    server_settings:
      type: object
      description: Server Settings
    # User Management
    user_id:
      type: string
      description: User Id
      format: uuid
    user_role:
      type: string
      description: User Role
      enum:
        - recruiter
        - reviewer
        - admin
    user:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/user_id"
        username:
          type: string
          description: Username. `Unique`
          example: joe@example.com
        email:
          description: Email address of User. `Unique`
          type: string
          format: email
          example: joe@example.com
        email_verified:
          description: Email address verified?
          type: boolean
          example: true
        phone:
          description: User phone number in international format. `Unique`
          type: string
          pattern: '/^\+(?:[0-9]-?){6,14}[0-9]$/'
        phone_verified:
          description: Phone number verified?
          type: boolean
          example: true
        nickname:
          type: string
          description: Nick name
          example: Joe
        firstname:
          type: string
          description: First name
          example: John
        middlename:
          type: string
          description: Middle name
        lastname:
          type: string
          description: Last name
          example: Doe
        familyname:
          type: string
          description: Family name
        fullname:
          type: string
          description: Full name
          example: John Doe
        picture:
          type: string
          format: url
          description: Picture URL of User
          example: "https://github.com/reworkly.png"
        profile:
          type: string
          format: url
          description: URL of the End-User's profile page.
          example: "https://github.com/reworkly"
        website:
          type: string
          format: url
          description: Website URL of the End-User's Web page or blog.
          example: "https://twitter.com/reworklyHQ"
        gender:
          type: string
          description: End-User's gender. Values defined by this specification are female and male.
          example: male
        birthday:
          type: string
          format: date
          description: End-User's birthday, represented as an ISO 8601:2004 [ISO8601â€‘2004] YYYY-MM-DD format.
        zoneinfo:
          $ref: "#/components/schemas/timezone"
        locale:
          $ref: "#/components/schemas/locale"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        is_blocked:
          description: User blocked?
          type: boolean
          example: false
        is_admin:
          description: Is admin?
          type: boolean
          example: false
        invited_at:
          description: User invited date and time
          type: string
          format: date-time
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    # Account Management
    account_id:
      type: string
      description: Account Id
      format: uuid
    # Job
    job_id:
      type: string
      format: uuid
      title: Job Id
      description: Job Id
    job_name:
      type: string
      title: Job Name
      description: Job Name
      example: Senior Backend Developer
    job_description:
      type: string
      title: Job Description
      description: Job Description
      example: Senior Backend Developer
    job_requirements:
      type: string
      title: Requirements
      description: Job Requirements
      example: Example job requirements
    job_workload:
      type: string
      title: Load
      description: |
        Job Workload:
          - Fulltime
          - Parttime

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - fulltime
        - parttime
      default: fulltime
    job_temporary:
      type: boolean
      title: Temporary
      description: Temporary Job?
      default: false
    job_function:
      type: string
      title: Function
      description: Job Function
      example: human resources
    job_department:
      type: string
      title: Department
      description: Job Department
      example: Employees Department
    job_location:
      type: string
      title: Location
      description: Job Location
      example: Remote
    job_industry:
      type: string
      title: Industry
      description: Job Industry
      example: Education
    job_benefits:
      type: string
      title: Benefits
      description: Job Benefits
      example: Example job benefits
    job_salary:
      type: object
      title: Salary
      description: Job Salary
      properties:
        min:
          type: integer
          title: Min
          description: Minimum Salary
          example: 1000
        max:
          type: integer
          title: Max
          description: Maximum Salary
          example: 1500
        currency:
          type: string
          title: Currency Code
          description: |
            Currency Codes:
              - USD
              - MNT
              - and more...

            If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
          enum:
            - usd
            - mnt
        frequency:
          type: string
          title: Frequency
          description: |
            Salary Frequency:
              - Hourly
              - Daily
              - Weekly
              - Biweekly
              - Monthly
              - Quarterly
              - Yearly

            If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
          enum:
            - hourly
            - daily
            - weekly
            - biweekly
            - monthly
            - quarterly
            - yearly
    job_status:
      type: string
      title: Status
      description: |
        Job Statuses:
          - Draft
          - Published
          - Published for Internal
          - Closed
          - Archived

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      default: draft
      enum:
        - draft
        - published
        - published_internal
        - closed
        - archived
    job_metadata:
      type: object
      title: Job Metadata
      description: Job Metadata. It depends on job type.
      properties:
        application_form:
          type: object
          title: Application Form
          description: |
            Application forms are attached to specific jobs youâ€™re recruiting for.
          properties:
            form_id:
              type: string
              format: uuid
              title: Form Id
              description: Form Id from the Form APIs
            collector_id:
              type: string
              format: uuid
              title: Collector Id
              description: Collector Id from the Form APIs
        candidate_numbering:
          type: object
          title: Candidate Numbering
          description: Candidate Numbering Configuration
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Candidate Numbering Enabled?
              default: false
            format:
              type: string
              title: Format
              description: Candidate Numbering Format
              example: "[abcd][ABCD]"
        tags:
          type: array
          title: Tags
          description: Job Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - MBA
            - program
            - Fall
            - 2023 year
    job_aggregations:
      type: object
      title: Job Aggregations
      description: Job Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        job_id:
          $ref: "#/components/schemas/job_id"
        stages:
          type: integer
          description: Number of Stages
          default: 0
        sources:
          type: integer
          description: Number of Sources
          default: 0
        candidates:
          type: object
          title: Candidates
          description: Number of Candidates
          properties:
            qualified:
              type: integer
              title: Qualified
              description: Number of Qualified Candidates
              default: 0
            disqualified:
              type: integer
              title: Disqualified
              description: Number of Disqualified Candidates
              default: 0
        events:
          type: integer
          description: Number of Events
          default: 0
        members:
          type: integer
          description: Number of Members
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job:
      type: object
      title: Job
      description: Job
      properties:
        id:
          $ref: "#/components/schemas/job_id"
        name:
          $ref: "#/components/schemas/job_name"
        description:
          $ref: "#/components/schemas/job_description"
        requirements:
          $ref: "#/components/schemas/job_requirements"
        workload:
          $ref: "#/components/schemas/job_workload"
        temporary:
          $ref: "#/components/schemas/job_temporary"
        function:
          $ref: "#/components/schemas/job_function"
        department:
          $ref: "#/components/schemas/job_department"
        location:
          $ref: "#/components/schemas/job_location"
        industry:
          $ref: "#/components/schemas/job_industry"
        benefits:
          $ref: "#/components/schemas/job_benefits"
        salary:
          $ref: "#/components/schemas/job_salary"
        metadata:
          $ref: "#/components/schemas/job_metadata"
        status:
          $ref: "#/components/schemas/job_status"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_expanded:
      type: object
      title: Job Expanded
      description: Job Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_id"
        name:
          $ref: "#/components/schemas/job_name"
        description:
          $ref: "#/components/schemas/job_description"
        requirements:
          $ref: "#/components/schemas/job_requirements"
        workload:
          $ref: "#/components/schemas/job_workload"
        temporary:
          $ref: "#/components/schemas/job_temporary"
        function:
          $ref: "#/components/schemas/job_function"
        department:
          $ref: "#/components/schemas/job_department"
        location:
          $ref: "#/components/schemas/job_location"
        industry:
          $ref: "#/components/schemas/job_industry"
        benefits:
          $ref: "#/components/schemas/job_benefits"
        salary:
          $ref: "#/components/schemas/job_salary"
        metadata:
          $ref: "#/components/schemas/job_metadata"
        status:
          $ref: "#/components/schemas/job_status"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/job_aggregations"
        stages:
          type: array
          title: Stages
          items:
            $ref: "#/components/schemas/job_stage"
        sources:
          type: array
          title: Sources
          items:
            $ref: "#/components/schemas/job_source"
        candidates:
          type: array
          title: Candidates
          items:
            $ref: "#/components/schemas/candidate"
        events:
          type: array
          title: Events
          items:
            $ref: "#/components/schemas/job_event"
        members:
          type: array
          title: Members
          items:
            $ref: "#/components/schemas/job_member"
    jobs:
      type: object
      title: Jobs
      description: Jobs
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Jobs in the collection.
          items:
            $ref: "#/components/schemas/job_expanded"
    job_create:
      type: object
      title: Create Job
      description: Create Job
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/job_name"
        description:
          $ref: "#/components/schemas/job_description"
        requirements:
          $ref: "#/components/schemas/job_requirements"
        workload:
          $ref: "#/components/schemas/job_workload"
        temporary:
          $ref: "#/components/schemas/job_temporary"
        function:
          $ref: "#/components/schemas/job_function"
        department:
          $ref: "#/components/schemas/job_department"
        location:
          $ref: "#/components/schemas/job_location"
        industry:
          $ref: "#/components/schemas/job_industry"
        benefits:
          $ref: "#/components/schemas/job_benefits"
        salary:
          $ref: "#/components/schemas/job_salary"
        metadata:
          $ref: "#/components/schemas/job_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_update:
      type: object
      title: Update Job
      description: Update Job
      properties:
        name:
          $ref: "#/components/schemas/job_name"
        description:
          $ref: "#/components/schemas/job_description"
        requirements:
          $ref: "#/components/schemas/job_requirements"
        workload:
          $ref: "#/components/schemas/job_workload"
        temporary:
          $ref: "#/components/schemas/job_temporary"
        function:
          $ref: "#/components/schemas/job_function"
        department:
          $ref: "#/components/schemas/job_department"
        location:
          $ref: "#/components/schemas/job_location"
        industry:
          $ref: "#/components/schemas/job_industry"
        benefits:
          $ref: "#/components/schemas/job_benefits"
        salary:
          $ref: "#/components/schemas/job_salary"
        metadata:
          $ref: "#/components/schemas/job_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_duplicate:
      type: object
      title: Duplicate Job
      description: Duplicate Job
      properties:
        name:
          $ref: "#/components/schemas/job_name"
        description:
          $ref: "#/components/schemas/job_description"
    job_status_change:
      type: object
      title: Change Job Status
      description: Change Job Status
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/job_status"
    job_stage_id:
      type: string
      format: uuid
      title: Stage Id
      description: Stage Id
    job_stage_locked:
      type: boolean
      title: Locked
      description: Stage Locked
      default: false
    job_stage_type:
      type: string
      description: |
        Stage Types:
          - Sourced
          - Applied
          - Shortlisted
          - Assessment
          - Interview
          - Offer
          - Hired

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - sourced
        - applied
        - shortlisted
        - assessment
        - interview
        - offer
        - hired
    job_stage_metadata:
      type: object
      title: Stage Metadata
      description: Stage Metadata. It depends on stage type.
      oneOf:
        - $ref: "#/components/schemas/job_stage_metadata_sourced"
        - $ref: "#/components/schemas/job_stage_metadata_applied"
        - $ref: "#/components/schemas/job_stage_metadata_shortlisted"
        - $ref: "#/components/schemas/job_stage_metadata_assessment"
        - $ref: "#/components/schemas/job_stage_metadata_interview"
        - $ref: "#/components/schemas/job_stage_metadata_offer"
    job_stage_metadata_sourced:
      type: object
      title: Sourced
      description: Sourced Stage Metadata.
    job_stage_metadata_applied:
      type: object
      title: Applied
      description: Applied Stage Metadata.
    job_stage_metadata_shortlisted:
      type: object
      title: Shortlisted
      description: Shortlisted Stage Metadata.
    job_stage_metadata_assessment:
      type: object
      title: Assessment
      description: Assessment Stage Metadata.
      properties:
        assessment_id:
          type: string
          format: uuid
          title: Assessment Id
          description: Assessment Id
    job_stage_metadata_interview:
      type: object
      title: Interview
      description: Interview Stage Metadata.
    job_stage_metadata_offer:
      type: object
      title: Offer
      description: Offer Stage Metadata.
    job_stage_aggregations:
      type: object
      title: Stage Aggregations
      description: Stage Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        candidates:
          type: integer
          description: Number of Candidates
          default: 0
        events:
          type: integer
          description: Number of Events
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_stage:
      type: object
      title: Stage
      description: Job Stage
      properties:
        id:
          $ref: "#/components/schemas/job_stage_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        type:
          $ref: "#/components/schemas/job_stage_type"
        name:
          type: string
          title: Name
          description: Stage Name
          example: Sourced
        description:
          type: string
          title: Description
          description: Stage Description
          example: Sourced Stage
        sequence:
          type: integer
          format: int32
          title: Sequence
          description: Stage Sequence
          example: 1
        locked:
          $ref: "#/components/schemas/job_stage_locked"
        metadata:
          $ref: "#/components/schemas/job_stage_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_stage_expanded:
      type: object
      title: Stage Expanded
      description: Job Stage Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_stage_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        job_data:
          $ref: "#/components/schemas/job"
        type:
          $ref: "#/components/schemas/job_stage_type"
        name:
          type: string
          title: Name
          description: Stage Name
          example: Sourced
        description:
          type: string
          title: Description
          description: Stage Description
          example: Sourced Stage
        sequence:
          type: integer
          format: int32
          title: Sequence
          description: Stage Sequence
          example: 1
        locked:
          $ref: "#/components/schemas/job_stage_locked"
        metadata:
          $ref: "#/components/schemas/job_stage_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/job_stage_aggregations"
        candidates:
          type: array
          title: Candidates
          items:
            $ref: "#/components/schemas/candidate"
        events:
          type: array
          title: Events
          items:
            $ref: "#/components/schemas/job_event"
    job_stages:
      type: object
      title: Stages
      description: Stages
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Stages in the collection.
          items:
            $ref: "#/components/schemas/job_stage_expanded"
    job_stage_create:
      type: object
      title: Add Stage
      description: Add Stage
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/job_stage_type"
        name:
          type: string
          title: Name
          description: Stage Name
          example: Sourced
        description:
          type: string
          title: Description
          description: Stage Description
          example: Sourced Stage
        sequence:
          type: integer
          format: int32
          title: Sequence
          description: Stage Sequence
          example: 1
        metadata:
          $ref: "#/components/schemas/job_stage_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_stage_update:
      type: object
      title: Update Stage
      description: Update Stage
      properties:
        name:
          type: string
          title: Name
          description: Stage Name
          example: Sourced
        description:
          type: string
          title: Description
          description: Stage Description
          example: Sourced Stage
        sequence:
          type: integer
          format: int32
          title: Sequence
          description: Stage Sequence
          example: 1
        metadata:
          $ref: "#/components/schemas/job_stage_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_source_id:
      type: string
      format: uuid
      title: Source Id
      description: Source Id
    job_source_type:
      type: string
      title: Source Type
      description: |
        Source Types:
          - **Manual** - Used only if a recruiter add a candidate manually.
          - **Career Page** - Used only if a candidate apply from the Career Page.

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - manual
        - career_page
    job_source_metadata:
      type: object
      title: Source Metadata
      description: Source Metadata. It depends on source type.
      oneOf:
        - $ref: "#/components/schemas/job_source_metadata_manual"
        - $ref: "#/components/schemas/job_source_metadata_other_job"
        - $ref: "#/components/schemas/job_source_metadata_company_home"
    job_source_metadata_manual:
      type: object
      title: Manual
      description: Manual Source Metadata.
    job_source_metadata_other_job:
      type: object
      title: Other Job
      description: Other Job Source Metadata.
      properties:
        job_id:
          type: string
          format: uuid
          title: Job Id
          description: Source Job Id. Used only when candidate has sourced another job.
    job_source_metadata_company_home:
      type: object
      title: Company Home
      description: Company Home Source Metadata.
      properties:
        deadline:
          type: object
          description: Deadline Configuration
          properties:
            enabled:
              type: boolean
              description: Deadline Enabled. Enable to set a start / end date for when your source will be accessible and will be applying candidates.
              default: false
            start_at:
              type: string
              format: date-time
              description: Start Date and Time
            end_at:
              type: string
              format: date-time
              description: End Date and Time
        limits:
          type: integer
          format: int32
          title: Limits
          description: Maximum Candidate Count. Stop applying candidates after you receive a certain number of candidates.
          default: null
    job_source_aggregations:
      type: object
      title: Source Aggregations
      description: Source Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        source_id:
          $ref: "#/components/schemas/job_source_id"
        candidates:
          type: integer
          description: Number of Candidates
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_source:
      type: object
      title: Source
      description: Job Source
      properties:
        id:
          $ref: "#/components/schemas/job_source_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        type:
          $ref: "#/components/schemas/job_source_type"
        name:
          type: string
          title: Name
          description: Source Name
          example: Manual Source
        description:
          type: string
          title: Description
          description: Source Description
          example: Manual Source
        metadata:
          $ref: "#/components/schemas/job_source_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_source_expanded:
      type: object
      title: Source Expanded
      description: Job Source Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_source_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        type:
          $ref: "#/components/schemas/job_source_type"
        name:
          type: string
          title: Name
          description: Source Name
          example: Manual Source
        description:
          type: string
          title: Description
          description: Source Description
          example: Manual Source
        metadata:
          $ref: "#/components/schemas/job_source_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/job_source_aggregations"
        candidates:
          type: array
          title: Candidates
          items:
            $ref: "#/components/schemas/candidate"
    job_sources:
      type: object
      title: Sources
      description: Sources
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Sources in the collection.
          items:
            $ref: "#/components/schemas/job_source_expanded"
    job_source_create:
      type: object
      title: Add Source
      description: Add Source
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/job_source_type"
        name:
          type: string
          title: Name
          description: Source Name
          example: Manual Source
        description:
          type: string
          title: Description
          description: Source Description
          example: Manual Source
        metadata:
          $ref: "#/components/schemas/job_source_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_source_update:
      type: object
      title: Update Source
      description: Update Source
      properties:
        name:
          type: string
          title: Name
          description: Source Name
          example: Manual Source
        description:
          type: string
          title: Description
          description: Source Description
          example: Manual Source
        metadata:
          $ref: "#/components/schemas/job_source_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_member_id:
      type: string
      format: uuid
      title: Member Id
      description: Member Id
    job_member:
      type: object
      title: Member
      description: Job Member
      properties:
        id:
          $ref: "#/components/schemas/job_member_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        user_role:
          $ref: "#/components/schemas/user_role"
        user_id:
          $ref: "#/components/schemas/user_id"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_member_expanded:
      type: object
      title: Member Expanded
      description: Member Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_member_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        job_data:
          $ref: "#/components/schemas/job"
        user_role:
          $ref: "#/components/schemas/user_role"
        user_id:
          $ref: "#/components/schemas/user_id"
        user_data:
          $ref: "#/components/schemas/user"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_members:
      type: object
      title: Members
      description: Job Members
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Members in the collection.
          items:
            $ref: "#/components/schemas/job_member_expanded"
    job_member_create:
      type: object
      title: Add Members
      description: Add Members
      properties:
        user_role:
          $ref: "#/components/schemas/user_role"
        users:
          type: array
          title: Users
          description: Users
          items:
            $ref: "#/components/schemas/user_id"
    # Candidate Management
    candidate_id:
      type: string
      format: uuid
      title: Job Candidate Id
      description: Job Candidate Id
    candidate_name:
      type: string
      title: Name
      description: Candidate Name
      example: John Doe
    candidate_description:
      type: string
      title: Description
      description: Candidate Description
      example: Some text here
    candidate_referred_user_id:
      type: string
      title: Referred User Id
      description: Referred User Id
      example: referred-user-id-123-abc
    candidate_originating_candidate_id:
      type: string
      title: Originating Candidate Id
      description: The ID this candidate originated from (has a value in case of candidate copy / move)
      example: originating-candidate-id-123-abc
    candidate_disqualified:
      type: boolean
      title: Disqualified
      description: Disqualified
      default: false
    candidate_disqualified_by:
      type: string
      format: uuid
      title: Disqualified By
      description: Disqualified By
      default: null
    candidate_disqualified_at:
      type: string
      format: date-time
      title: Disqualified At
      description: Disqualified Date and Time
      default: null
    candidate_disqualified_reason:
      type: string
      title: Disqualified Reason
      description: Disqualified Reason
      default: null
    candidate_status:
      type: string
      title: Status
      description: |
        Candidate Statuses:
          - Draft
          - Submitted
          - Completed

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      default: draft
      enum:
        - draft
        - submitted
        - completed
    candidate_metadata:
      type: object
      title: Candidate Metadata
      description: Candidate Metadata
      properties:
        candidate_number:
          type: string
          title: Candidate Number
          description: Candidate Number
          example: CAND1001
        application_form:
          type: object
          title: Application Form
          description: |
            Application forms are attached to specific jobs youâ€™re recruiting for.
          properties:
            form_id:
              type: string
              format: uuid
              title: Form Id
              description: Form Id from the Form APIs
            collector_id:
              type: string
              format: uuid
              title: Collector Id
              description: Collector Id from the Form APIs
            response_id:
              type: string
              format: uuid
              title: Response Id
              description: Response Id from the Form APIs
        tags:
          type: array
          title: Tags
          description: Candidate Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - adventurer
            - fisher
    candidate_aggregations:
      type: object
      title: Candidate Aggregations
      description: Candidate Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
        events:
          type: integer
          description: Number of Events
          default: 0
        offers:
          type: integer
          description: Number of Offers
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    candidate:
      type: object
      title: Job Candidate
      description: Job Candidate
      properties:
        id:
          $ref: "#/components/schemas/candidate_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        source_id:
          $ref: "#/components/schemas/job_source_id"
        user_id:
          $ref: "#/components/schemas/user_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        name:
          $ref: "#/components/schemas/candidate_name"
        description:
          $ref: "#/components/schemas/candidate_description"
        referred_user_id:
          $ref: "#/components/schemas/candidate_referred_user_id"
        originating_candidate_id:
          $ref: "#/components/schemas/candidate_originating_candidate_id"
        disqualified:
          $ref: "#/components/schemas/candidate_disqualified"
        disqualified_by:
          $ref: "#/components/schemas/candidate_disqualified_by"
        disqualified_at:
          $ref: "#/components/schemas/candidate_disqualified_at"
        disqualified_reason:
          $ref: "#/components/schemas/candidate_disqualified_reason"
        status:
          $ref: "#/components/schemas/candidate_status"
        metadata:
          $ref: "#/components/schemas/candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    candidate_expanded:
      type: object
      title: Job Candidate Expanded
      description: Job Candidate Expanded
      properties:
        id:
          $ref: "#/components/schemas/candidate_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        job_data:
          $ref: "#/components/schemas/job"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        stage_data:
          $ref: "#/components/schemas/job_stage"
        source_id:
          $ref: "#/components/schemas/job_source_id"
        source_data:
          $ref: "#/components/schemas/job_source"
        user_id:
          $ref: "#/components/schemas/user_id"
        user_data:
          $ref: "#/components/schemas/user"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        name:
          $ref: "#/components/schemas/candidate_name"
        description:
          $ref: "#/components/schemas/candidate_description"
        referred_user_id:
          $ref: "#/components/schemas/candidate_referred_user_id"
        referred_user_data:
          $ref: "#/components/schemas/user"
        originating_candidate_id:
          $ref: "#/components/schemas/candidate_originating_candidate_id"
        originating_candidate_data:
          $ref: "#/components/schemas/candidate"
        disqualified:
          $ref: "#/components/schemas/candidate_disqualified"
        disqualified_by:
          $ref: "#/components/schemas/candidate_disqualified_by"
        disqualified_at:
          $ref: "#/components/schemas/candidate_disqualified_at"
        disqualified_reason:
          $ref: "#/components/schemas/candidate_disqualified_reason"
        status:
          $ref: "#/components/schemas/candidate_status"
        metadata:
          $ref: "#/components/schemas/candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/candidate_aggregations"
        events:
          type: array
          title: Events
          items:
            $ref: "#/components/schemas/job_event"
        offers:
          type: array
          title: Offers
          items:
            $ref: "#/components/schemas/job_offer"
    candidates:
      type: object
      title: Candidates
      description: Candidates
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: The candidates in the collection.
          items:
            $ref: "#/components/schemas/candidate_expanded"
    candidate_create_type:
      type: string
      title: Creation Type
      description: Creation Type
      enum:
        - manual
        - pool_candidate
    candidate_create:
      type: object
      title: Add Candidate
      description: Add Candidate
      oneOf:
        - $ref: "#/components/schemas/candidate_create_manual"
        - $ref: "#/components/schemas/candidate_create_pool_candidate"
      discriminator:
        propertyName: type
        mapping:
          manual: "#/components/schemas/candidate_create_manual"
          pool_candidate: "#/components/schemas/candidate_create_pool_candidate"
      properties:
        type:
          $ref: "#/components/schemas/pool_candidate_create_type"
    candidate_create_manual:
      type: object
      title: Add Candidate
      description: Add Candidate
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/candidate_create_type"
        name:
          $ref: "#/components/schemas/candidate_name"
        description:
          $ref: "#/components/schemas/candidate_description"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        source_id:
          $ref: "#/components/schemas/job_source_id"
        user_id:
          $ref: "#/components/schemas/user_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        referred_user_id:
          $ref: "#/components/schemas/candidate_referred_user_id"
        metadata:
          $ref: "#/components/schemas/candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    candidate_create_pool_candidate:
      type: object
      title: Pool Candidate
      description: Create from Pool Candidate
      required:
        - type
        - candidate_id
      properties:
        type:
          $ref: "#/components/schemas/candidate_create_type"
        candidate_id:
          $ref: "#/components/schemas/pool_candidate_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
    candidate_update:
      type: object
      title: Update Candidate
      description: Update Candidate
      properties:
        user_id:
          $ref: "#/components/schemas/user_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        name:
          $ref: "#/components/schemas/candidate_name"
        description:
          $ref: "#/components/schemas/candidate_description"
        referred_user_id:
          $ref: "#/components/schemas/candidate_referred_user_id"
        metadata:
          $ref: "#/components/schemas/candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    candidate_status_change:
      type: object
      title: Change Candidate Status
      description: Change Candidate Status
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/candidate_status"
    candidate_move:
      type: object
      title: Move Candidate
      description: Move Candidate to Another Stage.
      required:
        - stage_id
      properties:
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
    candidate_disqualify:
      type: object
      title: Disqualify Candidate
      description: Disqualify Candidate
      properties:
        reason:
          $ref: "#/components/schemas/candidate_disqualified_reason"
    candidate_duplicate:
      type: object
      title: Duplicate Candidate
      description: Duplicate Candidate
      required:
        - job_id
      properties:
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
    candidate_transfer:
      type: object
      title: Transfer Candidate
      description: Transfer Candidate
      required:
        - job_id
      properties:
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
    candidate_move_bulk:
      type: object
      title: Move Candidate
      description: Move Candidate to Another Stage.
      required:
        - stage_id
      properties:
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        candidates:
          type: array
          title: Candidates
          description: Candidates to move
          items:
            $ref: "#/components/schemas/candidate_id"
    candidate_disqualify_bulk:
      type: object
      title: Disqualify Candidate
      description: Disqualify Candidate
      properties:
        reason:
          $ref: "#/components/schemas/candidate_disqualified_reason"
        candidates:
          type: array
          title: Candidates
          description: Candidates to disqualify
          items:
            $ref: "#/components/schemas/candidate_id"
    candidate_duplicate_bulk:
      type: object
      title: Duplicate Candidate
      description: Duplicate Candidate
      required:
        - job_id
      properties:
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        candidates:
          type: array
          title: Candidates
          description: Candidates to duplicate
          items:
            $ref: "#/components/schemas/candidate_id"
    candidate_transfer_bulk:
      type: object
      title: Transfer Candidate
      description: Transfer Candidate
      required:
        - job_id
      properties:
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        candidates:
          type: array
          title: Candidates
          description: Candidates to transfer
          items:
            $ref: "#/components/schemas/candidate_id"
    # Job Offer
    job_offer_id:
      type: string
      format: uuid
      title: Offer Id
      description: Offer Id
    job_offer_status:
      type: string
      title: Status
      description: |
        Offer Status:
          - Draft
          - Sent
          - Accepted
          - Rejected
          - Canceled

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - draft
        - sent
        - accepted
        - rejected
        - canceled
    job_offer_title:
      type: string
      title: Title
      description: Offer Title
      example: Offer for the Job
    job_offer_body:
      type: string
      title: Body
      description: Offer Body
      example: |
        [date_today]

        Dear [candidate_name],

        Weâ€™re delighted to extend this offer of employment for the position of [job_name] with [company_name]. 
        Please review this summary of terms and conditions for your anticipated employment with us. 
        If you accept this offer, your start date will be [start_date] or 
        another mutually agreed upon date and you would report to [direct_manager_name].

        Please find below the terms and conditions of your employment, should you accept this offer letter:

        **Position.**
        Your title will be [job_name], and you will report to [direct_manager_name].  

        **Cash Compensation.**
        The Company will pay you a starting salary at the rate of [salary], minus applicable taxes, 
        payable in accordance with the Companyâ€™s standard payroll schedule, beginning [start_date]. 
        This salary will be subject to adjustment pursuant to the Companyâ€™s employee compensation policies in effect from time to time. 

        **Bonus (or Commission) potential.**
        In addition, you will be eligible to be considered for an incentive bonus for each fiscal year of the Company. 
        The bonus (if any) will be awarded based on objective or subjective condition established by the Companyâ€™s Chief Executive Officer
        and approved by the Companyâ€™s Board of Directors.  
        Your target bonus will be paying out up to  [bonus]% of your annual base salary.  
        Any bonus for the fiscal year in which your employment begins will be prorated, based on the number of days you are employed by the Company during that fiscal year. 

        **Employee Benefits.**
        As a regular employee of the Company, you will be eligible to participate in a number of Company-sponsored benefits.  
        In addition, you will be entitled to paid vacation of [paid_time_off] days per year,  in accordance with the Companyâ€™s vacation policy. 

        You may indicate your agreement with these terms and accept this offer by signing and dating this agreement on or before [offer_expiration_date]. 
        Upon your acceptance of this employment offer, [company_name] will provide you with the necessary paperwork and instructions. 

        Sincerely,

        [sender_name]
    job_offer_metadata:
      type: object
      title: Offer Metadata
      description: Offer Metadata.
    job_offer_aggregations:
      type: object
      title: Offer Aggregations
      description: Offer Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        offer_id:
          $ref: "#/components/schemas/job_offer_id"
        variables:
          type: integer
          description: Number of Variables
          default: 0
        documents:
          type: integer
          description: Number of Documents
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_offer:
      type: object
      title: Offer
      description: Candidate Offer
      properties:
        id:
          $ref: "#/components/schemas/job_offer_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
        title:
          $ref: "#/components/schemas/job_offer_title"
        body:
          $ref: "#/components/schemas/job_offer_body"
        status:
          $ref: "#/components/schemas/job_offer_status"
        metadata:
          $ref: "#/components/schemas/job_offer_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_offer_expanded:
      type: object
      title: Offer Expanded
      description: Candidate Offer Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_offer_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        job_data:
          $ref: "#/components/schemas/job"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        stage_data:
          $ref: "#/components/schemas/job_stage"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
        candidate_data:
          $ref: "#/components/schemas/candidate"
        title:
          $ref: "#/components/schemas/job_offer_title"
        body:
          $ref: "#/components/schemas/job_offer_body"
        status:
          $ref: "#/components/schemas/job_offer_status"
        metadata:
          $ref: "#/components/schemas/job_offer_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/job_offer_aggregations"
        variables:
          type: array
          description: Variables
          items:
            $ref: "#/components/schemas/job_offer_variable"
        documents:
          type: array
          description: Documents
          items:
            $ref: "#/components/schemas/job_offer_document"
    job_offers:
      type: object
      description: Job Offers
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Offers in the collection.
          items:
            $ref: "#/components/schemas/job_offer_expanded"
    job_offer_create:
      type: object
      title: Add Offer
      description: Add Offer
      required:
        - candidate_id
        - title
      properties:
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
        title:
          $ref: "#/components/schemas/job_offer_title"
        body:
          $ref: "#/components/schemas/job_offer_body"
        metadata:
          $ref: "#/components/schemas/job_offer_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_offer_update:
      type: object
      title: Update Offer
      description: Update Offer
      properties:
        title:
          $ref: "#/components/schemas/job_offer_title"
        body:
          $ref: "#/components/schemas/job_offer_body"
        metadata:
          $ref: "#/components/schemas/job_offer_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_offer_status_change:
      type: object
      title: Change Offer Status
      description: Change Offer Status
      properties:
        status:
          $ref: "#/components/schemas/job_offer_status"
      example:
        status: sent
    job_offer_variable_value:
      type: string
      title: Variable Value
      description: Offer Variable Value
      example: "2019-08-24"
    job_offer_variable_type:
      type: string
      title: Variable
      description: |
        Offer Variable:
          - Today's Date
          - Candidate Id
          - Candidate Name
          - Candidate Number
          - Job Id
          - Job Name
          - Company Name
          - Salary Amount
          - Salary Currency
          - Salary Frequency
          - and more...

          If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - date_today
        - candidate_id
        - candidate_name
        - candidate_number
        - job_id
        - job_name
        - company_name
        - salary_amount
        - salary_currency
        - salary_frequency
    job_offer_variable:
      type: object
      title: Variable
      description: Offer Variable
      properties:
        offer_id:
          $ref: "#/components/schemas/job_offer_id"
        variable:
          $ref: "#/components/schemas/job_offer_variable_type"
        value:
          $ref: "#/components/schemas/job_offer_variable_value"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_offer_variable_expanded:
      type: object
      title: Variable
      description: Offer Variable
      properties:
        offer_id:
          $ref: "#/components/schemas/job_offer_id"
        offer_data:
          $ref: "#/components/schemas/job_offer"
        variable:
          $ref: "#/components/schemas/job_offer_variable_type"
        value:
          $ref: "#/components/schemas/job_offer_variable_value"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_offer_variables:
      type: object
      title: Variables
      description: Offer Variables
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Variables in the collection.
          items:
            $ref: "#/components/schemas/job_offer_variable_expanded"
    job_offer_variable_create:
      type: object
      title: Add Variable
      description: Add Offer Variable
      required:
        - variable
      properties:
        variable:
          $ref: "#/components/schemas/job_offer_variable_type"
        value:
          $ref: "#/components/schemas/job_offer_variable_value"
    job_offer_variable_update:
      type: object
      title: Update Variable
      description: Update Offer Variable
      properties:
        value:
          $ref: "#/components/schemas/job_offer_variable_value"
    job_offer_document_id:
      type: string
      format: uuid
      title: Document Id
      description: Offer Document Id
    job_offer_document_type:
      type: string
      title: Type
      description: |
        Document Type:
          - Offer
          - Document

          If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - offer
        - document
    job_offer_document:
      type: object
      title: Document
      description: Offer Document
      properties:
        id:
          $ref: "#/components/schemas/job_offer_document_id"
        offer_id:
          $ref: "#/components/schemas/job_offer_id"
        type:
          $ref: "#/components/schemas/job_offer_document_type"
        file_id:
          type: string
          title: File Id
          description: File Id
          example: 123-abc-456-def-789-ghi
        file_name:
          type: string
          title: File Name
          description: File Name
          example: Employee CV.pdf
        file_type:
          type: string
          title: File Type
          description: File Type
          example: pdf
        file_size:
          type: integer
          format: int64
          title: File Size
          description: File Size in bytes
          example: 1024
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_offer_document_expanded:
      type: object
      title: Document Expanded
      description: Offer Document Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_offer_document_id"
        offer_id:
          $ref: "#/components/schemas/job_offer_id"
        offer_data:
          $ref: "#/components/schemas/job_offer"
        type:
          $ref: "#/components/schemas/job_offer_document_type"
        file_id:
          type: string
          title: File Id
          description: File Id
          example: 123-abc-456-def-789-ghi
        file_name:
          type: string
          title: File Name
          description: File Name
          example: Contract.pdf
        file_type:
          type: string
          title: File Type
          description: File Type
          example: pdf
        file_size:
          type: integer
          format: int64
          title: File Size
          description: File Size in bytes
          example: 1024
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_offer_documents:
      type: object
      title: Documents
      description: Offer Documents
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Documents in the collection.
          items:
            $ref: "#/components/schemas/job_offer_document_expanded"
    job_offer_document_create:
      type: object
      title: Add Document
      description: Add Offer Document
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/job_offer_document_type"
        file_id:
          type: string
          title: File Id
          description: File Id
          example: 123-abc-456-def-789-ghi
        file_name:
          type: string
          title: File Name
          description: File Name
          example: Employee CV.pdf
        file_type:
          type: string
          title: File Type
          description: File Type
          example: pdf
        file_size:
          type: integer
          format: int64
          title: File Size
          description: File Size in bytes
          example: 1024
    job_offer_document_update:
      type: object
      title: Update Document
      description: Update Offer Document
      properties:
        type:
          $ref: "#/components/schemas/job_offer_document_type"
        file_id:
          type: string
          title: File Id
          description: File Id
          example: 123-abc-456-def-789-ghi
        file_name:
          type: string
          title: File Name
          description: File Name
          example: Employee CV.pdf
        file_type:
          type: string
          title: File Type
          description: File Type
          example: pdf
        file_size:
          type: integer
          format: int64
          title: File Size
          description: File Size in bytes
          example: 1024
    job_event_id:
      type: string
      format: uuid
      title: Event Id
      description: Event Id
    job_event_type:
      type: string
      description: |
        Event Types:
          - Call
          - Interview
          - Meeting

        If you want to get the list of values progmatically, use the [Lookups](/api/company#tag/Lookups) endpoints.
      enum:
        - call
        - interview
        - meeting
    job_event_metadata:
      type: object
      title: Event Metadata
      description: Event Metadata. It depends on event type.
      properties:
        start_at:
          type: string
          format: date-time
          title: Start At
          description: Start Date and Time of the Event
        end_at:
          type: string
          format: date-time
          title: End At
          description: End Date and Time of the Event
      oneOf:
        - $ref: "#/components/schemas/job_event_metadata_call"
        - $ref: "#/components/schemas/job_event_metadata_interview"
        - $ref: "#/components/schemas/job_event_metadata_meeting"
    job_event_metadata_call:
      type: object
      title: Call
      description: Call Event Metadata.
    job_event_metadata_interview:
      type: object
      title: Interview
      description: Interview Event Metadata.
    job_event_metadata_meeting:
      type: object
      title: Meeting
      description: Meeting Event Metadata.
      properties:
        mode:
          type: string
          title: Meeting Mode
          description: |
            Meeting Modes:
              - Onsite
              - Online
    job_event_aggregations:
      type: object
      title: Interview Aggregations
      description: Interview Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        event_id:
          $ref: "#/components/schemas/job_event_id"
        organizers:
          type: integer
          description: Number of Organizers
          default: 0
        candidates:
          type: integer
          description: Number of Candidates
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_event:
      type: object
      title: Interview
      description: Job Interview
      properties:
        id:
          $ref: "#/components/schemas/job_event_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        type:
          $ref: "#/components/schemas/job_event_type"
        name:
          type: string
          title: Name
          description: Interview Name
          example: Video Interview
        description:
          type: string
          title: Description
          description: Interview Description
          example: Video Interview
        metadata:
          $ref: "#/components/schemas/job_event_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_event_expanded:
      type: object
      title: Event Expanded
      description: Event Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_event_id"
        job_id:
          $ref: "#/components/schemas/job_id"
        job_data:
          $ref: "#/components/schemas/job"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        stage_data:
          $ref: "#/components/schemas/job_stage"
        type:
          $ref: "#/components/schemas/job_event_type"
        name:
          type: string
          title: Name
          description: Interview Name
          example: Video Interview
        description:
          type: string
          title: Description
          description: Interview Description
          example: Video Interview
        metadata:
          $ref: "#/components/schemas/job_event_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/job_event_aggregations"
        organizers:
          type: array
          title: Members
          items:
            $ref: "#/components/schemas/job_event_organizer"
        candidates:
          type: array
          title: Candidates
          items:
            $ref: "#/components/schemas/job_event_candidate"
    job_events:
      type: object
      title: Events
      description: Events
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Events in the collection.
          items:
            $ref: "#/components/schemas/job_event_expanded"
    job_event_create:
      type: object
      title: Add Event
      description: Add Event
      required:
        - type
        - name
      properties:
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        type:
          $ref: "#/components/schemas/job_event_type"
        name:
          type: string
          title: Name
          description: Interview Name
          example: Video Interview
        description:
          type: string
          title: Description
          description: Interview Description
          example: Video Interview
        metadata:
          $ref: "#/components/schemas/job_event_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_event_update:
      type: object
      title: Update Event
      description: Update Event
      properties:
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
        name:
          type: string
          title: Name
          description: Interview Name
          example: Video Interview
        description:
          type: string
          title: Description
          description: Interview Description
          example: Video Interview
        metadata:
          $ref: "#/components/schemas/job_event_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    job_event_organizer_id:
      type: string
      format: uuid
      title: Organizer Id
      description: Organizer Id
    job_event_organizer_status:
      type: string
      title: Organizer Status
      description: Organizer Status
      enum:
        - pending
        - accepted
        - rejected
    job_event_organizer:
      type: object
      title: Organizer
      description: Event Organizer
      properties:
        id:
          $ref: "#/components/schemas/job_event_organizer_id"
        event_id:
          $ref: "#/components/schemas/job_event_id"
        member_id:
          $ref: "#/components/schemas/job_member_id"
        status:
          $ref: "#/components/schemas/job_event_organizer_status"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_event_organizer_expanded:
      type: object
      title: Organizer Expanded
      description: Event Organizer Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_event_organizer_id"
        event_id:
          $ref: "#/components/schemas/job_event_id"
        event_data:
          $ref: "#/components/schemas/job_event"
        member_id:
          $ref: "#/components/schemas/job_member_id"
        member_data:
          $ref: "#/components/schemas/job_member"
        status:
          $ref: "#/components/schemas/job_event_organizer_status"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_event_organizers:
      type: object
      title: Organizers
      description: Event Organizers
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Organizers in the collection.
          items:
            $ref: "#/components/schemas/job_event_organizer_expanded"
    job_event_organizer_status_change:
      type: object
      title: Change Organizer Status
      description: Change Organizer Status
      properties:
        status:
          $ref: "#/components/schemas/job_event_organizer_status"
      example:
        status: accepted
    job_event_candidate_id:
      type: string
      format: uuid
      title: Event Candidate Id
      description: Event Candidate Id
    job_event_candidate:
      type: object
      title: Event Candidate
      description: Event Candidate
      properties:
        id:
          $ref: "#/components/schemas/job_event_candidate_id"
        event_id:
          $ref: "#/components/schemas/job_event_id"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_event_candidate_expanded:
      type: object
      title: Event Candidate Expanded
      description: Event Candidate Expanded
      properties:
        id:
          $ref: "#/components/schemas/job_event_candidate_id"
        event_id:
          $ref: "#/components/schemas/job_event_id"
        event_data:
          $ref: "#/components/schemas/job_event"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
        candidate_data:
          $ref: "#/components/schemas/candidate"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    job_event_candidates:
      type: object
      title: Event Candidates
      description: Event Candidates
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Candidates in the collection.
          items:
            $ref: "#/components/schemas/job_event_candidate_expanded"
    # Candidate Sorting
    sorting_id:
      type: string
      format: uuid
      title: Sorting Id
      description: Sorting Id
    sorting_name:
      type: string
      title: Sorting Name
      description: Sorting Name
      example: Overall
    sorting_description:
      type: string
      title: Sorting Description
      description: Sorting Description
      example: Overall Sorting
    sorting_metadata:
      type: object
      title: Sorting Metadata
      description: Sorting Metadata.
    sorting_aggregations:
      type: object
      title: Sorting Aggregations
      description: Sorting Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        conditions:
          type: integer
          description: Number of Conditions
          default: 0
        associations:
          type: integer
          title: Associations
          description: Number of Associations
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting:
      type: object
      title: Sorting
      description: Sorting
      properties:
        id:
          $ref: "#/components/schemas/sorting_id"
        name:
          $ref: "#/components/schemas/sorting_name"
        description:
          $ref: "#/components/schemas/sorting_description"
        metadata:
          $ref: "#/components/schemas/sorting_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_expanded:
      type: object
      title: Sorting Expanded
      description: Sorting Expanded
      properties:
        id:
          $ref: "#/components/schemas/sorting_id"
        name:
          $ref: "#/components/schemas/sorting_name"
        description:
          $ref: "#/components/schemas/sorting_description"
        metadata:
          $ref: "#/components/schemas/sorting_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/sorting_aggregations"
        conditions:
          type: array
          title: Conditions
          items:
            $ref: "#/components/schemas/sorting_condition"
        associations:
          type: array
          title: Associations
          items:
            $ref: "#/components/schemas/sorting_association"
    sortings:
      type: object
      title: Sortings
      description: Sortings
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Sortings in the collection.
          items:
            $ref: "#/components/schemas/sorting_expanded"
    sorting_create:
      type: object
      title: Create Sorting
      description: Create Sorting
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/sorting_name"
        description:
          $ref: "#/components/schemas/sorting_description"
        metadata:
          $ref: "#/components/schemas/sorting_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        conditions:
          type: array
          title: Conditions
          items:
            $ref: "#/components/schemas/sorting_condition_create"
        associations:
          type: array
          title: Associations
          items:
            $ref: "#/components/schemas/sorting_association_create"
    sorting_update:
      type: object
      title: Update Sorting
      description: Update Sorting
      properties:
        name:
          $ref: "#/components/schemas/sorting_name"
        description:
          $ref: "#/components/schemas/sorting_description"
        metadata:
          $ref: "#/components/schemas/sorting_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    sorting_condition_id:
      type: string
      format: uuid
      title: Condition Id
      description: Sorting Condition Id
    sorting_condition_type:
      type: string
      title: Condition Type
      description: Sorting Condition Type
      enum:
        - field
    sorting_condition_direction:
      type: string
      title: Condition Direction
      description: |
        Sorting Condition Directions:
          - Ascending
          - Descending
      enum:
        - asc
        - desc
    sorting_condition_sequence:
      type: integer
      format: int32
      title: Sequence
      description: Condition Sequence
      example: 1
    sorting_condition_description:
      type: string
      title: Description
      description: Condition Description
      example: Some text here
    sorting_condition_metadata:
      type: object
      title: Condition Metadata
      description: Condition Metadata. It depends on condition type.
      oneOf:
        - $ref: "#/components/schemas/sorting_condition_metadata_field"
    sorting_condition_metadata_field:
      type: object
      title: Field
      description: Field Condition Metadata.
      properties:
        field_name:
          type: string
          title: Field Name
          description: Field Name to sort
          example: created_at
    sorting_condition:
      type: object
      title: Condition
      description: Condition
      properties:
        id:
          $ref: "#/components/schemas/sorting_condition_id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        type:
          $ref: "#/components/schemas/sorting_condition_type"
        sequence:
          $ref: "#/components/schemas/sorting_condition_sequence"
        direction:
          $ref: "#/components/schemas/sorting_condition_direction"
        description:
          $ref: "#/components/schemas/sorting_condition_description"
        metadata:
          $ref: "#/components/schemas/sorting_condition_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_condition_expanded:
      type: object
      title: Condition Expanded
      description: Condition Expanded
      properties:
        id:
          $ref: "#/components/schemas/sorting_condition_id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        sorting_data:
          $ref: "#/components/schemas/sorting"
        type:
          $ref: "#/components/schemas/sorting_condition_type"
        sequence:
          $ref: "#/components/schemas/sorting_condition_sequence"
        direction:
          $ref: "#/components/schemas/sorting_condition_direction"
        description:
          $ref: "#/components/schemas/sorting_condition_description"
        metadata:
          $ref: "#/components/schemas/sorting_condition_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_conditions:
      type: object
      title: Sorting Conditions
      description: Sorting Conditions
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Conditions in the collection.
          items:
            $ref: "#/components/schemas/sorting_condition_expanded"
    sorting_condition_create:
      type: object
      title: Add Condition
      description: Add Condition
      required:
        - type
        - direction
      properties:
        type:
          $ref: "#/components/schemas/sorting_condition_type"
        direction:
          $ref: "#/components/schemas/sorting_condition_direction"
        sequence:
          $ref: "#/components/schemas/sorting_condition_sequence"
        description:
          $ref: "#/components/schemas/sorting_condition_description"
        metadata:
          $ref: "#/components/schemas/sorting_condition_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    sorting_condition_update:
      type: object
      title: Update Condition
      description: Update Condition
      properties:
        direction:
          $ref: "#/components/schemas/sorting_condition_direction"
        sequence:
          $ref: "#/components/schemas/sorting_condition_sequence"
        description:
          $ref: "#/components/schemas/sorting_condition_description"
        metadata:
          $ref: "#/components/schemas/sorting_condition_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    sorting_association_id:
      type: string
      format: uuid
      title: Association Id
      description: Sorting Association Id
    sorting_association_type:
      type: string
      title: Association Type
      description: |
        Sorting Association Types:
          - Job
          - Job Stage
          - Talent Pool
      enum:
        - job
        - stage
        - pool
    sorting_association_name:
      type: string
      title: Name
      description: Association Name
      example: Overall Assessment
    sorting_association_description:
      type: string
      title: Description
      description: Association Description
      example: Overall Assessment
    sorting_association_metadata:
      type: object
      title: Association Metadata
      description: Association Metadata. It depends on association type.
      oneOf:
        - $ref: "#/components/schemas/sorting_association_metadata_job"
        - $ref: "#/components/schemas/sorting_association_metadata_stage"
        - $ref: "#/components/schemas/sorting_association_metadata_pool"
    sorting_association_metadata_job:
      type: object
      title: Job
      description: Job Association Metadata.
      properties:
        job_id:
          $ref: "#/components/schemas/job_id"
    sorting_association_metadata_stage:
      type: object
      title: Job Stage
      description: Job Stage Association Metadata
      properties:
        job_id:
          $ref: "#/components/schemas/job_id"
        stage_id:
          $ref: "#/components/schemas/job_stage_id"
    sorting_association_metadata_pool:
      type: object
      title: Pool
      description: Pool Association Metadata
      properties:
        pool_id:
          $ref: "#/components/schemas/pool_id"
    sorting_association_status:
      type: string
      title: Association Status
      description: |
        Sorting Association Statuses:
          - Draft - The process is not started.
          - Calculating - The process is in progress.
          - Terminated - The process terminated by an user.
          - Completed - The process completed successfully.
          - Ended - The process ended with errors.
      enum:
        - draft
        - calculating
        - terminated
        - completed
        - ended
    sorting_association_aggregations:
      type: object
      title: Association Aggregations
      description: Association Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        association_id:
          $ref: "#/components/schemas/sorting_association_id"
        candidates:
          type: integer
          title: Candidates
          description: Number of Candidates
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_association:
      type: object
      title: Association
      description: Sorting Association
      properties:
        id:
          $ref: "#/components/schemas/sorting_association_id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        type:
          $ref: "#/components/schemas/sorting_association_type"
        name:
          $ref: "#/components/schemas/sorting_association_name"
        description:
          $ref: "#/components/schemas/sorting_association_description"
        status:
          $ref: "#/components/schemas/sorting_association_status"
        metadata:
          $ref: "#/components/schemas/sorting_association_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_association_expanded:
      type: object
      title: Association Expanded
      description: Sorting Association Expanded
      properties:
        id:
          $ref: "#/components/schemas/sorting_association_id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        sorting_data:
          $ref: "#/components/schemas/sorting"
        type:
          $ref: "#/components/schemas/sorting_association_type"
        name:
          $ref: "#/components/schemas/sorting_association_name"
        description:
          $ref: "#/components/schemas/sorting_association_description"
        status:
          $ref: "#/components/schemas/sorting_association_status"
        metadata:
          $ref: "#/components/schemas/sorting_association_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/sorting_association_aggregations"
        candidates:
          type: array
          title: Candidates
          items:
            $ref: "#/components/schemas/sorting_association_candidate"
    sorting_associations:
      type: object
      title: Associations
      description: Sorting Associations
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Associations in the collection.
          items:
            $ref: "#/components/schemas/sorting_association_expanded"
    sorting_association_create:
      type: object
      title: Add Association
      description: Add Association
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/sorting_association_type"
        name:
          $ref: "#/components/schemas/sorting_association_name"
        description:
          $ref: "#/components/schemas/sorting_association_description"
        metadata:
          $ref: "#/components/schemas/sorting_association_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    sorting_association_update:
      type: object
      title: Update Association
      description: Update Association
      properties:
        name:
          $ref: "#/components/schemas/sorting_association_name"
        description:
          $ref: "#/components/schemas/sorting_association_description"
        metadata:
          $ref: "#/components/schemas/sorting_association_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    sorting_association_candidate_id:
      type: string
      format: uuid
      title: Candidate Id
      description: Association Candidate Id
    sorting_association_candidate_rank:
      type: integer
      format: int32
      title: Rank Number
      description: Candidate Rank Number
      default: null
    sorting_association_candidate:
      type: object
      title: Candidate
      description: Candidate
      properties:
        id:
          $ref: "#/components/schemas/sorting_association_candidate_id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        association_id:
          $ref: "#/components/schemas/sorting_association_id"
        candidate_id:
          type: string
          oneOf:
            - $ref: "#/components/schemas/candidate_id"
            - $ref: "#/components/schemas/pool_candidate_id"
        rank:
          $ref: "#/components/schemas/sorting_association_candidate_rank"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_association_candidate_expanded:
      type: object
      title: Candidate Expanded
      description: Candidate Expanded
      properties:
        id:
          $ref: "#/components/schemas/sorting_association_candidate_id"
        sorting_id:
          $ref: "#/components/schemas/sorting_id"
        sorting_data:
          $ref: "#/components/schemas/sorting"
        association_id:
          $ref: "#/components/schemas/sorting_association_id"
        association_data:
          $ref: "#/components/schemas/sorting_association"
        candidate_id:
          type: string
          oneOf:
            - $ref: "#/components/schemas/candidate_id"
            - $ref: "#/components/schemas/pool_candidate_id"
        candidate_data:
          type: object
          oneOf:
            - $ref: "#/components/schemas/candidate"
            - $ref: "#/components/schemas/pool_candidate"
        rank:
          $ref: "#/components/schemas/sorting_association_candidate_rank"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    sorting_association_candidates:
      type: object
      title: Candidates
      description: Association Candidates
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Candidates in the collection.
          items:
            $ref: "#/components/schemas/sorting_association_candidate_expanded"
    sorting_association_candidate_create:
      type: object
      title: Add Candidates
      description: Add Candidates
      properties:
        candidates:
          type: array
          title: Candidates
          description: Candidates to add. It can be Job Candidate Id or Pool Candidate Id.
          items:
            oneOf:
              - $ref: "#/components/schemas/candidate_id"
              - $ref: "#/components/schemas/pool_candidate_id"
    sorting_association_candidate_delete:
      type: object
      title: Remove Candidates
      description: Remove Candidates
      properties:
        candidates:
          type: array
          title: Candidates
          description: Candidates to remove. It can be Job Candidate Id or Pool Candidate Id.
          items:
            oneOf:
              - $ref: "#/components/schemas/candidate_id"
              - $ref: "#/components/schemas/pool_candidate_id"
    # Talent Pool
    pool_id:
      type: string
      format: uuid
      title: Pool Id
      description: Pool Id
    pool_name:
      type: string
      title: Pool Name
      description: Pool Name
      example: Developers
    pool_description:
      type: string
      title: Pool Description
      description: Pool Description
      example: Developers
    pool_metadata:
      type: object
      title: Pool Metadata
      description: Pool Metadata. It depends on job type.
      properties:
        tags:
          type: array
          title: Tags
          description: Pool Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - developers
            - backend
            - frontend
    pool_aggregations:
      type: object
      title: Pool Aggregations
      description: Pool Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        pool_id:
          $ref: "#/components/schemas/pool_id"
        members:
          type: integer
          description: Number of Members
          default: 0
        candidates:
          type: integer
          title: Candidates
          description: Number of Candidates
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    pool:
      type: object
      title: Pool
      description: Pool
      properties:
        id:
          $ref: "#/components/schemas/pool_id"
        name:
          $ref: "#/components/schemas/pool_name"
        description:
          $ref: "#/components/schemas/pool_description"
        metadata:
          $ref: "#/components/schemas/pool_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    pool_expanded:
      type: object
      title: Job Expanded
      description: Job Expanded
      properties:
        id:
          $ref: "#/components/schemas/pool_id"
        name:
          $ref: "#/components/schemas/pool_name"
        description:
          $ref: "#/components/schemas/pool_description"
        metadata:
          $ref: "#/components/schemas/pool_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/pool_aggregations"
        members:
          type: array
          title: Members
          items:
            $ref: "#/components/schemas/pool_member"
        candidates:
          type: array
          title: Candidates
          items:
            $ref: "#/components/schemas/pool_candidate"
    pools:
      type: object
      title: Pools
      description: Pools
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Pools in the collection.
          items:
            $ref: "#/components/schemas/pool_expanded"
    pool_create:
      type: object
      title: Create Pool
      description: Create Pool
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/pool_name"
        description:
          $ref: "#/components/schemas/pool_description"
        metadata:
          $ref: "#/components/schemas/pool_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    pool_update:
      type: object
      title: Update Pool
      description: Update Pool
      properties:
        name:
          $ref: "#/components/schemas/pool_name"
        description:
          $ref: "#/components/schemas/pool_description"
        metadata:
          $ref: "#/components/schemas/pool_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    pool_duplicate:
      type: object
      title: Duplicate Pool
      description: Duplicate Pool
      properties:
        name:
          $ref: "#/components/schemas/pool_name"
        description:
          $ref: "#/components/schemas/pool_description"
    pool_member_id:
      type: string
      format: uuid
      title: Member Id
      description: Member Id
    pool_member:
      type: object
      title: Member
      description: Pool Member
      properties:
        id:
          $ref: "#/components/schemas/pool_member_id"
        pool_id:
          $ref: "#/components/schemas/pool_id"
        user_role:
          $ref: "#/components/schemas/user_role"
        user_id:
          $ref: "#/components/schemas/user_id"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    pool_member_expanded:
      type: object
      title: Member Expanded
      description: Pool Member Expanded
      properties:
        id:
          $ref: "#/components/schemas/pool_member_id"
        pool_id:
          $ref: "#/components/schemas/pool_id"
        pool_data:
          $ref: "#/components/schemas/pool"
        user_role:
          $ref: "#/components/schemas/user_role"
        user_id:
          $ref: "#/components/schemas/user_id"
        user_data:
          $ref: "#/components/schemas/user"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    pool_members:
      type: object
      title: Members
      description: Pool Members
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Members in the collection.
          items:
            $ref: "#/components/schemas/pool_member_expanded"
    pool_member_create:
      type: object
      title: Add Members
      description: Add Members
      properties:
        user_role:
          $ref: "#/components/schemas/user_role"
        users:
          type: array
          title: Users
          description: Users
          items:
            $ref: "#/components/schemas/user_id"
    pool_candidate_id:
      type: string
      format: uuid
      title: Pool Candidate Id
      description: Pool Candidate Id
    pool_candidate_name:
      type: string
      title: Name
      description: Candidate Name
      example: John Doe
    pool_candidate_description:
      type: string
      title: Description
      description: Candidate Description
      example: Some text here
    pool_candidate_originating_candidate_id:
      type: string
      title: Originating Candidate Id
      description: The ID this candidate originated from (has a value in case of candidate copy / move)
      example: originating-candidate-id-123-abc
    pool_candidate_metadata:
      type: object
      title: Candidate Metadata
      description: Candidate Metadata
      properties:
        tags:
          type: array
          title: Tags
          description: Candidate Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - adventurer
            - fisher
    pool_candidate:
      type: object
      title: Pool Candidate
      description: Pool Candidate
      properties:
        id:
          $ref: "#/components/schemas/pool_candidate_id"
        pool_id:
          $ref: "#/components/schemas/pool_id"
        user_id:
          $ref: "#/components/schemas/user_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        name:
          $ref: "#/components/schemas/pool_candidate_name"
        description:
          $ref: "#/components/schemas/pool_candidate_description"
        originating_candidate_id:
          $ref: "#/components/schemas/pool_candidate_originating_candidate_id"
        metadata:
          $ref: "#/components/schemas/pool_candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    pool_candidate_expanded:
      type: object
      title: Pool Candidate Expanded
      description: Pool Candidate Expanded
      properties:
        id:
          $ref: "#/components/schemas/pool_candidate_id"
        pool_id:
          $ref: "#/components/schemas/pool_id"
        pool_data:
          $ref: "#/components/schemas/pool"
        user_id:
          $ref: "#/components/schemas/user_id"
        user_data:
          $ref: "#/components/schemas/user"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        name:
          $ref: "#/components/schemas/pool_candidate_name"
        description:
          $ref: "#/components/schemas/pool_candidate_description"
        originating_candidate_id:
          $ref: "#/components/schemas/pool_candidate_originating_candidate_id"
        originating_candidate_data:
          $ref: "#/components/schemas/pool_candidate"
        metadata:
          $ref: "#/components/schemas/pool_candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    pool_candidates:
      type: object
      title: Candidates
      description: Candidates
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: The candidates in the collection.
          items:
            $ref: "#/components/schemas/pool_candidate_expanded"
    pool_candidate_create_type:
      type: string
      title: Creation Type
      description: Creation Type
      enum:
        - manual
        - job_candidate
    pool_candidate_create:
      type: object
      title: Add Candidate
      description: Add Candidate
      oneOf:
        - $ref: "#/components/schemas/pool_candidate_create_manual"
        - $ref: "#/components/schemas/pool_candidate_create_job_candidate"
      discriminator:
        propertyName: type
        mapping:
          manual: "#/components/schemas/pool_candidate_create_manual"
          job_candidate: "#/components/schemas/pool_candidate_create_job_candidate"
      properties:
        type:
          $ref: "#/components/schemas/pool_candidate_create_type"
    pool_candidate_create_manual:
      type: object
      title: Manual
      description: Create Candidate manually
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/pool_candidate_create_type"
        name:
          $ref: "#/components/schemas/pool_candidate_name"
        description:
          $ref: "#/components/schemas/pool_candidate_description"
        user_id:
          $ref: "#/components/schemas/user_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        originating_candidate_id:
          $ref: "#/components/schemas/pool_candidate_originating_candidate_id"
        metadata:
          $ref: "#/components/schemas/pool_candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    pool_candidate_create_job_candidate:
      type: object
      title: Job Candidate
      description: Create from Job Candidate
      required:
        - type
        - candidate_id
      properties:
        type:
          $ref: "#/components/schemas/pool_candidate_create_type"
        candidate_id:
          $ref: "#/components/schemas/candidate_id"
    pool_candidate_update:
      type: object
      title: Update Candidate
      description: Update Candidate
      properties:
        user_id:
          $ref: "#/components/schemas/user_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        name:
          $ref: "#/components/schemas/pool_candidate_name"
        description:
          $ref: "#/components/schemas/pool_candidate_description"
        originating_candidate_id:
          $ref: "#/components/schemas/pool_candidate_originating_candidate_id"
        metadata:
          $ref: "#/components/schemas/pool_candidate_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    pool_candidate_move:
      type: object
      title: Move Candidate
      description: Move Candidate to Another Stage.
      required:
        - pool_id
      properties:
        pool_id:
          $ref: "#/components/schemas/pool_id"
    pool_candidate_duplicate:
      type: object
      title: Duplicate Candidate
      description: Duplicate Candidate
      required:
        - pool_id
      properties:
        pool_id:
          $ref: "#/components/schemas/pool_id"
    pool_candidate_move_bulk:
      type: object
      title: Move Candidates
      description: Move Candidates to Another Stage.
      required:
        - pool_id
      properties:
        pool_id:
          $ref: "#/components/schemas/pool_id"
        candidates:
          type: array
          title: Candidates
          description: Candidates to move
          items:
            $ref: "#/components/schemas/pool_candidate_id"
    pool_candidate_duplicate_bulk:
      type: object
      title: Duplicate Candidates
      description: Duplicate Candidates
      required:
        - pool_id
      properties:
        pool_id:
          $ref: "#/components/schemas/pool_id"
        candidates:
          type: array
          title: Candidates
          description: Candidates to duplicate
          items:
            $ref: "#/components/schemas/pool_candidate_id"
    # Lookup
    lookup_id:
      type: string
      format: uuid
      description: Lookup Id
    lookup_code:
      type: string
      description: Lookup Code
      example: countries
    lookup_name:
      type: string
      description: Lookup Name
      example: List of Countries
    lookup_description:
      type: string
      description: Lookup Description
      example: List of Countries
    lookup_enabled:
      type: string
      description: is lookup enabled?
      default: true
    lookup_metadata:
      type: object
      description: Lookup Metadata
      properties:
        label:
          type: object
          description: Label Config
          properties:
            label_id:
              $ref: "#/components/schemas/label_id"
        cascading:
          type: object
          description: Cascading Lookup Config
          properties:
            enabled:
              type: boolean
              description: Is Cascading Lookup?
              default: false
              example: true
            lookup:
              type: string
              description: Parent Lookup. It's used when enabled.
              example: continents
        tags:
          type: array
          description: Custom tags
          items:
            type: string
          example: ["+tenant1", "+tenant2"]
        fields:
          type: array
          description: Metadata Fields
          items:
            type: object
            description: Fields
            properties:
              name:
                type: string
                description: Field Name. Field name is unique in the lookup. But, it may not unique in value's metadata. It depends on required flag.
                example: currency
              type:
                type: string
                description: Field Type
                example: lov
                enum:
                  - string
                  - number
                  - date
                  - datetime
                  - boolean
                  - lov
              required:
                type: boolean
                description: Is field required?. Lookup value must not be null when required.
                default: false
              unique:
                type: boolean
                description: Is unique field?. Lookup value must be unique when unique.
                default: true
              default_value:
                type: string
                description: Default value. System will set the default value to lookup value's metadata when lookup value created and value's metadata is not provided. after, you can change it with other value.
                example: usd
              lov_lookup:
                type: string
                description: Lookup code. Required only when type is lov.
                example: currencies
              lov_lookup_check:
                type: boolean
                description: Lookup value check. System will check correct value against specific lookup's values when true.
                default: true
              comments:
                type: string
                description: Comments
                example: Currency Code for the Country
          example:
            - name: iso_numeric
              type: number
              required: false
              unique: true
              default_value: 0
              lov_lookup: null
              lov_lookup_check: null
              comments: ISO Numeric Code for the country
            - name: currency
              type: lov
              required: false
              unique: true
              default_value: usd
              lov_lookup: currencies
              lov_lookup_check: true
              comments: Currency code for the country
    lookup_app_metadata:
      type: array
      description: application metadata structure for customize your needs.
      items:
        $ref: "#/components/schemas/key_value_pair"
      example:
        - key: application_id
          value: hr
    lookup:
      type: object
      description: Lookup's data and child items
      properties:
        id:
          $ref: "#/components/schemas/lookup_id"
        code:
          $ref: "#/components/schemas/lookup_code"
        name:
          $ref: "#/components/schemas/lookup_name"
        description:
          $ref: "#/components/schemas/lookup_description"
        metadata:
          $ref: "#/components/schemas/lookup_metadata"
        enabled:
          $ref: "#/components/schemas/lookup_enabled"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/lookup_aggregation"
        values:
          type: array
          items:
            $ref: "#/components/schemas/lookup_value"
    lookup_aggregation:
      type: object
      description: Lookup Aggregation
      properties:
        id:
          $ref: "#/components/schemas/id"
        lookup_id:
          $ref: "#/components/schemas/lookup_id"
        values:
          type: integer
          description: Number of Values
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    lookups:
      type: object
      description: Lookups
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: The lookups in the collection.
          items:
            $ref: "#/components/schemas/lookup"
    lookup_create:
      type: object
      description: Create Lookup
      required:
        - code
        - name
      properties:
        code:
          $ref: "#/components/schemas/lookup_code"
        name:
          $ref: "#/components/schemas/lookup_name"
        description:
          $ref: "#/components/schemas/lookup_description"
        metadata:
          $ref: "#/components/schemas/lookup_metadata"
    lookup_update:
      type: object
      description: Update Lookup
      properties:
        name:
          $ref: "#/components/schemas/lookup_name"
        description:
          $ref: "#/components/schemas/lookup_description"
        metadata:
          $ref: "#/components/schemas/lookup_metadata"
    lookup_change:
      type: object
      description: Change Lookup Code
      properties:
        new_code:
          $ref: "#/components/schemas/lookup_code"
      example:
        new_code: territories
    # Lookup Value
    lookup_value_id:
      type: string
      format: uuid
      description: Lookup Value Id
    lookup_value_code:
      type: string
      description: Lookup Value Code
      example: us
    lookup_value_name:
      type: string
      description: Lookup Value Name
      example: United States
    lookup_value_description:
      type: string
      description: Lookup Value Description
      example: United States of America
    lookup_value_sequence:
      type: string
      description: Lookup Value Sequence
      example: 1
    lookup_value_metadata:
      type: object
      description: Lookup Value Metadata
      properties:
        label:
          type: object
          description: Label Config
          properties:
            label_id:
              $ref: "#/components/schemas/label_id"
        cascading:
          type: object
          description: Cascading Config
          properties:
            lookup_value:
              $ref: "#/components/schemas/lookup_value_code"
          example:
            lookup_value: north_america
        tags:
          type: array
          description: Custom tags
          items:
            type: string
          example: ["+tenant1", "+tenant2"]
        fields:
          type: array
          description: Metadata Fields
          items:
            type: object
            description: Fields
            properties:
              name:
                type: string
                description: Field Name. Depends on lookup metadata.fields
              value:
                type: string
                description: Field value.
          example:
            - name: iso_numeric
              value: 848
            - name: currency
              value: usd
    lookup_value_app_metadata:
      type: array
      description: application metadata structure for customize your needs.
      items:
        $ref: "#/components/schemas/key_value_pair"
      example:
        - key: region
          value: america
    lookup_value_enabled:
      type: boolean
      description: Is lookup value enabled?
      default: true
    lookup_value:
      type: object
      description: Lookup Value
      properties:
        id:
          $ref: "#/components/schemas/lookup_value_id"
        lookup_id:
          $ref: "#/components/schemas/lookup_id"
        code:
          $ref: "#/components/schemas/lookup_value_code"
        name:
          $ref: "#/components/schemas/lookup_value_name"
        description:
          $ref: "#/components/schemas/lookup_value_description"
        metadata:
          $ref: "#/components/schemas/lookup_value_metadata"
        sequence:
          $ref: "#/components/schemas/lookup_value_sequence"
        enabled:
          $ref: "#/components/schemas/lookup_value_enabled"
        created_date:
          $ref: "#/components/schemas/created_at"
        updated_date:
          $ref: "#/components/schemas/updated_at"
    lookup_values:
      type: object
      description: Lookup Values
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: The lookup values in the collection.
          items:
            $ref: "#/components/schemas/lookup_value"
    lookup_value_create:
      type: object
      description: Create Lookup Value
      required:
        - code
        - name
      properties:
        code:
          $ref: "#/components/schemas/lookup_value_code"
        name:
          $ref: "#/components/schemas/lookup_value_name"
        description:
          $ref: "#/components/schemas/lookup_value_description"
        metadata:
          $ref: "#/components/schemas/lookup_value_metadata"
        sequence:
          $ref: "#/components/schemas/lookup_value_sequence"
    lookup_value_update:
      type: object
      description: Update Lookup Value
      properties:
        name:
          $ref: "#/components/schemas/lookup_value_name"
        description:
          $ref: "#/components/schemas/lookup_value_description"
        metadata:
          $ref: "#/components/schemas/lookup_value_metadata"
        sequence:
          $ref: "#/components/schemas/lookup_value_sequence"
        enabled:
          $ref: "#/components/schemas/lookup_value_enabled"
    lookup_value_change:
      type: object
      description: Change Lookup Value
      properties:
        new_code:
          $ref: "#/components/schemas/lookup_value_code"
      example:
        new_code: usa
    lookup_value_translation:
      type: object
      description: Lookup Value Translation
      properties:
        id:
          $ref: "#/components/schemas/id"
        label_id:
          $ref: "#/components/schemas/label_id"
        language:
          $ref: "#/components/schemas/language"
        name:
          $ref: "#/components/schemas/label_name"
        description:
          $ref: "#/components/schemas/label_description"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
      example:
        id: "497f6eca-6276-4993-bfeb-53cbbbba6f08"
        label_id: "03e7493c-608b-4c34-83b8-041808788ef3"
        language: "en_US"
        name: "United States"
        description: "United States of America"
        created_at: "2019-08-24T14:15:22Z"
        updated_at: "2019-08-24T14:15:22Z"
    lookup_value_translations:
      type: object
      description: Lookup Value Translations
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: The lookup value's translations in the collection.
          items:
            $ref: "#/components/schemas/lookup_value_translation"
    # Label
    label_id:
      type: string
      format: uuid
      description: Label Id
    label_name:
      type: string
      description: Label Name
      example: List of Countries
    label_description:
      type: string
      description: Label Description
      example: List of Countries
    label_translation:
      type: object
      description: Translation
      properties:
        id:
          $ref: "#/components/schemas/id"
        label_id:
          $ref: "#/components/schemas/label_id"
        language:
          $ref: "#/components/schemas/language"
        name:
          $ref: "#/components/schemas/label_name"
        description:
          $ref: "#/components/schemas/label_description"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    label_translations:
      type: object
      description: Translations
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: The translations in the collection.
          items:
            $ref: "#/components/schemas/label_translation"
    label_translation_create:
      type: object
      description: Create Translation
      properties:
        language:
          $ref: "#/components/schemas/language"
        name:
          $ref: "#/components/schemas/label_name"
        description:
          $ref: "#/components/schemas/label_description"
    label_translation_update:
      type: object
      description: Update Translation
      properties:
        name:
          $ref: "#/components/schemas/label_name"
        description:
          $ref: "#/components/schemas/label_description"
    # Rating Scale
    rating_scale_id:
      type: string
      title: Scale Id
      description: Scale Id
      example: language_skill
    rating_scale_metadata:
      type: object
      title: Scale Metadata
      description: Scale Metadata.
      properties:
        tags:
          type: array
          title: Tags
          description: Rating Scale Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - adventurer
            - fisher
    rating_scale_aggregations:
      type: object
      title: Scale Aggregations
      description: Scale Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        levels:
          type: integer
          description: Number of Levels
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    rating_scale:
      type: object
      title: Rating Scale
      description: Rating Scale
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_id"
        name:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        description:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        metadata:
          $ref: "#/components/schemas/rating_scale_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        created_at:
          $ref: "#/components/schemas/created_at"
    rating_scale_expanded:
      type: object
      title: Rating Scale Expanded
      description: Rating Scale Expanded
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_id"
        name:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        description:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        metadata:
          $ref: "#/components/schemas/rating_scale_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        created_at:
          $ref: "#/components/schemas/created_at"
        aggregations:
          $ref: "#/components/schemas/rating_scale_aggregations"
        levels:
          type: array
          title: Levels
          description: Levels
          items:
            $ref: "#/components/schemas/rating_scale_level"
    rating_scales:
      type: object
      title: Scales
      description: Scales
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Scales in the collection.
          items:
            $ref: "#/components/schemas/rating_scale_expanded"
    rating_scale_create:
      type: object
      title: Create Scale
      description: Create Scale
      required:
        - name
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_id"
        name:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        description:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        metadata:
          $ref: "#/components/schemas/rating_scale_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        levels:
          type: array
          title: Levels
          description: Levels to create
          items:
            $ref: "#/components/schemas/rating_scale_level_create"
    rating_scale_update:
      type: object
      title: Update Scale
      description: Update Scale
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_id"
        name:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        description:
          type: string
          title: Name
          description: Scale Description
          example: Language Skill
        metadata:
          $ref: "#/components/schemas/rating_scale_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    rating_scale_level_id:
      type: string
      title: Level Id
      description: Level Id
      example: proficiency
    rating_scale_level:
      type: object
      title: Level
      description: Rating Scale Level
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_level_id"
        scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        name:
          type: string
          title: Name
          description: Level Description
          example: Proficiency
        description:
          type: string
          title: Name
          description: Level Description
          example: Proficiency Level
        points:
          type: integer
          title: Points
          description: Level Points
          example: 1
        sequence:
          type: integer
          title: Sequence
          description: Level Sequence
          example: 1
        updated_at:
          $ref: "#/components/schemas/updated_at"
        created_at:
          $ref: "#/components/schemas/created_at"
    rating_scale_level_expanded:
      type: object
      title: Level Expanded
      description: Rating Scale Level Expanded
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_level_id"
        scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        scale_data:
          $ref: "#/components/schemas/rating_scale"
        name:
          type: string
          title: Name
          description: Level Description
          example: Proficiency
        description:
          type: string
          title: Name
          description: Level Description
          example: Proficiency Level
        points:
          type: integer
          title: Points
          description: Level Points
          example: 1
        sequence:
          type: integer
          title: Sequence
          description: Level Sequence
          example: 1
        updated_at:
          $ref: "#/components/schemas/updated_at"
        created_at:
          $ref: "#/components/schemas/created_at"
    rating_scale_levels:
      type: object
      title: Levels
      description: Levels
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Levels in the collection.
          items:
            $ref: "#/components/schemas/rating_scale_level_expanded"
    rating_scale_level_create:
      type: object
      title: Create Level
      description: Create Level
      required:
        - name
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_level_id"
        name:
          type: string
          title: Name
          description: Level Description
          example: Proficiency
        description:
          type: string
          title: Name
          description: Level Description
          example: Proficiency Level
        points:
          type: integer
          title: Points
          description: Level Points
          example: 1
        sequence:
          type: integer
          title: Sequence
          description: Level Sequence
          example: 1
    rating_scale_level_update:
      type: object
      title: Update Level
      description: Update Level
      properties:
        id:
          $ref: "#/components/schemas/rating_scale_level_id"
        name:
          type: string
          title: Name
          description: Level Description
          example: Proficiency
        description:
          type: string
          title: Name
          description: Level Description
          example: Proficiency Level
        points:
          type: integer
          title: Points
          description: Level Points
          example: 1
        sequence:
          type: integer
          title: Sequence
          description: Level Sequence
          example: 1
    # Content Types
    content_verified:
      type: boolean
      title: Verified
      description: Verified
      default: false
    content_verified_at:
      type: string
      format: date-time
      title: Verified At
      description: Verified Date and Time
      default: null
    builtin_content_type:
      type: string
      title: Built-In Content Type
      description: |
        Built-In Content Types:
          - Name
          - Image
          - Email
          - Phone
          - Web
          - Social
          - Address
          - Education
          - Language
          - Skill
          - Experience
          - Attachment
          - Citizenship
          - Award
          - Test
      enum:
        - name
        - image
        - email
        - phone
        - web
        - social
        - address
        - education
        - language
        - skill
        - experience
        - attachment
        - citizenship
        - award
        - test
      example: name
    content_primary:
      type: boolean
      title: Primary
      description: Primary
      default: false
    content_phone_country_code:
      type: string
      title: Phone Country Code
      description: Phone Country Code
      example: "+976"
    content_country_code:
      type: string
      title: Country Code
      description: Country Code
      enum:
        - mn
        - us
        - ch
      example: "mn"
    content_multiple_occurrence:
      type: boolean
      title: Allow Multiple Occurrence
      description: Allow Multiple Occurrence
      default: true
    content_options_name:
      type: object
      title: Name Options
      description: Name Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Name Types
          description: Enabled Name Types
          items:
            $ref: "#/components/schemas/profile_name_type"
          example:
            - full_name
            - first_name
            - last_name
    content_options_image:
      type: object
      title: Image Options
      description: Image Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Image Types
          description: Enabled Image Types
          items:
            $ref: "#/components/schemas/profile_image_type"
          example:
            - profile
            - cover
    content_options_email:
      type: object
      title: Email Options
      description: Email Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Email Types
          description: Enabled Email Types
          items:
            $ref: "#/components/schemas/profile_email_type"
          example:
            - work
            - personal
    content_options_phone:
      type: object
      title: Phone Options
      description: Phone Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Phone Types
          description: Enabled Phone Types
          items:
            $ref: "#/components/schemas/profile_phone_type"
          example:
            - work
            - home
    content_options_web:
      type: object
      title: Web Options
      description: Web Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Web Types
          description: Enabled Web Types
          items:
            $ref: "#/components/schemas/profile_web_type"
          example:
            - work
            - home
    content_options_social:
      type: object
      title: Social Options
      description: Social Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Social Types
          description: Enabled Social Types
          items:
            $ref: "#/components/schemas/profile_social_type"
          example:
            - facebook
            - twitter
            - instagram
    content_options_address:
      type: object
      title: Address Options
      description: Address Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        types:
          type: array
          title: Enabled Address Types
          description: Enabled Address Types
          items:
            $ref: "#/components/schemas/profile_address_type"
          example:
            - work
            - hone
    content_options_education:
      type: object
      title: Education Options
      description: Education Options
    content_options_language:
      type: object
      title: Language Options
      description: Language Options
    content_options_experience:
      type: object
      title: Experience Options
      description: Experience Options
    content_options_skill:
      type: object
      title: Skill Options
      description: Skill Options
    content_options_attachment:
      type: object
      title: Attachment Options
      description: Attachment Options
    content_options_citizenship:
      type: object
      title: Citizenship Options
      description: Citizenship Options
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
    content_options_award:
      type: object
      title: Award Options
      description: Award Options
    content_options_test:
      type: object
      title: Test Options
      description: Test Options
    # Profile Types
    profile_type_id:
      type: string
      title: Type Id
      description: Profile Type Id
      example: candidate
    profile_type_name:
      type: string
      title: Type Name
      description: Profile Type Name
      example: Candidate Profile
    profile_type_description:
      type: string
      title: Type Description
      description: Profile Type Description
      example: Candidate Profile for Hischool Recruiting
    profile_type_metadata:
      type: object
      title: Profile Type Metadata
      description: Profile Type Metadata.
      properties:
        builtin_content_types:
          type: array
          title: Enabled Built-In Content Types
          description: Enabled Built-In Content Types
          items:
            $ref: "#/components/schemas/builtin_content_type"
          example:
            - name
            - image
            - email
            - phone
            - web
            - social
            - address
            - education
            - language
            - skill
            - experience
            - attachment
            - citizenship
            - award
            - test
        options:
          type: object
          title: Options
          description: Options
          properties:
            name:
              $ref: "#/components/schemas/content_options_name"
            image:
              $ref: "#/components/schemas/content_options_image"
            email:
              $ref: "#/components/schemas/content_options_email"
            phone:
              $ref: "#/components/schemas/content_options_phone"
            web:
              $ref: "#/components/schemas/content_options_web"
            social:
              $ref: "#/components/schemas/content_options_social"
            address:
              $ref: "#/components/schemas/content_options_address"
            education:
              $ref: "#/components/schemas/content_options_education"
            language:
              $ref: "#/components/schemas/content_options_language"
            skill:
              $ref: "#/components/schemas/content_options_skill"
            experience:
              $ref: "#/components/schemas/content_options_experience"
            attachment:
              $ref: "#/components/schemas/content_options_attachment"
        tags:
          type: array
          title: Tags
          description: Profile Type Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - aircampi
            - recruiting
            - candidate
    profile_type_aggregations:
      type: object
      title: Profile Type Aggregations
      description: Profile Type Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        attributes:
          type: integer
          description: Number of Attributes
          default: 0
        content_types:
          type: integer
          description: Number of Content Types
          default: 0
        profiles:
          type: integer
          description: Number of Profiles
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_type:
      type: object
      title: Profile Type
      description: Profile Type
      properties:
        id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          $ref: "#/components/schemas/profile_type_name"
        description:
          $ref: "#/components/schemas/profile_type_description"
        metadata:
          $ref: "#/components/schemas/profile_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_type_expanded:
      type: object
      title: Profile Type
      description: Profile Type
      properties:
        id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          $ref: "#/components/schemas/profile_type_name"
        description:
          $ref: "#/components/schemas/profile_type_description"
        metadata:
          $ref: "#/components/schemas/profile_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/profile_type_aggregations"
        attributes:
          type: array
          title: Attributes
          items:
            $ref: "#/components/schemas/profile_type_attribute"
        content_types:
          type: array
          title: Content Types
          items:
            $ref: "#/components/schemas/content_type"
        profiles:
          type: array
          title: Profiles
          items:
            $ref: "#/components/schemas/profile"
    profile_types:
      type: object
      title: Profile Types
      description: Profile Types
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Types in the collection.
          items:
            $ref: "#/components/schemas/profile_type_expanded"
    profile_type_create:
      type: object
      title: Create Profile Type
      description: Create Profile Type
      required:
        - id
        - name
      properties:
        id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          $ref: "#/components/schemas/profile_type_name"
        description:
          $ref: "#/components/schemas/profile_type_description"
        metadata:
          $ref: "#/components/schemas/profile_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    profile_type_update:
      type: object
      title: Update Profile
      description: Update Profile
      properties:
        id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          $ref: "#/components/schemas/profile_type_name"
        description:
          $ref: "#/components/schemas/profile_type_description"
        metadata:
          $ref: "#/components/schemas/profile_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    profile_type_attribute_id:
      type: string
      title: Attribute Id
      description: Attribute Id
      example: candidate_id
    profile_type_attribute_name:
      type: string
      title: Attribute Name
      description: Attribute Name
      example: Candidate ID
    profile_type_attribute_description:
      type: string
      title: Attribute Description
      description: Attribute Description
      example: Candidate ID
    profile_type_attribute_required:
      type: boolean
      title: Required
      description: Attribute Required
      default: false
    profile_type_attribute:
      type: object
      title: Attribute
      description: Attribute
      properties:
        id:
          $ref: "#/components/schemas/profile_type_attribute_id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        required:
          $ref: "#/components/schemas/profile_type_attribute_required"
        name:
          $ref: "#/components/schemas/profile_type_attribute_name"
        description:
          $ref: "#/components/schemas/profile_type_attribute_description"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_type_attribute_expanded:
      type: object
      title: Attribute Expanded
      description: Attribute Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_type_attribute_id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        required:
          $ref: "#/components/schemas/profile_type_attribute_required"
        name:
          $ref: "#/components/schemas/profile_type_attribute_name"
        description:
          $ref: "#/components/schemas/profile_type_attribute_description"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_type_attributes:
      type: object
      title: Attributes
      description: Attributes
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Attributes in the collection.
          items:
            $ref: "#/components/schemas/profile_type_attribute_expanded"
    profile_type_attribute_create:
      type: object
      title: Create Attribute
      description: Create Attribute
      required:
        - id
        - required
        - name
      properties:
        id:
          $ref: "#/components/schemas/profile_type_attribute_id"
        required:
          $ref: "#/components/schemas/profile_type_attribute_required"
        name:
          $ref: "#/components/schemas/profile_type_attribute_name"
        description:
          $ref: "#/components/schemas/profile_type_attribute_description"
    profile_type_attribute_update:
      type: object
      title: Update Attribute
      description: Update Attribute
      properties:
        id:
          $ref: "#/components/schemas/profile_type_attribute_id"
        required:
          $ref: "#/components/schemas/profile_type_attribute_required"
        name:
          $ref: "#/components/schemas/profile_type_attribute_name"
        description:
          $ref: "#/components/schemas/profile_type_attribute_description"
    content_type_id:
      type: string
      title: Content Type Id
      description: Content Type Id
      example: location
    content_type_name:
      type: string
      title: Content Type Name
      description: Content Type Name
      example: Location
    content_type_description:
      type: string
      title: Content Type Description
      description: Content Type Description
      example: Location
    content_type_metadata:
      type: object
      title: Content Type Metadata
      description: Content Type Metadata.
      properties:
        multiple_occurrence:
          $ref: "#/components/schemas/content_multiple_occurrence"
        tags:
          type: array
          title: Tags
          description: Content Type Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - aircampi
            - recruiting
            - candidate
    content_type_aggregations:
      type: object
      title: Content Type Aggregations
      description: Content Type Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        content_type_id:
          $ref: "#/components/schemas/content_type_id"
        attributes:
          type: integer
          description: Number of Attributes
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    content_type:
      type: object
      title: Content Type
      description: Content Type
      properties:
        id:
          $ref: "#/components/schemas/content_type_id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          $ref: "#/components/schemas/content_type_name"
        description:
          $ref: "#/components/schemas/content_type_description"
        metadata:
          $ref: "#/components/schemas/content_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    content_type_expanded:
      type: object
      title: Content Type Expanded
      description: Content Type Expanded
      properties:
        id:
          $ref: "#/components/schemas/content_type_id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        type_data:
          $ref: "#/components/schemas/profile_type"
        name:
          $ref: "#/components/schemas/content_type_name"
        description:
          $ref: "#/components/schemas/content_type_description"
        metadata:
          $ref: "#/components/schemas/content_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/content_type_aggregations"
        attributes:
          type: array
          title: Attributes
          description: Attributes
          items:
            $ref: "#/components/schemas/content_type_attribute"
    content_types:
      type: object
      title: Content Types
      description: Content Types
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Content Types in the collection.
          items:
            $ref: "#/components/schemas/content_type_expanded"
    content_type_create:
      type: object
      title: Create Content Type
      description: Create Content Type
      required:
        - name
      properties:
        id:
          $ref: "#/components/schemas/content_type_id"
        name:
          $ref: "#/components/schemas/content_type_name"
        description:
          $ref: "#/components/schemas/content_type_description"
        metadata:
          $ref: "#/components/schemas/content_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    content_type_update:
      type: object
      title: Update Content Type
      description: Update Content Type
      properties:
        id:
          $ref: "#/components/schemas/content_type_id"
        name:
          $ref: "#/components/schemas/content_type_name"
        description:
          $ref: "#/components/schemas/content_type_description"
        metadata:
          $ref: "#/components/schemas/content_type_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    content_type_attribute_id:
      type: string
      title: Attribute Id
      description: Attribute Id
      example: location_id
    content_type_attribute_type:
      type: string
      title: Attribute Type
      description: |
        Attribute Types:
          - String
          - Number
          - Date
          - List of Values (LOV)
          - profile-rating-scales
      enum:
        - string
        - number
        - date
        - lov
        - rating
      example: string
    content_type_attribute_metadata:
      type: object
      title: Attribute Metadata
      description: Attribute Metadata. It depends on attribute type.
      oneOf:
        - $ref: "#/components/schemas/content_type_attribute_metadata_string"
        - $ref: "#/components/schemas/content_type_attribute_metadata_number"
        - $ref: "#/components/schemas/content_type_attribute_metadata_date"
        - $ref: "#/components/schemas/content_type_attribute_metadata_lov"
        - $ref: "#/components/schemas/content_type_attribute_metadata_rating"
    content_type_attribute_metadata_string:
      type: object
      title: String
      description: String Attribute Metadata
    content_type_attribute_metadata_number:
      type: object
      title: Number
      description: Number Attribute Metadata
    content_type_attribute_metadata_date:
      type: object
      title: Date
      description: Date Attribute Metadata
    content_type_attribute_metadata_lov:
      type: object
      title: List of Values (LOV)
      description: LOV Attribute Metadata
      properties:
        lookup_id:
          type: string
          title: Lookup Id
          description: Lookup Id on LOV APIs
    content_type_attribute_metadata_rating:
      type: object
      title: Rating
      description: Rating Attribute Metadata
      properties:
        rating_scale_id:
          $ref: "#/components/schemas/rating_scale_id"
    content_type_attribute_name:
      type: string
      title: Attribute Name
      description: Attribute Name
      example: Location ID
    content_type_attribute_description:
      type: string
      title: Attribute Description
      description: Attribute Description
      example: Location ID
    content_type_attribute_required:
      type: boolean
      title: Required
      description: Attribute Required
      default: false
    content_type_attribute:
      type: object
      title: Attribute
      description: Attribute
      properties:
        content_type_id:
          $ref: "#/components/schemas/content_type_id"
        id:
          $ref: "#/components/schemas/content_type_attribute_id"
        type:
          $ref: "#/components/schemas/content_type_attribute_type"
        required:
          $ref: "#/components/schemas/content_type_attribute_required"
        name:
          $ref: "#/components/schemas/content_type_attribute_name"
        description:
          $ref: "#/components/schemas/content_type_attribute_description"
        metadata:
          $ref: "#/components/schemas/content_type_attribute_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    content_type_attribute_expanded:
      type: object
      title: Attribute Expanded
      description: Attribute Expanded
      properties:
        content_type_id:
          $ref: "#/components/schemas/content_type_id"
        content_type_data:
          $ref: "#/components/schemas/content_type"
        id:
          $ref: "#/components/schemas/content_type_attribute_id"
        type:
          $ref: "#/components/schemas/content_type_attribute_type"
        required:
          $ref: "#/components/schemas/content_type_attribute_required"
        name:
          $ref: "#/components/schemas/content_type_attribute_name"
        description:
          $ref: "#/components/schemas/content_type_attribute_description"
        metadata:
          $ref: "#/components/schemas/content_type_attribute_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    content_type_attributes:
      type: object
      title: Attributes
      description: Attributes
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Attributes in the collection.
          items:
            $ref: "#/components/schemas/content_type_attribute_expanded"
    content_type_attribute_create:
      type: object
      title: Create Attribute
      description: Create Attribute
      required:
        - id
        - type
        - required
        - name
      properties:
        id:
          $ref: "#/components/schemas/content_type_attribute_id"
        type:
          $ref: "#/components/schemas/content_type_attribute_type"
        required:
          $ref: "#/components/schemas/content_type_attribute_required"
        name:
          $ref: "#/components/schemas/content_type_attribute_name"
        description:
          $ref: "#/components/schemas/content_type_attribute_description"
        metadata:
          $ref: "#/components/schemas/content_type_attribute_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    content_type_attribute_update:
      type: object
      title: Update Attribute
      description: Update Attribute
      properties:
        id:
          $ref: "#/components/schemas/content_type_attribute_id"
        required:
          $ref: "#/components/schemas/content_type_attribute_required"
        name:
          $ref: "#/components/schemas/content_type_attribute_name"
        description:
          $ref: "#/components/schemas/content_type_attribute_description"
        metadata:
          $ref: "#/components/schemas/content_type_attribute_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    # Profile
    profile_id:
      type: string
      format: uuid
      title: Profile Id
      description: Profile Id
    profile_attributes:
      type: array
      title: Profile Attributes
      description: Profile Attributes. Must be passed required attributes defined on attribute of the profile type.
      items:
        type: object
        title: Profile Attribute
        description: Profile Attribute
        properties:
          id:
            $ref: "#/components/schemas/profile_type_attribute_id"
          value:
            type: string
            title: Attribute Value
            description: Profile Attribute Value
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
    profile_metadata:
      type: object
      title: Profile Metadata
      description: Profile Metadata.
      properties:
        tags:
          type: array
          title: Tags
          description: Profile Tags
          items:
            type: string
            title: Tag
            description: Tag
          example:
            - adventurer
            - fisher
    profile_aggregations:
      type: object
      title: Profile Aggregations
      description: Profile Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        names:
          type: integer
          description: Number of Names
          default: 0
        images:
          type: integer
          description: Number of Images
          default: 0
        emails:
          type: integer
          description: Number of Emails
          default: 0
        phones:
          type: integer
          description: Number of Phones
          default: 0
        webs:
          type: integer
          description: Number of Webs
          default: 0
        socials:
          type: integer
          description: Number of Socials
          default: 0
        addresses:
          type: integer
          description: Number of Addresses
          default: 0
        educations:
          type: integer
          description: Number of Educations
          default: 0
        languages:
          type: integer
          description: Number of Languages
          default: 0
        skills:
          type: integer
          description: Number of Skills
          default: 0
        experiences:
          type: integer
          description: Number of Experiences
          default: 0
        attachments:
          type: integer
          description: Number of Attachments
          default: 0
        contents:
          type: integer
          description: Number of Contents
          default: 0
        citizenships:
          type: integer
          description: Number of Citizenships
          default: 0
        awards:
          type: integer
          description: Number of Awards
          default: 0
        tests:
          type: integer
          description: Number of Tests
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile:
      type: object
      title: Profile
      description: Profile
      properties:
        id:
          $ref: "#/components/schemas/profile_id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          type: string
          title: Name
          description: Profile Name
          example: John Doe
        description:
          type: string
          title: Description
          description: Profile Description
          example: A focussed, results-driven team player with many year experience in the field.
        attributes:
          $ref: "#/components/schemas/profile_attributes"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_expanded:
      type: object
      title: Profile Expanded
      description: Profile Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_id"
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        type_data:
          $ref: "#/components/schemas/profile_type"
        name:
          type: string
          title: Name
          description: Profile Name
          example: John Doe
        description:
          type: string
          title: Description
          description: Profile Description
          example: A focussed, results-driven team player with many year experience in the field.
        attributes:
          $ref: "#/components/schemas/profile_attributes"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/profile_aggregations"
        names:
          type: array
          title: Images
          items:
            $ref: "#/components/schemas/profile_name"
        images:
          type: array
          title: Images
          items:
            $ref: "#/components/schemas/profile_image"
        emails:
          type: array
          title: Emails
          items:
            $ref: "#/components/schemas/profile_email"
        phones:
          type: array
          title: Phones
          items:
            $ref: "#/components/schemas/profile_phone"
        webs:
          type: array
          title: Webs
          items:
            $ref: "#/components/schemas/profile_web"
        socials:
          type: array
          title: Social Profiles
          items:
            $ref: "#/components/schemas/profile_social"
        addresses:
          type: array
          title: Addresses
          items:
            $ref: "#/components/schemas/profile_address"
        educations:
          type: array
          title: Educations
          items:
            $ref: "#/components/schemas/profile_education"
        languages:
          type: array
          title: Languages
          items:
            $ref: "#/components/schemas/profile_language"
        skills:
          type: array
          title: Skills
          items:
            $ref: "#/components/schemas/profile_skill"
        experiences:
          type: array
          title: Experiences
          items:
            $ref: "#/components/schemas/profile_experience"
        attachments:
          type: array
          title: Attachments
          items:
            $ref: "#/components/schemas/profile_attachment"
        contents:
          type: array
          title: Contents
          items:
            $ref: "#/components/schemas/profile_content"
        citizenships:
          type: array
          title: Citizenships
          items:
            $ref: "#/components/schemas/profile_citizenship"
        awards:
          type: array
          title: Awards
          items:
            $ref: "#/components/schemas/profile_award"
        tests:
          type: array
          title: Tests
          items:
            $ref: "#/components/schemas/profile_test"
    profiles:
      type: object
      title: Profiles
      description: Profiles
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Profiles in the collection.
          items:
            $ref: "#/components/schemas/profile_expanded"
    profile_create:
      type: object
      title: Create Profile
      description: Create Profile
      required:
        - type_id
        - name
      properties:
        type_id:
          $ref: "#/components/schemas/profile_type_id"
        name:
          type: string
          title: Name
          description: Profile Name
          example: John Doe
        description:
          type: string
          title: Description
          description: Profile Description
          example: A focussed, results-driven team player with many year experience in the field.
        attributes:
          $ref: "#/components/schemas/profile_attributes"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    profile_update:
      type: object
      title: Update Profile
      description: Update Profile
      properties:
        name:
          type: string
          title: Name
          description: Profile Name
          example: John Doe
        description:
          type: string
          title: Description
          description: Profile Description
          example: A focussed, results-driven team player with many year experience in the field.
        attributes:
          $ref: "#/components/schemas/profile_attributes"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    profile_override:
      type: object
      title: Override Profile
      description: Override Profile with Another Profile.
      required:
        - profile_id
      properties:
        profile_id:
          $ref: "#/components/schemas/profile_id"
        allow_null_values:
          type: boolean
          title: Allow NULL Values
          description: |
            Default is `false`. If true, system override the profile specified in the resource URL with the profile specified in the request body without checking NULL value. 
            Otherwise, system override the profile specified in the resource URL with the data is not empty only.
          default: false
        options:
          type: array
          title: Options
          description: |
            Optional, System will override only passed data of the profile when options have provided. Otherwise, system will override all data of the profile to the candidata profile specified in the resource URL.

            **Available options:**
              - **Profile** - Only profile main data like name, description, ...etc.
              - **Names** - Only names of the profile specified in the request body.
              - **Images** - Only images of the profile specified in the request body.
              - **Emails** - Only emails of the profile specified in the request body.
              - **Phones** - Only phones of the profile specified in the request body.
              - **Webs** - Only webs of the profile specified in the request body.
              - **Socials** - Only social accounts of the profile specified in the request body.
              - **Addresses** - Only addresses of the profile specified in the request body.
              - **Educations** - Only education entries of the profile specified in the request body.
              - **Languages** - Only languages of the profile specified in the request body.
              - **Skills** - Only skills of the profile specified in the request body.
              - **Experiences** - Only expriences of the profile specified in the request body.
              - **Attachments** - Only attachments of the profile specified in the request body.
          items:
            type: string
            title: Data Type
            description: Data Type to Override
          example:
            - profile
            - names
            - images
            - emails
            - phones
            - webs
            - socials
            - addresses
            - educations
            - languages
            - skills
            - experiences
            - attachments
    profile_name_id:
      type: string
      format: uuid
      title: Name Id
      description: Name Id
    profile_name_type:
      type: string
      title: Name Type
      description: |
        Name Types:
          - Full Name
          - First Name
          - Last Name
          - Middle Name
          - Family Name
          - Official Name
          - Nick Name
          - User Name
      enum:
        - full_name
        - first_name
        - last_name
        - middle_name
        - family_name
        - official_name
        - nick_name
        - user_name
      example: full_name
    profile_name:
      type: object
      title: Name
      description: Profile Name
      properties:
        id:
          $ref: "#/components/schemas/profile_name_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_name_type"
        text:
          type: string
          title: Text
          description: Name Text for type
          example: John Doe
        description:
          type: string
          title: Description
          description: Name Description
          example: Full Name
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_name_expanded:
      type: object
      title: Name Expanded
      description: Profile Name Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_name_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_name_type"
        text:
          type: string
          title: Text
          description: Name Text for type
          example: John Doe
        description:
          type: string
          title: Description
          description: Name Description
          example: Full Name
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_names:
      type: object
      title: Names
      description: Profile Names
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Names in the collection.
          items:
            $ref: "#/components/schemas/profile_name_expanded"
    profile_name_create:
      type: object
      title: Add Name
      description: Add Name
      required:
        - type
        - text
      properties:
        type:
          $ref: "#/components/schemas/profile_name_type"
        text:
          type: string
          title: Text
          description: Name Text for type
          example: John Doe
        description:
          type: string
          title: Description
          description: Name Description
          example: Full Name
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_name_update:
      type: object
      title: Update Name
      description: Update Name
      properties:
        type:
          $ref: "#/components/schemas/profile_name_type"
        text:
          type: string
          title: Text
          description: Name Text for type
          example: John Doe
        description:
          type: string
          title: Description
          description: Name Description
          example: Full Name
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_image_id:
      type: string
      format: uuid
      title: Image Id
      description: Image Id
    profile_image_type:
      type: string
      title: Image Type
      description: |
        Image Types:
          - Profile Image
          - Cover Image
      enum:
        - profile
        - cover
      example: profile
    profile_image:
      type: object
      title: Image
      description: Profile Image
      properties:
        id:
          $ref: "#/components/schemas/profile_image_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_image_type"
        url:
          type: string
          format: url
          title: Image
          description: Image URL
          example: https://www.github.com/aircampi.png
        description:
          type: string
          title: Description
          description: Image Description (Alt Text)
          example: GitHub Profile Image
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_image_expanded:
      type: object
      title: Image Expanded
      description: Profile Image Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_image_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_image_type"
        url:
          type: string
          format: url
          title: Image
          description: Image URL
          example: https://www.github.com/aircampi.png
        description:
          type: string
          title: Description
          description: Image Description (Alt Text)
          example: GitHub Profile Image
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_images:
      type: object
      title: Images
      description: Profile Images
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Images in the collection.
          items:
            $ref: "#/components/schemas/profile_image_expanded"
    profile_image_create:
      type: object
      title: Add Image
      description: Add Image
      required:
        - type
        - url
      properties:
        type:
          $ref: "#/components/schemas/profile_image_type"
        url:
          type: string
          format: url
          title: Image
          description: Image URL
          example: https://www.github.com/aircampi.png
        description:
          type: string
          title: Description
          description: Image Description (Alt Text)
          example: GitHub Profile Image
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_image_update:
      type: object
      title: Update Image
      description: Update Image
      properties:
        type:
          $ref: "#/components/schemas/profile_image_type"
        url:
          type: string
          format: url
          title: Image
          description: Image URL
          example: https://www.github.com/aircampi.png
        description:
          type: string
          title: Description
          description: Image Description (Alt Text)
          example: GitHub Profile Image
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_email_id:
      type: string
      format: uuid
      title: Email Id
      description: Email Id
    profile_email_type:
      type: string
      title: Email Type
      description: |
        Email Types:
          - Personal
          - Work
      enum:
        - personal
        - work
      example: work
    profile_email:
      type: object
      title: Email
      description: Profile Email
      properties:
        id:
          $ref: "#/components/schemas/profile_email_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        primary:
          $ref: "#/components/schemas/content_primary"
        type:
          $ref: "#/components/schemas/profile_email_type"
        address:
          type: string
          title: Address
          description: Email Address
          example: hello@aircampi.com
        description:
          type: string
          title: Description
          description: Email Description
          example: Work Email
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_email_expanded:
      type: object
      title: Social Expanded
      description: Profile Social Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_social_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        primary:
          $ref: "#/components/schemas/content_primary"
        type:
          $ref: "#/components/schemas/profile_email_type"
        address:
          type: string
          title: Address
          description: Email Address
          example: hello@aircampi.com
        description:
          type: string
          title: Description
          description: Email Description
          example: Work Email
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_emails:
      type: object
      title: Emails
      description: Profile Emails
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Emails in the collection.
          items:
            $ref: "#/components/schemas/profile_email_expanded"
    profile_email_create:
      type: object
      title: Add Email
      description: Add Email
      required:
        - type
        - address
      properties:
        type:
          $ref: "#/components/schemas/profile_email_type"
        address:
          type: string
          title: Address
          description: Email Address
          example: hello@aircampi.com
        description:
          type: string
          title: Description
          description: Email Description
          example: Work Email
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_email_update:
      type: object
      title: Update Email
      description: Update Email
      properties:
        type:
          $ref: "#/components/schemas/profile_email_type"
        address:
          type: string
          title: Address
          description: Email Address
          example: hello@aircampi.com
        description:
          type: string
          title: Description
          description: Email Description
          example: Work Email
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_phone_id:
      type: string
      format: uuid
      title: Phone Id
      description: Phone Id
    profile_phone_type:
      type: string
      title: Phone Type
      description: |
        Phone Types:
          - Home
          - Work
          - Mobile
          - Business
      enum:
        - home
        - work
        - mobile
        - business
      example: work
    profile_phone:
      type: object
      title: Phone
      description: Profile Phone
      properties:
        id:
          $ref: "#/components/schemas/profile_phone_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        primary:
          $ref: "#/components/schemas/content_primary"
        type:
          $ref: "#/components/schemas/profile_phone_type"
        country:
          $ref: "#/components/schemas/content_phone_country_code"
        number:
          type: string
          title: Phone Number
          description: Phone Number
          example: 99112233
        extension:
          type: string
          title: Phone Extension
          description: Phone Extension
          example: 1
        description:
          type: string
          title: Description
          description: Phone Description
          example: Work Phone
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_phone_expanded:
      type: object
      title: Phone Expanded
      description: Profile Phone Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_phone_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        primary:
          $ref: "#/components/schemas/content_primary"
        type:
          $ref: "#/components/schemas/profile_phone_type"
        country:
          $ref: "#/components/schemas/content_phone_country_code"
        number:
          type: string
          title: Phone Number
          description: Phone Number
          example: 99112233
        extension:
          type: string
          title: Phone Extension
          description: Phone Extension
          example: 1
        description:
          type: string
          title: Description
          description: Phone Description
          example: Work Phone
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_phones:
      type: object
      title: Phones
      description: Profile Phones
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Phones in the collection.
          items:
            $ref: "#/components/schemas/profile_phone_expanded"
    profile_phone_create:
      type: object
      title: Add Phone
      description: Add Phone
      required:
        - type
        - number
      properties:
        type:
          $ref: "#/components/schemas/profile_phone_type"
        country:
          $ref: "#/components/schemas/content_phone_country_code"
        number:
          type: string
          title: Phone Number
          description: Phone Number
          example: 99112233
        extension:
          type: string
          title: Phone Extension
          description: Phone Extension
          example: 1
        description:
          type: string
          title: Description
          description: Phone Description
          example: Work Phone
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_phone_update:
      type: object
      title: Update Phone
      description: Update Phone
      properties:
        type:
          $ref: "#/components/schemas/profile_phone_type"
        country:
          $ref: "#/components/schemas/content_phone_country_code"
        number:
          type: string
          title: Phone Number
          description: Phone Number
          example: 99112233
        extension:
          type: string
          title: Phone Extension
          description: Phone Extension
          example: 1
        description:
          type: string
          title: Description
          description: Phone Description
          example: Work Phone
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_web_id:
      type: string
      format: uuid
      title: Web Id
      description: Web Id
    profile_web_type:
      type: string
      title: Web Type
      description: |
        Web Types:
          - Personal
          - Work
      enum:
        - Personal
        - Work
      example: Work
    profile_web:
      type: object
      title: Web
      description: Profile Web
      properties:
        id:
          $ref: "#/components/schemas/profile_web_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_web_type"
        address:
          type: string
          format: url
          title: Address
          description: Web Address
          example: www.aircampi.com
        description:
          type: string
          title: Description
          description: Web Description
          example: Work Web
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_web_expanded:
      type: object
      title: Web Expanded
      description: Profile Web Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_web_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_web_type"
        address:
          type: string
          format: url
          title: Address
          description: Web Address
          example: www.aircampi.com
        description:
          type: string
          title: Description
          description: Web Description
          example: Work Web
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_webs:
      type: object
      title: Webs
      description: Profile Webs
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Webs in the collection.
          items:
            $ref: "#/components/schemas/profile_web_expanded"
    profile_web_create:
      type: object
      title: Add Web
      description: Add Web
      required:
        - type
        - username
      properties:
        type:
          $ref: "#/components/schemas/profile_web_type"
        address:
          type: string
          format: url
          title: Address
          description: Web Address
          example: www.aircampi.com
        description:
          type: string
          title: Description
          description: Web Description
          example: Work Web
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_web_update:
      type: object
      title: Update Web
      description: Update Web
      properties:
        type:
          $ref: "#/components/schemas/profile_web_type"
        address:
          type: string
          format: url
          title: Address
          description: Web Address
          example: www.aircampi.com
        description:
          type: string
          title: Description
          description: Web Description
          example: Work Web
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_social_id:
      type: string
      format: uuid
      title: Social Id
      description: Social Id
    profile_social_type:
      type: string
      title: Social Type
      description: |
        Social Types:
          - Facebook
          - LinkedIn
          - Twitter
          - and more...
      enum:
        - facebook
        - linkedin
        - twitter
        - github
      example: github
    profile_social:
      type: object
      title: Social
      description: Profile Social
      properties:
        id:
          $ref: "#/components/schemas/profile_social_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_social_type"
        username:
          type: string
          title: Username
          description: Username
          example: aircampi.com
        url:
          type: string
          format: url
          title: URL
          description: URL
          example: https://www.facebook.com/aircampi
        description:
          type: string
          title: Description
          description: Social Description
          example: Work Social
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_social_expanded:
      type: object
      title: Social Expanded
      description: Profile Social Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_social_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_social_type"
        username:
          type: string
          title: Username
          description: Username
          example: aircampi.com
        url:
          type: string
          format: url
          title: URL
          description: URL
          example: https://www.facebook.com/aircampi
        description:
          type: string
          title: Description
          description: Social Description
          example: Work Social
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_socials:
      type: object
      title: Socials
      description: Profile Socials
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Socials in the collection.
          items:
            $ref: "#/components/schemas/profile_social_expanded"
    profile_social_create:
      type: object
      title: Add Social
      description: Add Social
      required:
        - type
        - username
      properties:
        type:
          $ref: "#/components/schemas/profile_social_type"
        username:
          type: string
          title: Username
          description: Username
          example: aircampi.com
        url:
          type: string
          format: url
          title: URL
          description: URL
          example: https://www.facebook.com/aircampi
        description:
          type: string
          title: Description
          description: Social Description
          example: Work Social
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_social_update:
      type: object
      title: Update Social
      description: Update Social
      properties:
        type:
          $ref: "#/components/schemas/profile_social_type"
        username:
          type: string
          title: Username
          description: Username
          example: aircampi.com
        url:
          type: string
          format: url
          title: URL
          description: URL
          example: https://www.facebook.com/aircampi
        description:
          type: string
          title: Description
          description: Social Description
          example: Work Social
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_address_id:
      type: string
      format: uuid
      title: Address Id
      description: Address Id
    profile_address_type:
      type: string
      title: Address Type
      description: |
        Address Types:
          - Home
          - Work
          - School
      enum:
        - home
        - work
        - school
      example: work
    profile_address:
      type: object
      title: Address
      description: Profile Address
      properties:
        id:
          $ref: "#/components/schemas/profile_address_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_address_type"
        country:
          $ref: "#/components/schemas/content_country_code"
        state:
          type: string
          title: State
          description: State
          example: null
        zipcode:
          type: string
          title: Zipcode
          description: Zipcode
          example: 97611
        city:
          type: string
          title: City
          description: City
          example: Ulaanbaatar
        line_1:
          type: string
          title: Address Line 1
          description: Address Line 1
          example: bayanzurkh district
        line_2:
          type: string
          title: Address Line 2
          description: Address Line 2
          example: Peace avenue
        line_3:
          type: string
          title: Address Line 3
          description: Address Line 3
          example: Building III
        description:
          type: string
          title: Description
          description: Address Description
          example: Work Address
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_address_expanded:
      type: object
      title: Address Expanded
      description: Profile Address Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_social_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_address_type"
        country:
          $ref: "#/components/schemas/content_country_code"
        state:
          type: string
          title: State
          description: State
          example: null
        zipcode:
          type: string
          title: Zipcode
          description: Zipcode
          example: 97611
        city:
          type: string
          title: City
          description: City
          example: Ulaanbaatar
        line_1:
          type: string
          title: Address Line 1
          description: Address Line 1
          example: bayanzurkh district
        line_2:
          type: string
          title: Address Line 2
          description: Address Line 2
          example: Peace avenue
        line_3:
          type: string
          title: Address Line 3
          description: Address Line 3
          example: Building III
        description:
          type: string
          title: Description
          description: Address Description
          example: Work Address
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_addresses:
      type: object
      title: Addresses
      description: Profile Addresses
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Addresses in the collection.
          items:
            $ref: "#/components/schemas/profile_address_expanded"
    profile_address_create:
      type: object
      title: Add Address
      description: Add Address
      required:
        - type
        - country
      properties:
        type:
          $ref: "#/components/schemas/profile_address_type"
        country:
          $ref: "#/components/schemas/content_country_code"
        state:
          type: string
          title: State
          description: State
          example: null
        zipcode:
          type: string
          title: Zipcode
          description: Zipcode
          example: 97611
        city:
          type: string
          title: City
          description: City
          example: Ulaanbaatar
        line_1:
          type: string
          title: Address Line 1
          description: Address Line 1
          example: bayanzurkh district
        line_2:
          type: string
          title: Address Line 2
          description: Address Line 2
          example: Peace avenue
        line_3:
          type: string
          title: Address Line 3
          description: Address Line 3
          example: Building III
        description:
          type: string
          title: Description
          description: Address Description
          example: Work Address
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_address_update:
      type: object
      title: Update Address
      description: Update Address
      properties:
        type:
          $ref: "#/components/schemas/profile_address_type"
        country:
          $ref: "#/components/schemas/content_country_code"
        state:
          type: string
          title: State
          description: State
          example: null
        zipcode:
          type: string
          title: Zipcode
          description: Zipcode
          example: 97611
        city:
          type: string
          title: City
          description: City
          example: Ulaanbaatar
        line_1:
          type: string
          title: Address Line 1
          description: Address Line 1
          example: bayanzurkh district
        line_2:
          type: string
          title: Address Line 2
          description: Address Line 2
          example: Peace avenue
        line_3:
          type: string
          title: Address Line 3
          description: Address Line 3
          example: Building III
        description:
          type: string
          title: Description
          description: Address Description
          example: Work Address
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_education_id:
      type: string
      format: uuid
      title: Education Id
      description: Education Id
    profile_education_level:
      type: string
      title: Education Level
      description: Education Level
      enum:
        - higher_education
    profile_education:
      type: object
      title: Education
      description: Profile Education
      properties:
        id:
          $ref: "#/components/schemas/profile_education_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        school:
          type: string
          title: School
          description: School Name
          example: University of Pennsylvania
        level:
          $ref: "#/components/schemas/profile_education_level"
        degree:
          type: string
          title: Degree
          description: Degree Name
          example: B.S.
        field_of_study:
          type: string
          title: Field of Study
          description: Field of Study
          example: Marketing Communication & Economics
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        completed:
          type: boolean
          title: Completed
          description: Completed
          default: false
        description:
          type: string
          title: Description
          description: Education Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_education_expanded:
      type: object
      title: Education Expanded
      description: Profile Education Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_education_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        school:
          type: string
          title: School
          description: School Name
          example: University of Pennsylvania
        level:
          $ref: "#/components/schemas/profile_education_level"
        degree:
          type: string
          title: Degree
          description: Degree Name
          example: B.S.
        field_of_study:
          type: string
          title: Field of Study
          description: Field of Study
          example: Marketing Communication & Economics
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        completed:
          type: boolean
          title: Completed
          description: Completed
          default: false
        description:
          type: string
          title: Description
          description: Education Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_educations:
      type: object
      title: Educations
      description: Profile Educations
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Educations in the collection.
          items:
            $ref: "#/components/schemas/profile_education_expanded"
    profile_education_create:
      type: object
      title: Add Education
      description: Add Education
      required:
        - school
      properties:
        school:
          type: string
          title: School
          description: School Name
          example: University of Pennsylvania
        level:
          $ref: "#/components/schemas/profile_education_level"
        degree:
          type: string
          title: Degree
          description: Degree Name
          example: B.S.
        field_of_study:
          type: string
          title: Field of Study
          description: Field of Study
          example: Marketing Communication & Economics
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        completed:
          type: boolean
          title: Completed
          description: Completed
          default: false
        description:
          type: string
          title: Description
          description: Education Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_education_update:
      type: object
      title: Update Education
      description: Update Education
      properties:
        school:
          type: string
          title: School
          description: School Name
          example: University of Pennsylvania
        level:
          $ref: "#/components/schemas/profile_education_level"
        degree:
          type: string
          title: Degree
          description: Degree Name
          example: B.S.
        field_of_study:
          type: string
          title: Field of Study
          description: Field of Study
          example: Marketing Communication & Economics
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        completed:
          type: boolean
          title: Completed
          description: Completed
          default: false
        description:
          type: string
          title: Description
          description: Education Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_language_id:
      type: string
      format: uuid
      title: Language Id
      description: Language Id
    profile_language_code:
      type: string
      title: Language Code
      description: |
        Language Code:
          - Mongolian
          - English
          - Chinese
          - and more...
      enum:
        - mn
        - en
        - ch
        - ru
    profile_language:
      type: object
      title: Language
      description: Profile Language
      properties:
        id:
          $ref: "#/components/schemas/profile_language_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        language:
          $ref: "#/components/schemas/profile_language_code"
        native:
          type: boolean
          title: Native
          description: Native
          default: false
        rating_scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        writing_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        reading_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        listening_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        speaking_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        overall_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        overall_score:
          type: integer
          title: Overall Score
          description: Overall Score. The system automatically calculates on their selected levels of the rating scale.
          example: 8.5
        assessment_at:
          type: string
          format: date
          title: Assessment At
          description: Assessment Date
        description:
          type: string
          title: Description
          description: Language Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_language_expanded:
      type: object
      title: Language Expanded
      description: Profile Language Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_language_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        language:
          $ref: "#/components/schemas/profile_language_code"
        native:
          type: boolean
          title: Native
          description: Native
          default: false
        rating_scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        rating_scale_data:
          $ref: "#/components/schemas/rating_scale"
        writing_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        writing_level_data:
          $ref: "#/components/schemas/rating_scale_level"
        reading_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        reading_level_data:
          $ref: "#/components/schemas/rating_scale_level"
        listening_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        listening_level_data:
          $ref: "#/components/schemas/rating_scale_level"
        speaking_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        speaking_level_data:
          $ref: "#/components/schemas/rating_scale_level"
        overall_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        overall_level_data:
          $ref: "#/components/schemas/rating_scale_level"
        overall_score:
          type: integer
          title: Overall Score
          description: Overall Score. The system automatically calculates on their selected levels of the rating scale.
          example: 8.5
        assessment_at:
          type: string
          format: date
          title: Assessment At
          description: Assessment Date
        description:
          type: string
          title: Description
          description: Language Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_languages:
      type: object
      title: Languages
      description: Profile Languages
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Languages in the collection.
          items:
            $ref: "#/components/schemas/profile_language_expanded"
    profile_language_create:
      type: object
      title: Add Language
      description: Add Language
      required:
        - language
      properties:
        language:
          $ref: "#/components/schemas/profile_language_code"
        native:
          type: boolean
          title: Native
          description: Native
          default: false
        rating_scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        writing_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        reading_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        listening_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        speaking_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        overall_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        assessment_at:
          type: string
          format: date
          title: Assessment At
          description: Assessment Date
        description:
          type: string
          title: Description
          description: Language Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_language_update:
      type: object
      title: Update Language
      description: Update Language
      properties:
        language:
          $ref: "#/components/schemas/profile_language_code"
        native:
          type: boolean
          title: Native
          description: Native
          default: false
        rating_scale_id:
          $ref: "#/components/schemas/rating_scale_id"
        writing_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        reading_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        listening_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        speaking_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        overall_level_id:
          $ref: "#/components/schemas/rating_scale_level_id"
        assessment_at:
          type: string
          format: date
          title: Assessment At
          description: Assessment Date
        description:
          type: string
          title: Description
          description: Language Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_experience_id:
      type: string
      format: uuid
      title: Experience Id
      description: Experience Id
    profile_experience:
      type: object
      title: Experience
      description: Profile Experience
      properties:
        id:
          $ref: "#/components/schemas/profile_experience_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        title:
          type: string
          title: Title
          description: Job Title
          example: Chief Operating Officer
        company:
          type: string
          title: Company
          description: Company Name
          example: Zion, LLC
        industry:
          type: string
          title: Industry
          description: Industry Name
          example: Technology
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        current:
          type: boolean
          title: Current
          description: Is Current Job?
          default: false
        description:
          type: string
          title: Description
          description: Experience Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_experience_expanded:
      type: object
      title: Experience Expanded
      description: Profile Experience Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_experience_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        title:
          type: string
          title: Title
          description: Job Title
          example: Chief Operating Officer
        company:
          type: string
          title: Company
          description: Company Name
          example: Zion, LLC
        industry:
          type: string
          title: Industry
          description: Industry Name
          example: Technology
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        current:
          type: boolean
          title: Current
          description: Is Current Job?
          default: false
        description:
          type: string
          title: Description
          description: Experience Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_experiences:
      type: object
      title: Experiences
      description: Profile Experiences
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Experiences in the collection.
          items:
            $ref: "#/components/schemas/profile_experience_expanded"
    profile_experience_create:
      type: object
      title: Add Experience
      description: Add Experience
      required:
        - title
        - company
      properties:
        title:
          type: string
          title: Title
          description: Job Title
          example: Chief Operating Officer
        company:
          type: string
          title: Company
          description: Company Name
          example: Zion, LLC
        industry:
          type: string
          title: Industry
          description: Industry Name
          example: Technology
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        current:
          type: boolean
          title: Current
          description: Is Current Job?
          default: false
        description:
          type: string
          title: Description
          description: Experience Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_experience_update:
      type: object
      title: Update Experience
      description: Update Experience
      properties:
        title:
          type: string
          title: Title
          description: Job Title
          example: Chief Operating Officer
        company:
          type: string
          title: Company
          description: Company Name
          example: Zion, LLC
        industry:
          type: string
          title: Industry
          description: Industry Name
          example: Technology
        start_at:
          type: string
          format: date
          title: Start At
          description: Started Date
        end_at:
          type: string
          format: date
          title: End At
          description: End Date
        current:
          type: boolean
          title: Current
          description: Is Current Job?
          default: false
        description:
          type: string
          title: Description
          description: Experience Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_skill_id:
      type: string
      format: uuid
      title: Skill Id
      description: Skill Id
    profile_skill:
      type: object
      title: Skill
      description: Profile Skill
      properties:
        id:
          $ref: "#/components/schemas/profile_skill_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        name:
          type: string
          title: Name
          description: Skill Name
          example: Problem Solving
        description:
          type: string
          title: Description
          description: Skill Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_skill_expanded:
      type: object
      title: Skill Expanded
      description: Profile Skill Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_skill_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        name:
          type: string
          title: Name
          description: Skill Name
          example: Problem Solving
        description:
          type: string
          title: Description
          description: Skill Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_skills:
      type: object
      title: Skills
      description: Profile Skills
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Skills in the collection.
          items:
            $ref: "#/components/schemas/profile_skill_expanded"
    profile_skill_create:
      type: object
      title: Add Skill
      description: Add Skill
      required:
        - name
      properties:
        name:
          type: string
          title: Name
          description: Skill Name
          example: Problem Solving
        description:
          type: string
          title: Description
          description: Skill Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_skill_update:
      type: object
      title: Update Skill
      description: Update Skill
      properties:
        name:
          type: string
          title: Name
          description: Skill Name
          example: Problem Solving
        description:
          type: string
          title: Description
          description: Skill Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_attachment_id:
      type: string
      format: uuid
      title: Attachment Id
      description: Attachment Id
    profile_attachment_type:
      type: string
      title: Attachment Type
      description: |
        Attachment Type. If you want to get the list of values progmatically, use the [Lookups](/api/school#tag/Lookups) endpoints.

        Attachment Types:
          - **File** - File Attachment
          - **Link** - Link Attachment
          - **Note** - Note Attachment
      enum:
        - file
        - link
        - note
    profile_attachment_category:
      type: string
      title: Attachment Category
      description: |
        Attachment Categories:
          - Essay
          - Interview
          - Portfolio
          - Recommendation
          - Academic Summary
          - and more...

        If you want to get the list of values progmatically, use the [Lookups](/api/school#tag/Lookups) endpoints.
      enum:
        - essay
        - interview
        - recommendation
        - portfolio
        - academic_summary
    profile_attachment_metadata:
      type: object
      title: Attachment Metadata
      description: Attachment Metadata. It depends on attachment type.
      oneOf:
        - $ref: "#/components/schemas/profile_attachment_metadata_file"
        - $ref: "#/components/schemas/profile_attachment_metadata_link"
        - $ref: "#/components/schemas/profile_attachment_metadata_note"
    profile_attachment_metadata_file:
      type: object
      title: File
      description: File Attachment Metadata.
      properties:
        file_id:
          type: string
          title: File Id
          description: File Id
          example: 123-abc-456-def-789-ghi
        file_name:
          type: string
          title: File Name
          description: File Name
          example: Resume.pdf
        file_type:
          type: string
          title: File Type
          description: File Type
          example: pdf
        file_size:
          type: integer
          format: int64
          title: File Size
          description: File Size in bytes
          example: 1024
    profile_attachment_metadata_link:
      type: object
      title: Link
      description: Link Attachment Metadata.
      properties:
        url:
          type: string
          format: url
          title: URL
          description: URL
          example: "https://www.aircampi.com/about"
        descritive_text:
          type: string
          title: Descriptive Text
          description: Descriptive Text (Alt Text)
          example: About Hischool
    profile_attachment_metadata_note:
      type: object
      title: Note
      description: Note Attachment Metadata.
      properties:
        notes:
          type: string
          title: Notes
          description: Notes
          example: This is markdown notes.
    profile_attachment:
      type: object
      title: Attachment
      description: Profile Attachment
      properties:
        id:
          $ref: "#/components/schemas/profile_attachment_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_attachment_type"
        category:
          $ref: "#/components/schemas/profile_attachment_category"
        name:
          type: string
          title: Name
          description: Attachment Name
          example: Resume
        description:
          type: string
          title: Description
          description: Attachment Description
          example: Resume for Job
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_attachment_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_attachment_expanded:
      type: object
      title: Attachment
      description: Profile Attachment
      properties:
        id:
          $ref: "#/components/schemas/profile_attachment_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_attachment_type"
        category:
          $ref: "#/components/schemas/profile_attachment_category"
        name:
          type: string
          title: Name
          description: Attachment Name
          example: Resume
        description:
          type: string
          title: Description
          description: Attachment Description
          example: Resume for Job
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_attachment_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_attachments:
      type: object
      title: Attachments
      description: Profile Attachments
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Attachments in the collection.
          items:
            $ref: "#/components/schemas/profile_attachment_expanded"
    profile_attachment_create:
      type: object
      title: Add Attachment
      description: Add Attachment
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/profile_attachment_type"
        category:
          $ref: "#/components/schemas/profile_attachment_category"
        name:
          type: string
          title: Name
          description: Attachment Name
          example: Resume
        description:
          type: string
          title: Description
          description: Attachment Description
          example: Resume for Job
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_attachment_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    profile_attachment_update:
      type: object
      title: Update Attachment
      description: Update Attachment
      properties:
        category:
          $ref: "#/components/schemas/profile_attachment_category"
        name:
          type: string
          title: Name
          description: Attachment Name
          example: Resume
        description:
          type: string
          title: Description
          description: Attachment Description
          example: Resume for Job
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        metadata:
          $ref: "#/components/schemas/profile_attachment_metadata"
        app_metadata:
          $ref: "#/components/schemas/app_metadata"
    profile_content_id:
      type: string
      format: uuid
      title: Content Id
      description: Content Id
    profile_content_attributes:
      type: array
      title: Content Attributes
      description: Content Attributes
      items:
        type: object
        title: Attribute
        description: Attribute
        properties:
          id:
            $ref: "#/components/schemas/content_type_attribute_id"
          value:
            type: string
            title: Attribute Value
            description: Attribute Value
            example: 123-abc-456-efg
    profile_content:
      type: object
      title: Content
      description: Profile Content
      properties:
        id:
          $ref: "#/components/schemas/profile_content_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        content_type_id:
          $ref: "#/components/schemas/content_type_id"
        attributes:
          $ref: "#/components/schemas/profile_content_attributes"
        description:
          type: string
          title: Description
          description: Content Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_content_expanded:
      type: object
      title: Content Expanded
      description: Profile Content Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_content_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        content_type_id:
          $ref: "#/components/schemas/content_type_id"
        content_type_data:
          $ref: "#/components/schemas/content_type"
        attributes:
          $ref: "#/components/schemas/profile_content_attributes"
        description:
          type: string
          title: Description
          description: Content Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_contents:
      type: object
      title: Contents
      description: Profile Contents
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Contents in the collection.
          items:
            $ref: "#/components/schemas/profile_content_expanded"
    profile_content_create:
      type: object
      title: Add Content
      description: Add Content
      properties:
        attributes:
          $ref: "#/components/schemas/profile_content_attributes"
        description:
          type: string
          title: Description
          description: Content Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_content_update:
      type: object
      title: Update Content
      description: Update Content
      properties:
        attributes:
          $ref: "#/components/schemas/profile_content_attributes"
        description:
          type: string
          title: Description
          description: Content Description
          example: Some description text here.
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_test_id:
      type: string
      format: uuid
      title: Test/Exam Id
      description: Test/Exam Id
    profile_test_type:
      type: string
      title: Test/Exam Type
      description: Test/Exam Type
      enum:
        - ielts
        - sat
        - toefl
    profile_test_score:
      type: integer
      title: Test/Exam Score
      description: Test/Exam Score
      example: 7.0
    profile_test_at:
      type: string
      format: date
      title: Test/Exam At
      description: Test/Exam Date
    profile_test_description:
      type: string
      title: Description
      description: Test/Exam Description
      example: Some description text here.
    profile_test_aggregations:
      type: object
      title: Test Aggregations
      description: Profile Test Aggregations
      properties:
        id:
          $ref: "#/components/schemas/id"
        test_id:
          $ref: "#/components/schemas/profile_test_id"
        components:
          type: integer
          description: Number of Components
          default: 0
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_test:
      type: object
      title: Test/Exam
      description: Profile Test/Exam
      properties:
        id:
          $ref: "#/components/schemas/profile_test_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_test_type"
        score:
          $ref: "#/components/schemas/profile_test_score"
        test_at:
          $ref: "#/components/schemas/profile_test_at"
        description:
          $ref: "#/components/schemas/profile_test_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_test_expanded:
      type: object
      title: Test/Exam Expanded
      description: Profile Test/Exam Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_test_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_test_type"
        score:
          $ref: "#/components/schemas/profile_test_score"
        test_at:
          $ref: "#/components/schemas/profile_test_at"
        description:
          $ref: "#/components/schemas/profile_test_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
        aggregations:
          $ref: "#/components/schemas/profile_test_aggregations"
        components:
          type: array
          title: Components
          description: Components
          items:
            $ref: "#/components/schemas/profile_test_component"
    profile_tests:
      type: object
      title: Tests
      description: Profile Tests
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Tests in the collection.
          items:
            $ref: "#/components/schemas/profile_test_expanded"
    profile_test_create:
      type: object
      title: Add Test/Exam
      description: Add Test/Exam
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/profile_test_type"
        score:
          $ref: "#/components/schemas/profile_test_score"
        test_at:
          $ref: "#/components/schemas/profile_test_at"
        description:
          $ref: "#/components/schemas/profile_test_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_test_update:
      type: object
      title: Update Test/Exam
      description: Update Test/Exam
      properties:
        type:
          $ref: "#/components/schemas/profile_test_type"
        score:
          $ref: "#/components/schemas/profile_test_score"
        test_at:
          $ref: "#/components/schemas/profile_test_at"
        description:
          $ref: "#/components/schemas/profile_test_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_test_component_id:
      type: string
      format: uuid
      title: Test/Exam Component Id
      description: Test/Exam Component Id
    profile_test_component_type:
      type: string
      title: Test/Exam Component Type
      description: Test/Exam Component Type
      enum:
        - speaking
        - writing
        - reading
        - listening
    profile_test_component_score:
      type: integer
      title: Test/Exam Component Score
      description: Test/Exam Component Score
      example: 7.0
    profile_test_component_at:
      type: string
      format: date
      title: Test/Exam Component At
      description: Test/Exam Component Date
    profile_test_component_description:
      type: string
      title: Description
      description: Test/Exam Component Description
      example: Some description text here.
    profile_test_component:
      type: object
      title: Test/Exam Component
      description: Profile Test/Exam Component
      properties:
        id:
          $ref: "#/components/schemas/profile_test_component_id"
        test_id:
          $ref: "#/components/schemas/profile_test_id"
        type:
          $ref: "#/components/schemas/profile_test_component_type"
        score:
          $ref: "#/components/schemas/profile_test_component_score"
        test_at:
          $ref: "#/components/schemas/profile_test_component_at"
        description:
          $ref: "#/components/schemas/profile_test_component_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_test_component_expanded:
      type: object
      title: Test/Exam Component Expanded
      description: Profile Test/Exam Component Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_test_component_id"
        test_id:
          $ref: "#/components/schemas/profile_test_id"
        test_data:
          $ref: "#/components/schemas/profile_test"
        type:
          $ref: "#/components/schemas/profile_test_component_type"
        score:
          $ref: "#/components/schemas/profile_test_component_score"
        test_at:
          $ref: "#/components/schemas/profile_test_component_at"
        description:
          $ref: "#/components/schemas/profile_test_component_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_test_components:
      type: object
      title: Test Components
      description: Profile Test Components
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Components in the collection.
          items:
            $ref: "#/components/schemas/profile_test_component_expanded"
    profile_test_component_create:
      type: object
      title: Add Test/Exam Component
      description: Add Test/Exam Component
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/profile_test_component_type"
        score:
          $ref: "#/components/schemas/profile_test_component_score"
        test_at:
          $ref: "#/components/schemas/profile_test_component_at"
        description:
          $ref: "#/components/schemas/profile_test_component_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_test_component_update:
      type: object
      title: Update Test/Exam Component
      description: Update Test/Exam Component
      properties:
        type:
          $ref: "#/components/schemas/profile_test_component_type"
        score:
          $ref: "#/components/schemas/profile_test_component_score"
        test_at:
          $ref: "#/components/schemas/profile_test_component_at"
        description:
          $ref: "#/components/schemas/profile_test_component_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_citizenship_id:
      type: string
      format: uuid
      title: Citizenship Id
      description: Citizenship Id
    profile_citizenship_country:
      type: string
      title: Citizenship Country
      description: Citizenship Country
      enum:
        - mn
        - us
        - ru
        - cn
    profile_citizenship_nationalid:
      type: integer
      title: Citizenship National ID
      description: Citizenship National ID
      example: abc-123-def
    profile_citizenship_issued_at:
      type: string
      format: date
      title: Issued At
      description: Citizenship Issued Date
    profile_citizenship_expiry_at:
      type: string
      format: date
      title: Expiry At
      description: Citizenship Expiry Date
    profile_citizenship_description:
      type: string
      title: Description
      description: Citizenship Description
      example: Some description text here.
    profile_citizenship:
      type: object
      title: Citizenship
      description: Profile Citizenship
      properties:
        id:
          $ref: "#/components/schemas/profile_citizenship_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        country:
          $ref: "#/components/schemas/profile_citizenship_country"
        national_id:
          $ref: "#/components/schemas/profile_citizenship_nationalid"
        issued_at:
          $ref: "#/components/schemas/profile_citizenship_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_citizenship_expiry_at"
        description:
          $ref: "#/components/schemas/profile_citizenship_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_citizenship_expanded:
      type: object
      title: Citizenship
      description: Profile Citizenship
      properties:
        id:
          $ref: "#/components/schemas/profile_citizenship_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        country:
          $ref: "#/components/schemas/profile_citizenship_country"
        national_id:
          $ref: "#/components/schemas/profile_citizenship_nationalid"
        issued_at:
          $ref: "#/components/schemas/profile_citizenship_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_citizenship_expiry_at"
        description:
          $ref: "#/components/schemas/profile_citizenship_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_citizenships:
      type: object
      title: Citizenships
      description: Profile Citizenships
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Citizenships in the collection.
          items:
            $ref: "#/components/schemas/profile_citizenship_expanded"
    profile_citizenship_create:
      type: object
      title: Add Test/Exam Component
      description: Add Test/Exam Component
      required:
        - country
        - national_id
      properties:
        country:
          $ref: "#/components/schemas/profile_citizenship_country"
        national_id:
          $ref: "#/components/schemas/profile_citizenship_nationalid"
        issued_at:
          $ref: "#/components/schemas/profile_citizenship_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_citizenship_expiry_at"
        description:
          $ref: "#/components/schemas/profile_citizenship_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_citizenship_update:
      type: object
      title: Update Citizenship
      description: Update Citizenship
      properties:
        country:
          $ref: "#/components/schemas/profile_citizenship_country"
        national_id:
          $ref: "#/components/schemas/profile_citizenship_nationalid"
        issued_at:
          $ref: "#/components/schemas/profile_citizenship_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_citizenship_expiry_at"
        description:
          $ref: "#/components/schemas/profile_citizenship_description"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_award_id:
      type: string
      format: uuid
      title: Award Id
      description: Profile Award Id
    profile_award_type:
      type: string
      title: Award Type
      description: Award Type
      enum:
        - award
        - honor
        - praise
    profile_award_issued_at:
      type: string
      format: date
      title: Issued At
      description: Award Issued Date
    profile_award_expiry_at:
      type: string
      format: date
      title: Expiry At
      description: Award Expiry Date
    profile_award_name:
      type: string
      title: Name
      description: Award Name
      example: Honor
    profile_award_number:
      type: string
      title: Number
      description: Award Number
      example: AWD10001
    profile_award_description:
      type: string
      title: Description
      description: Award Description
      example: Some description text here.
    profile_award:
      type: object
      title: Award
      description: Profile Award
      properties:
        id:
          $ref: "#/components/schemas/profile_award_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        type:
          $ref: "#/components/schemas/profile_award_type"
        name:
          $ref: "#/components/schemas/profile_award_name"
        number:
          $ref: "#/components/schemas/profile_award_number"
        description:
          $ref: "#/components/schemas/profile_award_description"
        issued_at:
          $ref: "#/components/schemas/profile_award_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_award_expiry_at"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_award_expanded:
      type: object
      title: Award Expanded
      description: Profile Award Expanded
      properties:
        id:
          $ref: "#/components/schemas/profile_award_id"
        profile_id:
          $ref: "#/components/schemas/profile_id"
        profile_data:
          $ref: "#/components/schemas/profile"
        type:
          $ref: "#/components/schemas/profile_award_type"
        name:
          $ref: "#/components/schemas/profile_award_name"
        number:
          $ref: "#/components/schemas/profile_award_number"
        description:
          $ref: "#/components/schemas/profile_award_description"
        issued_at:
          $ref: "#/components/schemas/profile_award_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_award_expiry_at"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
        created_by:
          $ref: "#/components/schemas/user_id"
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_by:
          $ref: "#/components/schemas/user_id"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    profile_awards:
      type: object
      title: Awards
      description: Profile Awards
      properties:
        total_count:
          type: integer
          description: The total number of search records that match the query If you send request with query parameter ?total_count=true only. Otherwise the total_count is not included.
          title: Total Count
        count:
          type: integer
          description: The number of items returned in the current range.
          title: Count
        has_more:
          type: boolean
          description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
          title: HasMore
        limit:
          type: integer
          description: The actual paging size used by the server.
          title: Limit
        offset:
          type: integer
          description: The offset value used in the current page.
          title: Offset
          default: 10
        items:
          type: array
          description: Awards in the collection.
          items:
            $ref: "#/components/schemas/profile_award_expanded"
    profile_award_create:
      type: object
      title: Add Award
      description: Add Award
      required:
        - type
        - name
      properties:
        type:
          $ref: "#/components/schemas/profile_award_type"
        name:
          $ref: "#/components/schemas/profile_award_name"
        number:
          $ref: "#/components/schemas/profile_award_number"
        description:
          $ref: "#/components/schemas/profile_award_description"
        issued_at:
          $ref: "#/components/schemas/profile_award_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_award_expiry_at"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
    profile_award_update:
      type: object
      title: Update Award
      description: Update Award
      properties:
        type:
          $ref: "#/components/schemas/profile_award_type"
        name:
          $ref: "#/components/schemas/profile_award_name"
        number:
          $ref: "#/components/schemas/profile_award_number"
        description:
          $ref: "#/components/schemas/profile_award_description"
        issued_at:
          $ref: "#/components/schemas/profile_award_issued_at"
        expiry_at:
          $ref: "#/components/schemas/profile_award_expiry_at"
        verified:
          $ref: "#/components/schemas/content_verified"
        verified_at:
          $ref: "#/components/schemas/content_verified_at"
  requestBodies:
    # Server
    server_settings_update:
      description: Update Server Settings
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/server_settings"
    # List Request Bodies
    user_id_list:
      description: List of Users
      required: true
      content:
        application/json:
          schema:
            type: object
            description: Users
            properties:
              users:
                type: array
                items:
                  $ref: "#/components/schemas/user_id"
    candidate_id_list:
      description: List of Candidates
      required: true
      content:
        application/json:
          schema:
            type: object
            description: Candidates
            properties:
              candidates:
                type: array
                items:
                  $ref: "#/components/schemas/candidate_id"
    member_id_list:
      description: List of Members
      required: true
      content:
        application/json:
          schema:
            type: object
            description: Members
            properties:
              members:
                type: array
                items:
                  $ref: "#/components/schemas/job_member_id"
    # Job Request Bodies
    job_create:
      description: Create Job
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_create"
    job_update:
      description: Update Job
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_update"
    job_duplicate:
      description: Duplicate Job
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_duplicate"
    job_status_change:
      description: Change Job Status
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_status_change"
    job_stage_create:
      description: Create Stage
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_stage_create"
    job_stage_update:
      description: Update Stage
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_stage_update"
    job_source_create:
      description: Create Source
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_source_create"
    job_source_update:
      description: Update Source
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_source_update"
    job_event_create:
      description: Add Event
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_event_create"
    job_event_update:
      description: Update Event
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_event_update"
    job_event_organizer_status_change:
      description: Change Organizer Status
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_event_organizer_status_change"
    job_member_create:
      description: Add Members
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_member_create"
    # Candidate Request Bodies
    candidate_create:
      description: Add Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_create"
    candidate_update:
      description: Update Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_update"
    candidate_disqualify:
      description: Disqualify Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_disqualify"
    candidate_duplicate:
      description: Duplicate Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_duplicate"
    candidate_transfer:
      description: Transfer Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_transfer"
    candidate_move:
      description: Move Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_move"
    candidate_status_change:
      description: Change Candidate Status
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_status_change"
    candidate_disqualify_bulk:
      description: Disqualify Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_disqualify_bulk"
    candidate_duplicate_bulk:
      description: Duplicate Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_duplicate_bulk"
    candidate_transfer_bulk:
      description: Transfer Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_transfer_bulk"
    candidate_move_bulk:
      description: Move Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/candidate_move_bulk"
    # Job Offer Request Bodies
    job_offer_create:
      description: Add Offer
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_create"
    job_offer_update:
      description: Update Offer
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_update"
    job_offer_status_change:
      description: Change Offer Status
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_status_change"
    job_offer_variable_create:
      description: Create Variable
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_variable_create"
    job_offer_variable_update:
      description: Update Variable
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_variable_update"
    job_offer_document_create:
      description: Create Document
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_document_create"
    job_offer_document_update:
      description: Update Document
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_offer_document_update"
    # Candidate Sorting Request Bodies
    sorting_create:
      description: Create Sorting
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_create"
    sorting_update:
      description: Update Sorting
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_update"
    sorting_condition_create:
      description: Add Condition
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_condition_create"
    sorting_condition_update:
      description: Update Condition
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_condition_update"
    sorting_association_create:
      description: Add Association
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_association_create"
    sorting_association_update:
      description: Update Association
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_association_update"
    sorting_association_candidate_create:
      description: Add Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_association_candidate_create"
    sorting_association_candidate_delete:
      description: Remove Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sorting_association_candidate_delete"
    # Talent Pool Request Bodies
    pool_create:
      description: Create Pool
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_create"
    pool_update:
      description: Update Pool
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_update"
    pool_duplicate:
      description: Duplicate Pool
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_duplicate"
    pool_member_create:
      description: Add Members
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_member_create"
    pool_candidate_create:
      description: Add Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_candidate_create"
    pool_candidate_update:
      description: Update Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_candidate_update"
    pool_candidate_duplicate:
      description: Duplicate Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_candidate_duplicate"
    pool_candidate_move:
      description: Move Candidate
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_candidate_move"
    pool_candidate_duplicate_bulk:
      description: Duplicate Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_candidate_duplicate_bulk"
    pool_candidate_move_bulk:
      description: Move Candidates
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pool_candidate_move_bulk"
    # LOV Request Bodies
    lookup_create:
      description: Create Lookup
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/lookup_create"
    lookup_update:
      description: Update Lookup
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/lookup_update"
    lookup_change:
      description: Change Lookup Code
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/lookup_change"
    lookup_translation_create:
      description: Create Translation
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/label_translation_create"
          example:
            language: en_US
            name: Countries
            description: List of Countries
    lookup_translation_update:
      description: Update Translation
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/label_translation_update"
          example:
            name: Countries
            description: List of Countries
    lookup_value_create:
      description: Create Lookup Value
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/lookup_value_create"
    lookup_value_update:
      description: Update Lookup Value
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/lookup_value_update"
    lookup_value_change:
      description: Change Lookup Value
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/lookup_value_change"
    lookup_value_translation_create:
      description: Create Lookup Value Translation
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/label_translation_create"
          example:
            language: en_US
            name: United States
            description: United States of America
    lookup_value_translation_update:
      description: Update Lookup Value Translation
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/label_translation_update"
          example:
            name: United States
            description: United States of America
    # Rating Scale Request Bodies
    rating_scale_create:
      description: Create Rating Scale
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/rating_scale_create"
    rating_scale_update:
      description: Update Rating Scale
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/rating_scale_update"
    rating_scale_level_create:
      description: Create Rating Scale Level
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/rating_scale_level_create"
    rating_scale_level_update:
      description: Update Rating Scale Level
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/rating_scale_level_update"
    # Profile Type Request Bodies
    profile_type_create:
      description: Create Profile Type
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_type_create"
    profile_type_update:
      description: Update Profile Type
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_type_update"
    profile_type_attribute_create:
      description: Create Attribute
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_type_attribute_create"
    profile_type_attribute_update:
      description: Update Attribute
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_type_attribute_update"
    content_type_create:
      description: Create Content Type
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/content_type_create"
    content_type_update:
      description: Update Content Type
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/content_type_update"
    content_type_attribute_create:
      description: Create Attribute
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/content_type_attribute_create"
    content_type_attribute_update:
      description: Update Attribute
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/content_type_attribute_update"
    # Profile Request Bodies
    profile_create:
      description: Create Profile
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_create"
    profile_update:
      description: Update Profile
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_update"
    profile_override:
      description: Override Profile
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_override"
    profile_name_create:
      description: Create Name
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_name_create"
    profile_name_update:
      description: Update Name
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_name_update"
    profile_image_create:
      description: Create Image
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_image_create"
    profile_image_update:
      description: Update Image
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_image_update"
    profile_email_create:
      description: Create Email
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_email_create"
    profile_email_update:
      description: Update Email
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_email_update"
    profile_phone_create:
      description: Create Phone
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_phone_create"
    profile_phone_update:
      description: Update Phone
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_phone_update"
    profile_web_create:
      description: Create Web
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_web_create"
    profile_web_update:
      description: Update Web
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_web_update"
    profile_social_create:
      description: Create Social
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_social_create"
    profile_social_update:
      description: Update Social
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_social_update"
    profile_address_create:
      description: Create Address
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_address_create"
    profile_address_update:
      description: Update Address
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_address_update"
    profile_language_create:
      description: Create Language
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_language_create"
    profile_language_update:
      description: Update Language
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_language_update"
    profile_education_create:
      description: Create Education
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_education_create"
    profile_education_update:
      description: Update Education
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_education_update"
    profile_experience_create:
      description: Create Experience
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_experience_create"
    profile_experience_update:
      description: Update Experience
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_experience_update"
    profile_skill_create:
      description: Create Skill
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_skill_create"
    profile_skill_update:
      description: Update Skill
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_skill_update"
    profile_attachment_create:
      description: Create Attachment
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_attachment_create"
    profile_attachment_update:
      description: Update Attachment
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_attachment_update"
    profile_content_create:
      description: Create Content
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_content_create"
    profile_content_update:
      description: Update Content
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_content_update"
    profile_test_create:
      description: Create Test
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_test_create"
    profile_test_update:
      description: Update Test
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_test_update"
    profile_test_component_create:
      description: Create Test Component
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_test_component_create"
    profile_test_component_update:
      description: Update Test Component
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_test_component_update"
    profile_citizenship_create:
      description: Create Citizenship
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_citizenship_create"
    profile_citizenship_update:
      description: Update Citizenship
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_citizenship_update"
    profile_award_create:
      description: Create Award
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_award_create"
    profile_award_update:
      description: Update Award
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile_award_update"
  securitySchemes:
    basic_auth:
      description: Basic Authentication
      type: http
      scheme: basic
    bearer_auth:
      description: Bearer Authentication
      type: http
      scheme: bearer
      bearerFormat: JWT
    api_key:
      type: apiKey
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      in: header
      name: X-API-KEY
    Scopes:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.

        [See more](https://developer.reworkly.com/docs/server)
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "/authorize"
          scopes: {}
    open_id_connect:
      type: openIdConnect
      openIdConnectUrl: https://{subdomain}/server/{version}/.well-known/openid-configuration
    cookie_auth:
      type: apiKey
      in: cookie
      name: JSESSIONID
